(self.webpackChunkng_base=self.webpackChunkng_base||[]).push([[179],{"./projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_checkbox_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/components/checkbox/checkbox.component.ts"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/CheckboxComponent",component:_checkbox_component__WEBPACK_IMPORTED_MODULE_1__.b,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.ez,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormsModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.ReactiveFormsModule]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={id:"default",name:"name",label:"Label",value:"value",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl}},"./projects/ng-base/base-components/components/input/input.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorInput:()=>ColorInput,DateAndTimeInput:()=>DateAndTimeInput,DateInput:()=>DateInput,Default:()=>Default,EmailInput:()=>EmailInput,FileInput:()=>FileInput,NumberInput:()=>NumberInput,PasswordInput:()=>PasswordInput,PhoneInput:()=>PhoneInput,SearchInput:()=>SearchInput,TimeInput:()=>TimeInput,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_input_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/components/input/input.component.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/InputComponent",component:_input_component__WEBPACK_IMPORTED_MODULE_1__.a,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.ez,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormsModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.ReactiveFormsModule]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Template=args=>({props:args}),Default=Template.bind({});Default.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl};const EmailInput=Template.bind({});EmailInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"email"};const PhoneInput=Template.bind({});PhoneInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"tel"};const FileInput=Template.bind({});FileInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"file"};const DateInput=Template.bind({});DateInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"date"};const DateAndTimeInput=Template.bind({});DateAndTimeInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"datetime-local"};const TimeInput=Template.bind({});TimeInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"time"};const ColorInput=Template.bind({});ColorInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"color"};const PasswordInput=Template.bind({});PasswordInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"password"};const SearchInput=Template.bind({});SearchInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"search"};const NumberInput=Template.bind({});NumberInput.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,type:"number"}},"./projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Loader/LoadingBarComponent",component:__webpack_require__("./projects/ng-base/base-components/index.ts").Nv,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.ez]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: start; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={}},"./projects/ng-base/base-components/components/select/select.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_select_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/components/select/select.component.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/SelectComponent",component:_select_component__WEBPACK_IMPORTED_MODULE_1__.H,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.ez,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormsModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.ReactiveFormsModule]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={id:"select",name:"name",label:"Label",placeholder:"Placeholder",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl,tabIndex:1,options:[{text:"Option 1",value:"option1"},{text:"Option 2",value:"option2"},{text:"Option 3",value:"option3"}]}},"./projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Avatar:()=>Avatar,Default:()=>Default,Rectangle:()=>Rectangle,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/index.ts"),_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/ng-base/shared/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Loader/SkeletonLoaderComponent",component:_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_1__.t$,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.ez]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Template=args=>({props:args}),Default=Template.bind({});Default.args={type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_2__.CC.LINE,size:5};const Avatar=Template.bind({});Avatar.args={type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_2__.CC.AVATAR,size:40};const Rectangle=Template.bind({});Rectangle.args={type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_2__.CC.RECTANGLE,size:200}},"./projects/ng-base/base-components/components/tags/tags.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithOptions:()=>WithOptions,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_tags_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/components/tags/tags.component.ts"),_angular_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/ng-base/base-components/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/TagsComponent",component:_tags_component__WEBPACK_IMPORTED_MODULE_1__.o,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.ez,_angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule,_angular_forms__WEBPACK_IMPORTED_MODULE_4__.ReactiveFormsModule,_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_2__.lu]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n             <div style="width: 100%">\n                ${story}\n            </div>\n         </div>`))],parameters:{layout:"fullscreen"}},Template=args=>({props:args}),Default=Template.bind({});Default.args={id:"default",label:"Label",name:"name",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl(["test"]),options:[]};const WithOptions=Template.bind({});WithOptions.args={id:"default",label:"Label",name:"name",custom:!1,removeByKey:!1,control:new _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControl([]),options:["test","bifi","chicken"]}},"./projects/ng-base/base-components/components/textarea/textarea.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_forms__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),_textarea_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/base-components/components/textarea/textarea.component.ts"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/TextareaComponent",component:_textarea_component__WEBPACK_IMPORTED_MODULE_1__.R,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.ez,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormsModule,_angular_forms__WEBPACK_IMPORTED_MODULE_3__.ReactiveFormsModule]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 40vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={id:"default",name:"name",label:"Label",control:new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl}},"./projects/ng-base/base-components/components/toast/toast.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>__WEBPACK_DEFAULT_EXPORT__});var tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/animations.mjs"),_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-base/shared/index.ts"),_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/ng-base/base-components/index.ts");let ToastWrapperComponent=class ToastWrapperComponent{constructor(toastService){this.toastService=toastService,this.position="bottom-right"}addInfo(){this.toastService.show({id:"info",type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.pC.INFO},5e3)}addSuccess(){this.toastService.show({id:"success",type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.pC.SUCCESS},5e3)}addWarning(){this.toastService.show({id:"info",type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.pC.WARNING},5e3)}addError(){this.toastService.show({id:"info",type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.pC.ERROR,errorCode:"ER007"},5e3)}};ToastWrapperComponent.ctorParameters=()=>[{type:_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.kl}],ToastWrapperComponent=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({template:'\n    <div class="w-100">\n      <base-toast [position]="position"></base-toast>\n\n      <div style="display: flex; flex-direction: row; justify-content: space-around;">\n        <button class="btn btn-danger" (click)="addError()">Show Error Toast</button>\n        <button class="btn btn-warning" (click)="addWarning()">Show Warning Toast</button>\n        <button class="btn btn-info" (click)="addInfo()">Show Info Toast</button>\n        <button class="btn btn-success" (click)="addSuccess()">Show Success Toast</button>\n      </div>\n    </div>\n  '})],ToastWrapperComponent);const __WEBPACK_DEFAULT_EXPORT__={title:"Services/ToastService",component:ToastWrapperComponent,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[ToastWrapperComponent],imports:[_lenne_tech_ng_base_base_components__WEBPACK_IMPORTED_MODULE_2__.lu,_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__.PW],providers:[_lenne_tech_ng_base_shared__WEBPACK_IMPORTED_MODULE_1__.kl]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 90vw;">\n            <div style="width: 100%">\n                ${story}\n            </div>\n        </div>`))],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({})},"./projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>forgot_password_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2020/testing.mjs"),base_components=__webpack_require__("./projects/ng-base/base-components/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),shared=__webpack_require__("./projects/ng-base/shared/index.ts"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs");let ForgotPasswordComponent=class ForgotPasswordComponent{constructor(formsService,userService,router){this.formsService=formsService,this.userService=userService,this.router=router}ngOnInit(){this.createForm()}createForm(){this.form=new fesm2020_forms.FormGroup({email:new fesm2020_forms.FormControl("",[fesm2020_forms.Validators.required,fesm2020_forms.Validators.email])})}submit(){if(this.loading=!0,this.form.invalid)return this.formsService.validateAllFormFields(this.form),void(this.loading=!1);this.userService.requestPasswordResetMail(this.form.get("email").value).subscribe({next:response=>{response?this.router.navigate(["/"]):this.error="Etwas ist schiefgelaufen. Bitte probiere es später erneut.",this.loading=!1},error:()=>{this.error="Etwas ist schiefgelaufen. Bitte probiere es später erneut.",this.loading=!1}})}};ForgotPasswordComponent.ctorParameters=()=>[{type:shared.s8},{type:shared.KD},{type:router.F0}],ForgotPasswordComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-forgot-password",template:'<div class="d-flex justify-content-center align-items-center h-100 py-5">\n  <div class="d-flex flex-column forgot-container">\n    <div class="container">\n      <form [formGroup]="form">\n        <div class="alert alert-danger" role="alert" *ngIf="error">\n          {{ error }}\n        </div>\n        <base-input\n          [id]="\'email\'"\n          [name]="\'email\'"\n          [label]="\'E-Mail Adresse\'"\n          [type]="\'email\'"\n          [autocomplete]="\'email\'"\n          [control]="form.get(\'email\')"\n        ></base-input>\n        <div class="d-grid gap-2 text-center">\n          <button class="btn btn-primary" (click)="submit()" *ngIf="!loading">E-Mail senden</button>\n          <button class="btn btn-primary" type="button" disabled *ngIf="loading">\n            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n            Loading...\n          </button>\n          <hr />\n          <a routerLink="../login">Bereits ein Konto? Dann logge Dich hier ein!</a>\n          <a routerLink="../registrieren">Noch kein Konto? Dann registiere Dich jetzt!</a>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n',styles:[".forgot-container {\n  width: 100%;\n  padding: 20px 0;\n}\n@media (min-width: 768px) {\n  .forgot-container {\n    max-width: 400px;\n  }\n}"]})],ForgotPasswordComponent);var of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");const forgot_password_component_stories={title:"Prototype/Pages/Forgot-Password",component:ForgotPasswordComponent,decorators:[(0,client.moduleMetadata)({imports:[common.ez,fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,base_components.lu,testing.Z.withRoutes([])],providers:[{provide:shared.KD,useClass:class MockUserService{requestPasswordResetMail(){return(0,of.of)(!1)}}}]})],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={}},"./projects/ng-base/base-prototype/pages/login/login.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>login_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),shared=__webpack_require__("./projects/ng-base/shared/index.ts");let LoginComponent=class LoginComponent{constructor(formsService,userService,router){this.formsService=formsService,this.userService=userService,this.router=router}ngOnInit(){this.createForm()}createForm(){this.form=new fesm2020_forms.FormGroup({email:new fesm2020_forms.FormControl("",[fesm2020_forms.Validators.required,fesm2020_forms.Validators.email]),password:new fesm2020_forms.FormControl("",fesm2020_forms.Validators.required)})}submit(){if(this.error="",this.loading=!0,this.form.invalid)return this.formsService.validateAllFormFields(this.form),this.scrollToTop(),void(this.loading=!1);this.userService.login(this.form.value).subscribe({next:response=>{response?(this.router.navigate(["/main"]),this.form.reset()):(this.error="Etwas ist schiefgelaufen. Bitte probiere es später erneut.",this.scrollToTop()),this.loading=!1},error:error=>{var _a,_b;this.error="Etwas ist schiefgelaufen. Bitte probiere es später erneut.",(null===(_a=null==error?void 0:error.message)||void 0===_a?void 0:_a.includes("Unauthorized"))&&(this.error="Dein Passwort ist leider falsch. Bitte überprüfe deine Eingabe!"),(null===(_b=null==error?void 0:error.message)||void 0===_b?void 0:_b.includes("Not user found"))&&(this.error="Es konnte kein Konto mit der E-Mail gefunden werden. Bitte gib eine gültige E-Mail ein!"),this.scrollToTop(),this.loading=!1}})}scrollToTop(){window.scrollTo({top:0,behavior:"smooth"})}};LoginComponent.ctorParameters=()=>[{type:shared.s8},{type:shared.KD},{type:router.F0}],LoginComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-login",template:'<div class="d-flex justify-content-center align-items-center h-100 py-5">\n  <div class="d-flex flex-column login-container">\n    <div class="container">\n      <form [formGroup]="form">\n        <div class="alert alert-danger" role="alert" *ngIf="error">\n          {{ error }}\n        </div>\n        <base-input\n          [id]="\'email\'"\n          [name]="\'email\'"\n          [label]="\'E-Mail Adresse\'"\n          [type]="\'email\'"\n          [control]="form.get(\'email\')"\n          [autocomplete]="\'email\'"\n        ></base-input>\n        <base-input\n          [id]="\'password\'"\n          [name]="\'password\'"\n          [label]="\'Passwort\'"\n          [type]="\'password\'"\n          [autocomplete]="\'current-password\'"\n          [control]="form.get(\'password\')"\n        ></base-input>\n        <div class="d-grid gap-2 text-center">\n          <button class="btn btn-primary" (click)="submit()" *ngIf="!loading">Einloggen</button>\n          <button class="btn btn-primary" type="button" disabled *ngIf="loading">\n            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n            Loading...\n          </button>\n          <hr />\n          <a routerLink="../passwort-vergessen">Passwort vergessen</a>\n          <a routerLink="../registrieren">Noch kein Konto? Dann registiere Dich jetzt!</a>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n',styles:[".login-container {\n  width: 100%;\n  padding: 20px 0;\n}\n@media (min-width: 768px) {\n  .login-container {\n    max-width: 400px;\n  }\n}"]})],LoginComponent);var testing=__webpack_require__("./node_modules/@angular/router/fesm2020/testing.mjs"),base_components=__webpack_require__("./projects/ng-base/base-components/index.ts"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");const login_component_stories={title:"Prototype/Pages/Login",component:LoginComponent,decorators:[(0,client.moduleMetadata)({imports:[common.ez,fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,base_components.lu,testing.Z.withRoutes([])],providers:[{provide:shared.KD,useClass:class MockUserService{login(){return(0,of.of)(!1)}}}]})],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={}},"./projects/ng-base/base-prototype/pages/register/register.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>register_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2020/testing.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),shared=__webpack_require__("./projects/ng-base/shared/index.ts"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs");let RegisterComponent=class RegisterComponent{constructor(formsService,userService,router){this.formsService=formsService,this.userService=userService,this.router=router}ngOnInit(){this.createForm()}createForm(){this.form=new fesm2020_forms.FormGroup({firstName:new fesm2020_forms.FormControl("",[fesm2020_forms.Validators.required]),lastName:new fesm2020_forms.FormControl("",[fesm2020_forms.Validators.required]),email:new fesm2020_forms.FormControl("",[fesm2020_forms.Validators.required,fesm2020_forms.Validators.email]),password:new fesm2020_forms.FormControl("",fesm2020_forms.Validators.required),passwordConfirm:new fesm2020_forms.FormControl("",fesm2020_forms.Validators.required),privacy:new fesm2020_forms.FormControl(!1,fesm2020_forms.Validators.requiredTrue)},{validators:[shared.iA.match("password","passwordConfirm")]})}submit(){if(this.error="",this.loading=!0,this.form.invalid)return this.formsService.validateAllFormFields(this.form),this.scrollToTop(),void(this.loading=!1);const input=this.form.value;delete input.privacy,this.userService.register(input).subscribe({next:auth=>{auth?this.router.navigate(["/main"]):(this.error="Etwas ist schiefgelaufen. Bitte probiere es später erneut.",this.scrollToTop()),this.loading=!1},error:err=>{var _a;(null===(_a=null==err?void 0:err.message)||void 0===_a?void 0:_a.includes("already exists"))&&(this.error="Mit dieser E-Mail gibt es bereits ein Konto. Bitte wähle eine andere E-Mail Adresse oder logge dich mit deinem Passwort ein.",this.scrollToTop()),this.loading=!1}})}scrollToTop(){window.scrollTo({top:0,behavior:"smooth"})}};RegisterComponent.ctorParameters=()=>[{type:shared.s8},{type:shared.KD},{type:router.F0}],RegisterComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-register",template:'<div class="d-flex justify-content-center align-items-center h-100 py-5">\n  <div class="d-flex flex-column register-container">\n    <div class="container">\n      <form [formGroup]="form">\n        <div id="register-error" class="alert alert-danger" role="alert" *ngIf="error">\n          {{ error }}\n        </div>\n        <base-input\n          [id]="\'firstName\'"\n          [name]="\'firstName\'"\n          [label]="\'Vorname\'"\n          [type]="\'text\'"\n          [control]="form.get(\'firstName\')"\n          [autocomplete]="\'given-name\'"\n        ></base-input>\n        <base-input\n          [id]="\'lastName\'"\n          [name]="\'lastName\'"\n          [label]="\'Nachname\'"\n          [type]="\'text\'"\n          [control]="form.get(\'lastName\')"\n          [autocomplete]="\'family-name\'"\n        ></base-input>\n        <base-input\n          [id]="\'email\'"\n          [name]="\'email\'"\n          [label]="\'E-Mail Adresse\'"\n          [type]="\'email\'"\n          [control]="form.get(\'email\')"\n          [autocomplete]="\'email\'"\n        ></base-input>\n        <base-input\n          [id]="\'password\'"\n          [name]="\'password\'"\n          [label]="\'Passwort\'"\n          [type]="\'password\'"\n          [autocomplete]="\'new-password\'"\n          [control]="form.get(\'password\')"\n        ></base-input>\n        <base-input\n          [id]="\'password-confirm\'"\n          [name]="\'password-confirm\'"\n          [label]="\'Passwort bestätigen\'"\n          [autocomplete]="\'new-password\'"\n          [type]="\'password\'"\n          [control]="form.get(\'passwordConfirm\')"\n        ></base-input>\n        <base-checkbox [id]="\'privacy\'" [control]="form.get(\'privacy\')">\n          Hiermit bestätige ich, dass ich die <a routerLink="/datenschutz">Datenschutzerklärung</a> gelesen habe und\n          akzeptiere.\n        </base-checkbox>\n        <div class="d-grid gap-2 text-center">\n          <button class="btn btn-primary" (click)="submit()" *ngIf="!loading">Registrieren</button>\n          <button class="btn btn-primary" type="button" disabled *ngIf="loading">\n            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n            Loading...\n          </button>\n          <hr />\n          <a routerLink="../login">Bereits ein Konto? Dann logge Dich hier ein!</a>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n',styles:[".register-container {\n  width: 100%;\n  padding: 20px 0;\n}\n@media (min-width: 768px) {\n  .register-container {\n    max-width: 400px;\n  }\n}"]})],RegisterComponent);var base_components=__webpack_require__("./projects/ng-base/base-components/index.ts"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");const register_component_stories={title:"Prototype/Pages/Register",component:RegisterComponent,decorators:[(0,client.moduleMetadata)({imports:[common.ez,fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,base_components.lu,testing.Z.withRoutes([])],providers:[{provide:shared.KD,useClass:class MockUserService{register(){return(0,of.of)(!1)}}}]})],parameters:{layout:"fullscreen"}},Default=(args=>({props:args})).bind({});Default.args={}},"./projects/ng-base/base-components/components/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{b:()=>CheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let CheckboxComponent=class CheckboxComponent{constructor(){this.required=!1}};CheckboxComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],value:[{type:core.Input}],control:[{type:core.Input}],required:[{type:core.Input}]},CheckboxComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-checkbox",template:'<div class="form-check">\n  <input\n    class="form-check-input"\n    type="checkbox"\n    [formControl]="control"\n    [required]="required"\n    [value]="value"\n    [id]="id"\n    [name]="name"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n  />\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }">\n    <ng-container *ngIf="label">\n      {{ label }}\n    </ng-container>\n    <ng-content></ng-content>\n  </label>\n\n  <div class="invalid-feedback ms-0 m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}']})],CheckboxComponent)},"./projects/ng-base/base-components/components/input/input.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>InputComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let InputComponent=class InputComponent{constructor(){this.placeholder="",this.type="text",this.required=!1}};InputComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],autocomplete:[{type:core.Input}],tabIndex:[{type:core.Input}],control:[{type:core.Input}],type:[{type:core.Input}],required:[{type:core.Input}]},InputComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-input",template:'<div class="form-group mb-3">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n  <input\n    [id]="id"\n    [name]="name"\n    class="form-control"\n    [type]="type"\n    [formControl]="control"\n    [required]="required"\n    [placeholder]="placeholder"\n    [autocomplete]="autocomplete ?? null"\n    [tabIndex]="tabIndex ?? null"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n  />\n\n  <div class="invalid-feedback m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n    <div *ngIf="control?.errors?.[\'minlength\']">\n      Die Mindestlänge für dieses Feld beträgt\n      {{control.errors?.[\'minlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'maxlength\']">\n      Die maximale Länge für dieses Feld beträgt\n      {{control.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'email\']">Bitte eine gültige E-Mail Adresse angeben.</div>\n    <div *ngIf="control?.errors?.[\'matching\']">Die Passwörter müssen überein stimmen.</div>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}']})],InputComponent)},"./projects/ng-base/base-components/components/select/select.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H:()=>SelectComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let SelectComponent=class SelectComponent{constructor(){this.placeholder="",this.required=!1,this.multiple=!1,this.search=!1,this.options=[]}};SelectComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],control:[{type:core.Input}],tabIndex:[{type:core.Input}],required:[{type:core.Input}],multiple:[{type:core.Input}],search:[{type:core.Input}],options:[{type:core.Input}]},SelectComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-select",template:'<div class="form-group mb-3">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n  <select\n    [id]="id"\n    [name]="name"\n    class="form-select"\n    [attr.aria-label]="placeholder"\n    [attr.data-live-search]="search"\n    [formControl]="control"\n    [required]="required"\n    [tabIndex]="tabIndex ?? null"\n    [multiple]="multiple"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n  >\n    <option [ngValue]="null" selected>{{ placeholder }}</option>\n    <option *ngFor="let option of options" [ngValue]="option.value">\n      {{ option.text }}\n    </option>\n  </select>\n\n  <div class="invalid-feedback m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n    <div *ngIf="control?.errors?.[\'minlength\']">\n      Die Mindestlänge für dieses Feld beträgt\n      {{control?.errors?.[\'minlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'maxlength\']">\n      Die maximale Länge für dieses Feld beträgt\n      {{control?.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'email\']">Bitte eine gültige E-Mail Adresse angeben.</div>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}']})],SelectComponent)},"./projects/ng-base/base-components/components/tags/tags.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>TagsComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let TagsComponent=class TagsComponent{constructor(){this.label="",this.placeholder="",this.options=[],this.custom=!0,this.removeByKey=!0,this.required=!1,this.inputValue=""}enterKey(event){!this.removeByKey||"Backspace"!==event.code||this.inputValue?"Comma"!==event.code&&"Space"!==event.code&&"Enter"!==event.code||this.addTag(this.inputValue):this.removeTag()}addTag(tag){var _a;if(this.control.value||this.control.setValue([]),this.selectedElement=null,(tag.endsWith(",")||tag.endsWith(" "))&&(tag=tag.slice(0,-1)),this.custom||this.options.find((e=>e===tag)))return 0===(null===(_a=this.control.value)||void 0===_a?void 0:_a.length)?(this.control.setValue([tag]),this.inputValue="",void this.control.setErrors(null)):void(tag.length>0&&this.control.value&&!this.control.value.some((item=>item===tag))&&(this.control.setValue([...this.control.value,tag]),this.inputValue="",this.control.setErrors(null)))}removeTag(tag){this.selectedElement=null,tag?this.control.setValue(this.control.value.filter((item=>item!==tag))):this.control.value.splice(-1),0===this.control.value.length&&this.control.setErrors({required:!0})}filterOptions(){return this.options?this.options.filter((e=>(null==e?void 0:e.includes(this.inputValue))&&!this.control.value.includes(e))):[]}onFocus(event){event?this.selectedElement=event.target:setTimeout((()=>{this.selectedElement=null}),250)}};TagsComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],autocomplete:[{type:core.Input}],tabIndex:[{type:core.Input}],control:[{type:core.Input}],options:[{type:core.Input}],custom:[{type:core.Input}],removeByKey:[{type:core.Input}],required:[{type:core.Input}]},TagsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-tags",template:'<div class="form-group position-relative" *ngIf="control">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n\n  <div class="tag-wrapper" *ngIf="control?.value">\n    <div class="tag" *ngFor="let tag of control?.value">\n      {{ tag }}\n      <span (click)="removeTag(tag)"><i class="bi bi-x-circle"></i></span>\n    </div>\n  </div>\n  <input\n    [id]="id"\n    [name]="name"\n    [placeholder]="placeholder"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n    [(ngModel)]="inputValue"\n    [autocomplete]="autocomplete ?? null"\n    [tabIndex]="tabIndex ?? null"\n    (focus)="onFocus($event)"\n    (blur)="onFocus()"\n    type="text"\n    class="form-control"\n    (keyup)="enterKey($event)"\n  />\n\n  <div class="tag-options" *ngIf="options && selectedElement">\n    <div class="tag-option-item" *ngFor="let option of filterOptions()" (click)="addTag(option)">{{ option }}</div>\n  </div>\n\n  <div class="invalid-feedback m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}\n\n.tag-options {\n  position: absolute;\n  display: block;\n  top: 100%;\n  left: 0;\n  right: 0;\n  border-top: 0;\n  background-color: #fff;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n  transition: all 0.5s;\n  z-index: 999;\n}\n\n.tag-options .tag-option-item {\n  padding: 10px;\n  cursor: pointer;\n}\n\n.tag-options .tag-option-item:hover {\n  color: var(--bs-primary);\n}\n\n.tag-wrapper {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  column-gap: 10px;\n  row-gap: 10px;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  position: relative;\n}\n\n.tag-wrapper .tag {\n  background-color: var(--bs-light);\n  color: var(--bs-dark);\n  padding: 10px 15px;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 14px;\n  line-height: 140%;\n}\n\n.tag-wrapper .tag span {\n  margin-left: 20px;\n  cursor: pointer;\n}\n\n.tag-wrapper .tag span .bi {\n  color: var(--bs-black);\n}\n\n.tag-wrapper .tag span .bi:before {\n  vertical-align: -0.175em;\n}']})],TagsComponent)},"./projects/ng-base/base-components/components/textarea/textarea.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>TextareaComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let TextareaComponent=class TextareaComponent{constructor(){this.label="",this.placeholder="",this.rows=5,this.required=!1}};TextareaComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],control:[{type:core.Input}],rows:[{type:core.Input}],required:[{type:core.Input}],tabIndex:[{type:core.Input}]},TextareaComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-textarea",template:'<div class="form-group mb-3">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n  <textarea\n    class="form-control"\n    [id]="id"\n    [name]="name"\n    [rows]="rows"\n    [placeholder]="placeholder"\n    [formControl]="control"\n    [tabIndex]="tabIndex ?? null"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n  ></textarea>\n\n  <div class="invalid-feedback m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n    <div *ngIf="control?.errors?.[\'minlength\']">\n      Die Mindestlänge für dieses Feld beträgt\n      {{control?.errors?.[\'minlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'maxlength\']">\n      Die maximale Länge für dieses Feld beträgt\n      {{control?.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\n    </div>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}']})],TextareaComponent)},"./projects/ng-base/base-components/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{lu:()=>BaseComponentsModule,Nv:()=>LoadingBarComponent,t$:()=>SkeletonLoaderComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),input_component=__webpack_require__("./projects/ng-base/base-components/components/input/input.component.ts"),select_component=__webpack_require__("./projects/ng-base/base-components/components/select/select.component.ts"),checkbox_component=__webpack_require__("./projects/ng-base/base-components/components/checkbox/checkbox.component.ts"),textarea_component=__webpack_require__("./projects/ng-base/base-components/components/textarea/textarea.component.ts");var animations=__webpack_require__("./node_modules/@angular/animations/fesm2020/animations.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),shared=__webpack_require__("./projects/ng-base/shared/index.ts");const toastAnimation=(0,animations.X$)("toastAnimation",[(0,animations.eR)("* <=> *",[(0,animations.IO)(":enter",[(0,animations.oB)({transform:"translateX(100%)"}),(0,animations.jt)("200ms ease-in",(0,animations.oB)({transform:"translateX(0%)"}))],{optional:!0}),(0,animations.IO)(":leave",(0,animations.jt)("200ms ease-in",(0,animations.oB)({transform:"translateX(100%)"})),{optional:!0})])]);let ToastComponent=class ToastComponent{constructor(toastService){this.toastService=toastService,this.toasts=[],this.ToastType=shared.pC,this.subscriptions=new Subscription.w0,this.position="bottom-right"}ngOnInit(){this.subscriptions.add(this.toastService.toastsAsObservable.subscribe({next:value=>{this.toasts=value}}))}ngOnDestroy(){this.subscriptions.unsubscribe()}getDefaultTitle(toast){switch(toast.type){case shared.pC.ERROR:return"Irgendetwas ist schiefgelaufen";case shared.pC.INFO:return"Info";case shared.pC.WARNING:return"Achtung";case shared.pC.SUCCESS:return"Erfolgreich"}}getDefaultDescription(toast){switch(toast.type){case shared.pC.ERROR:return"Sollte das Problem länger bestehen bleiben, dann wenden Sie sich bitte\n        an den Support.";case shared.pC.INFO:return"Info";case shared.pC.WARNING:return"Warning";case shared.pC.SUCCESS:return"Die Änderungen wurden erfolgreich gespeichert."}}reload(){location.reload()}};ToastComponent.ctorParameters=()=>[{type:shared.kl}],ToastComponent.propDecorators={position:[{type:core.Input}]},ToastComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-toast",template:'<div class="toast-wrapper" [ngClass]="position">\n  <div class="toast-container" [@toastAnimation]="toasts.length">\n    <div\n      class="toast show"\n      role="alert"\n      aria-live="assertive"\n      aria-atomic="true"\n      *ngFor="let toast of toasts"\n      [ngClass]="toast.type"\n    >\n      <div class="toast-header">\n        <strong class="me-auto">{{ toast?.title ?? getDefaultTitle(toast) }}</strong>\n        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>\n      </div>\n      <div class="toast-body">\n        {{ toast?.description ?? getDefaultDescription(toast) }}\n\n        <div class="mt-2" *ngIf="toast?.errorCode">\n          <code>ERROR: {{ toast.errorCode }}</code>\n        </div>\n\n        <div class="mt-2" *ngIf="toast.type === ToastType.ERROR">\n          <a class="color-secondary" href="#" (click)="reload()">Seite neu laden</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',animations:[toastAnimation],styles:[":host {\n  --base-toast-z-index: 999;\n}\n\n.toast-wrapper {\n  position: fixed;\n  padding: 10px;\n  z-index: var(--base-toast-z-index);\n}\n\n.bottom-right {\n  bottom: 0;\n  right: 0;\n}\n\n.top-right {\n  top: 0;\n  right: 0;\n}\n\n.toast {\n  border-radius: 0;\n  border: 0;\n}\n\n.toast a {\n  text-decoration: none;\n  font-weight: 600;\n}\n\n.toast .toast-header {\n  border-radius: 0;\n}\n\n.error .toast-header {\n  background-color: var(--bs-danger);\n  color: var(--bs-white);\n}\n\n.warning .toast-header {\n  background-color: var(--bs-warning);\n  color: var(--bs-white);\n}\n\n.info .toast-header {\n  background-color: var(--bs-info);\n  color: var(--bs-white);\n}\n\n.success .toast-header {\n  background-color: var(--bs-success);\n  color: var(--bs-white);\n}"]})],ToastComponent);var tags_component=__webpack_require__("./projects/ng-base/base-components/components/tags/tags.component.ts");let LoadingBarComponent=class LoadingBarComponent{};LoadingBarComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-loading-bar",template:'<div class="slider">\n  <div class="line"></div>\n  <div class="subline inc"></div>\n  <div class="subline dec"></div>\n</div>\n',styles:[":host {\n  --base-loading-bar-color: #f28c18;\n  --base-loading-bar-height: 5px;\n  --base-loading-bar-z-index: 999999999;\n}\n\n.slider {\n  position: fixed;\n  left: 0;\n  right: 0;\n  height: var(--base-loading-bar-height);\n  overflow-x: hidden;\n  z-index: var(--base-loading-bar-z-index);\n  background-color: white;\n}\n\n.line {\n  position: absolute;\n  opacity: 0.6;\n  background: var(--base-loading-bar-color);\n  width: 150%;\n  height: var(--base-loading-bar-height);\n}\n\n.subline {\n  position: absolute;\n  background: var(--base-loading-bar-color);\n  height: var(--base-loading-bar-height);\n}\n\n.inc {\n  animation: increase 2s infinite;\n}\n\n.dec {\n  animation: decrease 2s 0.5s infinite;\n}\n\n@keyframes increase {\n  from {\n    left: -5%;\n    width: 5%;\n  }\n  to {\n    left: 130%;\n    width: 100%;\n  }\n}\n\n@keyframes decrease {\n  from {\n    left: -80%;\n    width: 80%;\n  }\n  to {\n    left: 110%;\n    width: 10%;\n  }\n}"]})],LoadingBarComponent);let SkeletonLoaderComponent=class SkeletonLoaderComponent{constructor(){this.count=1,this.size=18}convertToArray(value){if(!value)return[];const res=[];for(let i=0;i<value;i++)res.push(i);return console.log(res),res}};SkeletonLoaderComponent.propDecorators={type:[{type:core.Input}],count:[{type:core.Input}],size:[{type:core.Input}]},SkeletonLoaderComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-skeleton-loader",template:'<ng-container *ngIf="type" [ngSwitch]="type">\n  <div *ngSwitchCase="\'LINE\'">\n    <div class="line-loader-wrapper">\n      <div class="line-loader" *ngFor="let key of convertToArray(count)"></div>\n    </div>\n  </div>\n\n  <div *ngSwitchCase="\'RECTANGLE\'">\n    <div class="line-rectangle" [ngStyle]="{ height: size + \'px\' }"></div>\n  </div>\n\n  <div *ngSwitchCase="\'AVATAR\'">\n    <div class="line-avatar" [ngStyle]="{ height: size + \'px\', width: size + \'px\' }"></div>\n  </div>\n</ng-container>\n',styles:["@keyframes shine {\n  to {\n    background-position-x: -200%;\n  }\n}\n.line-loader-wrapper > :not(:first-of-type) {\n  margin-top: 10px;\n}\n.line-loader-wrapper .line-loader {\n  background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);\n  background-size: 200% 100%;\n  animation: 1.5s shine linear infinite;\n  height: 18px;\n  border-radius: 5px;\n}\n.line-rectangle {\n  background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);\n  background-size: 200% 100%;\n  animation: 1.5s shine linear infinite;\n  border-radius: 5px;\n}\n.line-avatar {\n  background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);\n  background-size: 200% 100%;\n  animation: 1.5s shine linear infinite;\n  border-radius: 50%;\n}"]})],SkeletonLoaderComponent);let BreadcrumbComponent=class BreadcrumbComponent{constructor(breadcrumbService){this.breadcrumbService=breadcrumbService,this.breadcrumbs$=breadcrumbService.breadcrumbsObservable}};BreadcrumbComponent.ctorParameters=()=>[{type:shared.pm}],BreadcrumbComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-breadcrumb",template:'<ul class="pt-3">\n  <li *ngFor="let breadcrumb of breadcrumbs$ | async">\n    <a [routerLink]="breadcrumb.url">{{ breadcrumb.label }}</a>\n  </li>\n</ul>\n',styles:['ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nul li {\n  display: inline;\n}\nul li:before {\n  content: ">";\n  margin: 0 6px;\n}\nul li:first-child:before {\n  content: "";\n  margin: 0;\n}']})],BreadcrumbComponent);let ModelTableComponent=class ModelTableComponent{constructor(graphQLMetaService,graphQLService){this.graphQLMetaService=graphQLMetaService,this.graphQLService=graphQLService,this.createMode=!1,this.create=!0,this.update=!0,this.delete=!0,this.config={},this.fieldConfig={},this.idSelected=new core.EventEmitter,this.createModeChanged=new core.EventEmitter,this.tableFields={id:{label:"ID"},name:{label:"Name"},title:{label:"Titel"},description:{label:"Beschreibung"},email:{label:"E-Mail"},createdAt:{label:"Erstellt am"},updatedAt:{label:"Bearbeitet am"}},this.objects=[],this.availableFields=[],this.selectedId=""}ngOnInit(){this.graphQLMetaService.getMeta().subscribe((meta=>{this.meta=meta,this.modelName&&this.init(),this.objectId&&(this.selectedId=this.objectId)}))}ngOnChanges(changes){var _a;changes.modelName&&this.meta&&this.init(),changes.objectId&&this.meta&&this.selectedId!==this.objectId&&((null===(_a=this.config)||void 0===_a?void 0:_a.logging)&&console.log("ModelTableComponent::ngOnChanges->selectedId",this.selectedId),this.selectedId=this.objectId)}init(){var _a,_b;this.availableFields=[],(null===(_a=this.config)||void 0===_a?void 0:_a.tableFields)&&(this.tableFields=this.config.tableFields);const possibleFields=this.meta.getFields("find"+this.capitalizeFirstLetter(this.modelName)+"s"),keys=Object.keys(possibleFields),tableFieldKeys=Object.keys(this.tableFields);null==tableFieldKeys||tableFieldKeys.forEach((field=>{keys.includes(field)&&this.availableFields.push(field)})),(null===(_b=this.config)||void 0===_b?void 0:_b.logging)&&(console.log("ModelTableComponent::init->possibleFields",possibleFields),console.log("ModelTableComponent::init->keys",keys),console.log("ModelTableComponent::init->availableFields",this.availableFields)),this.loadObjects(this.availableFields)}createNewObject(){this.createMode=!0,this.createModeChanged.emit(!0)}loadObjects(fields){this.objects=[],this.graphQLService.graphQl("find"+this.capitalizeFirstLetter(this.modelName)+"s",{fields,type:shared.pF.QUERY}).subscribe({next:value=>{var _a;(null===(_a=this.config)||void 0===_a?void 0:_a.logging)&&console.log("ModelTableComponent::loadObjects->value",value),this.objects=value},error:err=>{console.log("Error on loading objects",err)}})}selectId(object){object||(this.createMode=!1,this.createModeChanged.emit(!1)),this.update&&(this.selectedId=object.id,this.idSelected.emit(this.selectedId))}capitalizeFirstLetter(value){return value.charAt(0).toUpperCase()+value.slice(1)}};ModelTableComponent.ctorParameters=()=>[{type:shared.p8},{type:shared.ti}],ModelTableComponent.propDecorators={modelName:[{type:core.Input}],objectId:[{type:core.Input}],createMode:[{type:core.Input}],create:[{type:core.Input}],update:[{type:core.Input}],delete:[{type:core.Input}],config:[{type:core.Input}],fieldConfig:[{type:core.Input}],idSelected:[{type:core.Output}],createModeChanged:[{type:core.Output}]},ModelTableComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-model-table",template:'<div *ngIf="!selectedId && !createMode">\n  <div class="w-100 d-flex flex-row justify-content-between mb-4">\n    <h2 *ngIf="modelName">\n      {{ config?.plural ? config?.plural : config?.label ? config?.label : capitalizeFirstLetter(modelName) + \'s\' }}\n    </h2>\n    <div class="d-flex align-items-center">\n      <button class="btn btn-primary" (click)="createNewObject()" *ngIf="create">Erstellen</button>\n    </div>\n  </div>\n  <table class="table table-hover table-responsive bg-white">\n    <thead>\n      <tr>\n        <th scope="col" *ngFor="let field of availableFields">\n          {{ tableFields[field]?.label ? tableFields[field]?.label : capitalizeFirstLetter(field) }}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor="let object of objects">\n        <td class="cursor-pointer" *ngFor="let field of availableFields" (click)="selectId(object)">\n          {{ object[field] }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div class="w-100" *ngIf="selectedId || createMode">\n  <button class="btn btn-outline-primary mb-3" (click)="selectId(\'\')">Zurück</button>\n  <base-model-form\n    [modelName]="modelName"\n    [label]="config?.label"\n    [config]="fieldConfig"\n    [logging]="config?.logging"\n    [id]="selectedId"\n    (finished)="selectId(\'\')"\n    [delete]="delete"\n  ></base-model-form>\n</div>\n',styles:[".cursor-pointer {\n  cursor: pointer;\n}\n\n.table > :not(:first-child) {\n  border-top: 0;\n}\n\ntable {\n  border-radius: 0.25rem;\n  border-color: #e2e8f0 !important;\n}\n\ntable thead {\n  text-transform: uppercase;\n  font-size: 12px;\n}\n\ntable thead th {\n  padding: 12px 24px;\n}\n\ntable tbody tr td {\n  font-weight: normal !important;\n  font-size: 16px;\n  padding: 16px 24px;\n}"]})],ModelTableComponent);let ModelFormComponent=class ModelFormComponent{constructor(graphQLMetaService,graphQLService,formsService){this.graphQLMetaService=graphQLMetaService,this.graphQLService=graphQLService,this.formsService=formsService,this.delete=!0,this.logging=!1,this.config={},this.finished=new core.EventEmitter,this.loading=!1,this.keys=[]}ngOnInit(){this.graphQLMetaService.getMeta().subscribe((meta=>{this.meta=meta,this.modelName&&this.init()}))}ngOnChanges(changes){(changes.modelName||changes.value)&&this.init()}init(){this.modelName&&this.meta&&(this.operation=this.id?"update":"create",this.fields=this.meta.getArgs(this.operation+this.capitalizeFirstLetter(this.modelName),{type:shared.pF.MUTATION}),this.fields=this.fields.input,this.keys=Object.keys(this.fields),this.logging&&(console.log("ModelFormComponent::init->fields",this.fields),console.log("ModelFormComponent::init->keys",this.keys)),this.form=this.createForm(this.fields),this.id&&this.getObjectById(this.id))}getKeysFromSubObject(key){return Object.keys(this.fields[key])}getObjectById(id){this.logging&&(console.log("ModelFormComponent::getObjectById->id",id),console.log("ModelFormComponent::getObjectById->requestFields",this.createRequestObject(this.fields))),this.graphQLService.graphQl("get"+this.capitalizeFirstLetter(this.modelName),{arguments:{id},fields:this.createRequestObject(this.fields),type:shared.pF.QUERY}).subscribe({next:value=>{this.logging&&console.log("ModelFormComponent::get->value",value),this.form.patchValue(Object.assign({},value))},error:err=>{console.error("Error on load object",err),this.finished.emit(!1)}})}createRequestObject(fields){var _a;const requestFields=[];for(const[key,value]of Object.entries(fields))if(null===(_a=fields[key])||void 0===_a?void 0:_a.type)requestFields.push(key);else{const subkeys=this.createRequestObject(fields[key]),resultObject={};resultObject[key]=subkeys,requestFields.push(resultObject)}return requestFields}createForm(fields){var _a,_b;const group={};for(const[key,value]of Object.entries(fields))(null===(_a=fields[key])||void 0===_a?void 0:_a.type)?group[key]=new fesm2020_forms.FormControl("Float"===(null===(_b=fields[key])||void 0===_b?void 0:_b.type)?0:"",value.isRequired?fesm2020_forms.Validators.required:[]):group[key]=this.createForm(fields[key]);return new fesm2020_forms.FormGroup(group)}deleteObject(){confirm("Möchtest du das Objekt wirklich löschen?")&&this.graphQLService.graphQl("delete"+this.capitalizeFirstLetter(this.modelName),{arguments:{id:this.id},fields:["id"],type:shared.pF.MUTATION}).subscribe({next:value=>{this.finished.emit(!0)},error:err=>{console.error("Error on delete object",err)}})}capitalizeFirstLetter(value){return value.charAt(0).toUpperCase()+value.slice(1)}transformToControl(control){return control}submit(){return this.loading=!0,this.form.invalid?(this.formsService.validateAllFormFields(this.form),void(this.loading=!1)):"update"!==this.operation||this.id?(this.logging&&console.log("ModelFormComponent::submit->formValue",this.form.value),void this.graphQLService.graphQl(this.operation+this.capitalizeFirstLetter(this.modelName),{arguments:"update"===this.operation?{id:this.id,input:this.form.value}:{input:this.form.value},fields:["id"],type:shared.pF.MUTATION}).subscribe({next:value=>{this.loading=!1,this.finished.emit(!0)},error:err=>{console.error("Failed on "+this.operation,err),this.loading=!1}})):(console.error("ID is missing for update!"),void(this.loading=!1))}};ModelFormComponent.ctorParameters=()=>[{type:shared.p8},{type:shared.ti},{type:shared.s8}],ModelFormComponent.propDecorators={modelName:[{type:core.Input}],label:[{type:core.Input}],id:[{type:core.Input}],delete:[{type:core.Input}],logging:[{type:core.Input}],config:[{type:core.Input}],finished:[{type:core.Output}]},ModelFormComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-model-form",template:'<div class="w-100" *ngIf="form">\n  <h2>\n    {{ label ? label : capitalizeFirstLetter(modelName) }} {{ operation === \'update\' ? \'bearbeiten\' : \'erstellen\' }}\n  </h2>\n\n  <form [formGroup]="form">\n    <base-model-form-sub [fields]="fields" [config]="config" [form]="form"></base-model-form-sub>\n\n    <div class="d-flex mt-4" [ngClass]="id && delete ? \'justify-content-between\' : \'justify-content-end\'">\n      <div *ngIf="id && delete">\n        <button class="btn btn-danger" type="button" (click)="deleteObject()">Löschen</button>\n      </div>\n      <div>\n        <button class="btn btn-primary" type="button" (click)="submit()" *ngIf="!loading">\n          {{ operation === \'create\' ? \'Erstellen\' : \'Speichern\' }}\n        </button>\n        <button class="btn btn-primary" type="button" disabled *ngIf="loading">\n          <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n          {{ operation === \'create\' ? \'Erstellen\' : \'Speichern\' }}...\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n',styles:[""]})],ModelFormComponent);let ModelFormSubComponent=class ModelFormSubComponent{constructor(authService){this.authService=authService,this.config={},this.keys=[]}ngOnInit(){this.keys=Object.keys(this.fields),this.user=this.authService.currentUser}capitalizeFirstLetter(value){return value.charAt(0).toUpperCase()+value.slice(1)}transformToControl(control){return control}};ModelFormSubComponent.ctorParameters=()=>[{type:shared.e8}],ModelFormSubComponent.propDecorators={fields:[{type:core.Input}],form:[{type:core.Input}],config:[{type:core.Input}]},ModelFormSubComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-model-form-sub",template:'<div class="mt-3" *ngFor="let key of keys">\n  <ng-container *ngIf="!fields[key]?.type && (fields[key]?.roles ? user?.hasAllRoles(fields[key]?.roles) : true)">\n    <fieldset class="border rounded-3 p-3">\n      <legend class="float-none w-auto px-3">\n        {{ config[key]?.label ? config[key].label : capitalizeFirstLetter(key) }}\n      </legend>\n      <base-model-form-sub\n        [fields]="fields[key]"\n        [config]="config[key]?.fields || {}"\n        [form]="form.get(key)"\n      ></base-model-form-sub>\n    </fieldset>\n  </ng-container>\n\n  <ng-container *ngIf="fields[key]?.type && (fields[key]?.roles ? user?.hasAllRoles(fields[key]?.roles) : true)">\n    <ng-container [ngSwitch]="config[key]?.type ? config[key]?.type : fields[key]?.type">\n      <ng-container *ngSwitchCase="\'String\'">\n        <ng-container *ngIf="fields[key]?.isList && !config[key]?.exclude">\n          <base-tags\n            [id]="key"\n            [name]="key"\n            [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n            [placeholder]="config[key]?.placeholder || \'\'"\n            [control]="transformToControl(form?.get(key))"\n            [required]="fields[key].isRequired"\n          ></base-tags>\n        </ng-container>\n\n        <ng-container *ngIf="!fields[key]?.isList && !config[key]?.exclude">\n          <base-input\n            [id]="key"\n            [name]="key"\n            [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n            [placeholder]="config[key]?.placeholder || \'\'"\n            [type]="\'text\'"\n            [control]="transformToControl(form?.get(key))"\n            [required]="fields[key].isRequired"\n          ></base-input>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngSwitchCase="\'Image\'">\n        <base-upload-image\n          [id]="key"\n          [name]="key"\n          [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n          [control]="transformToControl(form?.get(key))"\n          [url]="config[key]?.url"\n          [path]="config[key]?.path || \'/files/\'"\n          [uploadPath]="config[key]?.uploadPath || \'/files/upload\'"\n          [deletePath]="config[key]?.deletePath || \'/files/\'"\n          [supportText]="config[key]?.supportText || \'Unterstützte Formate: JPEG, JPG, PNG\'"\n          [dragText]="config[key]?.dragText || \'Drag & Drop\'"\n          [validExtensions]="config[key]?.validExtensions || [\'image/jpeg\', \'image/jpg\', \'image/png\']"\n          [required]="fields[key].isRequired"\n        ></base-upload-image>\n      </ng-container>\n\n      <ng-container *ngSwitchCase="\'Reference\'">\n        <base-refence-input\n          [id]="key"\n          [name]="key"\n          [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n          [control]="transformToControl(form?.get(key))"\n          [method]="config[key]?.method || \'find\'"\n          [fields]="config[key]?.fields || [\'id\', \'name\']"\n          [valueField]="config[key]?.valueField || \'id\'"\n          [nameField]="config[key]?.nameField || \'name\'"\n          [required]="fields[key].isRequired"\n        ></base-refence-input>\n      </ng-container>\n\n      <ng-container *ngSwitchCase="\'Boolean\'">\n        <base-checkbox\n          [id]="key"\n          [name]="key"\n          [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n          [control]="transformToControl(form?.get(key))"\n          [required]="fields[key].isRequired"\n        ></base-checkbox>\n      </ng-container>\n\n      <ng-container *ngSwitchCase="\'Float\'">\n        <base-input\n          [id]="key"\n          [name]="key"\n          [type]="\'number\'"\n          [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n          [placeholder]="config[key]?.placeholder || \'\'"\n          [control]="transformToControl(form?.get(key))"\n          [required]="fields[key].isRequired"\n        ></base-input>\n      </ng-container>\n\n      <ng-container *ngSwitchCase="\'DateTime\'">\n        <base-input\n          [id]="key"\n          [name]="key"\n          [label]="config[key]?.label ? config[key].label : capitalizeFirstLetter(key)"\n          [placeholder]="config[key]?.placeholder || \'\'"\n          [type]="\'datetime-local\'"\n          [control]="transformToControl(form?.get(key))"\n          [required]="fields[key].isRequired"\n        ></base-input>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n',styles:[""]})],ModelFormSubComponent);var http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs");let UploadImageComponent=class UploadImageComponent{constructor(httpClient){this.httpClient=httpClient,this.supportText="Supports: JPEG, JPG, PNG",this.required=!1,this.dragText="Drag & Drop",this.validExtensions=["image/jpeg","image/jpg","image/png"],this.url="http://localhost:3000",this.uploadPath="/files/upload",this.deletePath="/files/",this.path="/files/",this.dragActive=!1}dragOver(event){event.preventDefault(),this.dragText="Release to Upload",this.dragActive=!0}dragLeave(event){this.dragText="Drag & Drop",this.dragActive=!1}drop(event){event.preventDefault(),this.setUrl(event.dataTransfer.files[0]),this.dragText="Drag & Drop",this.dragActive=!1}setUrl(file){if(this.validExtensions.includes(file.type)){const fileReader=new FileReader;fileReader.onload=()=>{this.fileUrl=fileReader.result,this.selectedFile=file,this.upload()},fileReader.readAsDataURL(file)}}selectFile(event){this.setUrl(event.target.files[0])}upload(){const data=new FormData;data.append("file",this.selectedFile),this.httpClient.post(this.url+this.uploadPath,data).subscribe((result=>{(null==result?void 0:result.id)&&this.control.setValue(result.id)}))}deleteFile(id){this.selectedFile=null,this.fileUrl=null,id&&this.httpClient.delete(this.url+this.deletePath+id).subscribe((result=>{this.selectedFile=null,this.fileUrl=null,this.control.setValue("")}))}};UploadImageComponent.ctorParameters=()=>[{type:http.eN}],UploadImageComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],supportText:[{type:core.Input}],required:[{type:core.Input}],dragText:[{type:core.Input}],validExtensions:[{type:core.Input}],control:[{type:core.Input}],url:[{type:core.Input}],uploadPath:[{type:core.Input}],deletePath:[{type:core.Input}],path:[{type:core.Input}]},UploadImageComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-upload-image",template:'<div class="mt-3">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n  <div\n    class="drag-area"\n    (dragover)="dragOver($event)"\n    (dragleave)="dragLeave($event)"\n    (drop)="drop($event)"\n    [ngClass]="{ active: dragActive }"\n  >\n    <ng-container *ngIf="selectedFile && !control?.value">\n      <img [src]="fileUrl" *ngIf="selectedFile" />\n      <button class="btn btn-danger" (click)="deleteFile()">Löschen</button>\n    </ng-container>\n\n    <ng-container *ngIf="control?.value">\n      <img [src]="url + path + control?.value" />\n      <button class="btn btn-danger" (click)="deleteFile(control?.value)">Löschen</button>\n    </ng-container>\n\n    <ng-container *ngIf="!selectedFile && !control?.value">\n      <div class="icon">\n        <i class="bi bi-images"></i>\n      </div>\n\n      <span class="header">{{ dragText }}</span>\n      <span class="header">or <span class="button" (click)="fileInput.click()">browse</span></span>\n      <input type="file" (change)="selectFile($event)" hidden #fileInput />\n      <span class="support">{{ supportText }}</span>\n    </ng-container>\n  </div>\n</div>\n',styles:['.required:after {\n  content: " *";\n}\n\n.drag-area {\n  height: 400px;\n  border: 2px dashed #e1e1e1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding: 20px;\n}\n\n.drag-area img {\n  height: 100%;\n  max-height: 300px;\n  max-width: 100%;\n}\n\n.drag-area .btn-danger {\n  margin-top: auto;\n}\n\n.drag-area .icon {\n  font-size: 50px;\n  color: var(--bs-primary);\n}\n\n.drag-area .header {\n  font-size: 20px;\n  font-weight: 500;\n}\n\n.drag-area .support {\n  font-size: 12px;\n  color: #e1e1e1;\n  margin: 10px 0 15px 0;\n}\n\n.drag-area .button {\n  font-size: 20px;\n  font-weight: 500;\n  color: var(--bs-primary);\n  cursor: pointer;\n}\n\n.active {\n  border: 2px solid var(--bs-primary);\n}']})],UploadImageComponent);let RefenceInputComponent=class RefenceInputComponent{constructor(graphQLService){this.graphQLService=graphQLService,this.placeholder="",this.required=!1,this.method="find",this.fields=["id","name"],this.valueField="id",this.nameField="name",this.objects=[]}ngOnInit(){this.graphQLService.graphQl(this.method,{fields:this.fields,type:shared.pF.QUERY}).subscribe((result=>{result&&(this.objects=result)}))}};RefenceInputComponent.ctorParameters=()=>[{type:shared.ti}],RefenceInputComponent.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],autocomplete:[{type:core.Input}],tabIndex:[{type:core.Input}],control:[{type:core.Input}],required:[{type:core.Input}],method:[{type:core.Input}],fields:[{type:core.Input}],valueField:[{type:core.Input}],nameField:[{type:core.Input}]},RefenceInputComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"base-refence-input",template:'<div class="form-group mb-3">\n  <label [for]="id" class="form-label" [ngClass]="{ required: required }" *ngIf="label">{{ label }}</label>\n  <input\n    [id]="id"\n    [name]="name"\n    class="form-control"\n    [formControl]="control"\n    [required]="required"\n    [placeholder]="placeholder"\n    [autocomplete]="autocomplete ?? null"\n    [tabIndex]="tabIndex ?? null"\n    [ngClass]="{ \'is-invalid\': control?.invalid && control?.touched }"\n    [attr.list]="id + \'-datalistOptions\'"\n  />\n  <datalist [id]="id + \'-datalistOptions\'">\n    <option *ngFor="let object of objects" [value]="object[valueField]">{{ object[nameField] }}</option>\n  </datalist>\n\n  <div class="invalid-feedback m-2" *ngIf="control?.invalid && (control?.dirty || control?.touched)">\n    <div *ngIf="control?.errors?.[\'required\']">Dieses Feld ist ein Pflichtfeld.</div>\n    <div *ngIf="control?.errors?.[\'minlength\']">\n      Die Mindestlänge für dieses Feld beträgt\n      {{control.errors?.[\'minlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'maxlength\']">\n      Die maximale Länge für dieses Feld beträgt\n      {{control.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\n    </div>\n    <div *ngIf="control?.errors?.[\'email\']">Bitte eine gültige E-Mail Adresse angeben.</div>\n    <div *ngIf="control?.errors?.[\'matching\']">Die Passwörter müssen überein stimmen.</div>\n  </div>\n</div>\n',styles:[""]})],RefenceInputComponent);const imports=[fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,common.ez],base_components_module_elements=[input_component.a,select_component.H,checkbox_component.b,textarea_component.R,ToastComponent,tags_component.o,LoadingBarComponent,SkeletonLoaderComponent,BreadcrumbComponent,ModelFormComponent,ModelTableComponent,ModelFormSubComponent,UploadImageComponent,RefenceInputComponent];let BaseComponentsModule=class BaseComponentsModule{};BaseComponentsModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:base_components_module_elements,imports,exports:base_components_module_elements})],BaseComponentsModule)},"./projects/ng-base/shared/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{e8:()=>AuthService,pm:()=>BreadcrumbService,s8:()=>FormsService,p8:()=>GraphQLMetaService,pF:()=>GraphQLRequestType,ti:()=>GraphQLService,CC:()=>SkeletonType,kl:()=>ToastService,pC:()=>ToastType,KD:()=>UserService,iA:()=>Validation});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs");class Sort{constructor(){this.sortOrder=1,this.collator=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"})}startSort(property,order,type=""){return"desc"===order&&(this.sortOrder=-1),(a,b)=>"date"===type?this.sortDate(new Date(a.latestStep[property]),new Date(b.latestStep[property])):"position"===type?this.collator.compare(a.position.Value[property],b.position.Value[property])*this.sortOrder:this.collator.compare(a[property],b[property])*this.sortOrder}sortDate(a,b){return a<b?-1*this.sortOrder:a>b?1*this.sortOrder:0*this.sortOrder}}let SortDirective=class SortDirective{constructor(renderer,targetElem,document){this.renderer=renderer,this.targetElem=targetElem}sortColumn(){const items=document.getElementsByTagName("th");for(let i=0;i<items.length;i++)items[i].classList.remove("asc"),items[i].classList.remove("desc");const sort=new Sort,elem=this.targetElem.nativeElement,order=elem.getAttribute("data-order"),type=elem.getAttribute("data-type"),property=elem.getAttribute("data-name");"desc"===order?(this.lcSort.sort(sort.startSort(property,order,type)),elem.setAttribute("data-order","asc"),elem.classList.remove("desc"),elem.classList.add("asc")):(this.lcSort.sort(sort.startSort(property,order,type)),elem.setAttribute("data-order","desc"),elem.classList.remove("asc"),elem.classList.add("desc"))}};SortDirective.ctorParameters=()=>[{type:core.Renderer2},{type:core.ElementRef},{type:Document,decorators:[{type:core.Inject,args:[common.K0]}]}],SortDirective.propDecorators={lcSort:[{type:core.Input}],sortColumn:[{type:core.HostListener,args:["click"]}]},SortDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[baseSort]"})],SortDirective);var BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js");const BASE_MODULE_CONFIG=new core.InjectionToken("BASE_MODULE_CONFIG");let StorageService=class StorageService{constructor(moduleConfig){this.moduleConfig=moduleConfig,this.storage=null,this.prefix="";const type=moduleConfig.storageType?moduleConfig.storageType:"local";window[type+"Storage"]&&(this.storage=window[type+"Storage"]),this.prefix="",moduleConfig.prefix&&(this.prefix+=moduleConfig.prefix+"_"),moduleConfig.version&&(this.prefix+=moduleConfig.version+"_")}save(itemKeys,value){if(!this.storage)return!1;if(!itemKeys||"object"==typeof itemKeys&&!Object.keys(itemKeys).length||"string"==typeof itemKeys&&void 0===value)return!1;if("object"==typeof itemKeys){for(const[itemKey,itemValue]of Object.entries(itemKeys))this.storage.setItem(this.prefix+itemKey,JSON.stringify(itemValue));return!0}return this.storage.setItem(this.prefix+itemKeys,JSON.stringify(value)),!0}load(itemKeys){if(!this.storage)return;if(!itemKeys||Array.isArray(itemKeys)&&!itemKeys.length)return null;if(Array.isArray(itemKeys)){const back={};return itemKeys.forEach((itemKey=>{const loadedItem=this.storage.getItem(this.prefix+itemKey);back[itemKey]=loadedItem?JSON.parse(loadedItem):null})),back}let value=this.storage.getItem(this.prefix+itemKeys);return value&&(value=JSON.parse(value)),value}remove(itemKeys){return!!this.storage&&(Array.isArray(itemKeys)?(itemKeys.forEach((key=>{this.storage.removeItem(this.prefix+key)})),!0):(this.storage.removeItem(this.prefix+itemKeys),!0))}reset(){this.storage.clear()}};StorageService.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[BASE_MODULE_CONFIG]}]}],StorageService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],StorageService);let WsService=class WsService{reconnect(){var _a;null===(_a=this.client)||void 0===_a||_a.restart()}};WsService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],WsService);let AuthService=class AuthService{constructor(moduleConfig,storageService,wsService){this.moduleConfig=moduleConfig,this.storageService=storageService,this.wsService=wsService,this._currentUser=new BehaviorSubject.X(null),this._token=new BehaviorSubject.X(null),this.token=this.storageService.load("token"),this.currentUser=this.storageService.load("currentUser")}logout(){this.storageService.remove(["token","currentUser"]),this.currentUser=null,this.token=null}get currentUser(){return this._currentUser.value}set currentUser(user){this._currentUser.next(user),this.storageService.save("currentUser",user)}get currentUserObservable(){return this._currentUser.asObservable()}get token(){return this._token.value}set token(token){this._token.next(token),this.storageService.save("token",token),this.wsService.reconnect()}get tokenObservable(){return this._token.asObservable()}};AuthService.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[BASE_MODULE_CONFIG]}]},{type:StorageService},{type:WsService}],AuthService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],AuthService);var GraphQLRequestType,ngApollo=__webpack_require__("./node_modules/apollo-angular/fesm2020/ngApollo.mjs");!function(GraphQLRequestType){GraphQLRequestType.QUERY="query",GraphQLRequestType.MUTATION="mutation",GraphQLRequestType.SUBSCRIPTION="subscription"}(GraphQLRequestType||(GraphQLRequestType={}));var throwError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/throwError.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),buildClientSchema=__webpack_require__("./node_modules/graphql/utilities/buildClientSchema.mjs"),getIntrospectionQuery=__webpack_require__("./node_modules/graphql/utilities/getIntrospectionQuery.mjs"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),definition=__webpack_require__("./node_modules/graphql/type/definition.mjs");class Helper{static filter(objects,filter){return(null==objects?void 0:objects.filter((element=>{for(const[key,value]of Object.entries(filter))if(Array.isArray(element[key])){for(const item of element[key])if(!element[key].includs(value))return!1}else if(element[key]!==value)return!1;return!0})))||[]}static urlString(str,options={}){const config=Object.assign({allowAll:!1},options);return str=(str=(str+="").trim()).toLowerCase(),config.allowAll||(str=(str=(str=(str=(str=(str=str.trim().replace(/\s+/g,"-")).replace("ä","ae")).replace("ö","oe")).replace("ü","ue")).replace("ß","ss")).replace(/[^a-zA-Z0-9-]/g,"")),encodeURI(str)}static map(source,target,options={}){const config=Object.assign({funcAllowed:!1,dateStringToDate:!0},options);if(!source||"object"!=typeof source||Array.isArray(source))return target;for(const key of Object.keys(target))void 0!==source[key]&&(config.funcAllowed||(source[key],1))&&("string"==typeof source[key]&&config.dateStringToDate?Array.isArray(config.dateStringToDate)?config.dateStringToDate.includes(key)&&(target[key]=Helper.parseDate(source[key])):target[key]=Helper.parseDate(source[key]):target[key]=source[key]);return target}static maps(data,targetClass){if(data&&"object"==typeof data)return Array.isArray(data)||(data=[data]),data.map((item=>targetClass.map(item)))}static getPlainParameter(parameter){var _a,_b,_c;return parameter?null===(_c=null===(_b=null===(_a=null==parameter?void 0:parameter.split("?"))||void 0===_a?void 0:_a.shift())||void 0===_b?void 0:_b.split("#"))||void 0===_c?void 0:_c.shift():parameter}static getParameterId(parameter){var _a;return parameter?null===(_a=Helper.getPlainParameter(parameter))||void 0===_a?void 0:_a.split("-").pop():parameter}static delay(ms){return new Promise((resolve=>setTimeout(resolve,ms)))}static deepFreeze(object,preparedObjects=[]){if(preparedObjects.includes(object))return object;preparedObjects.push(object);const propNames=Object.getOwnPropertyNames(object);for(const name of propNames){const value=object[name];value&&"object"==typeof value&&Helper.deepFreeze(value,preparedObjects)}return Object.freeze(object)}static getUID(){let dt=(new Date).getTime();return"xxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g,(c=>{const r=(dt+16*Math.random())%16|0;return dt=Math.floor(dt/16),("x"===c?r:3&r|8).toString(16)}))}static parseDate(dateString){const reMsAjax=/^\/Date\((d|-|.*)\)[\/|\\]$/;if("string"==typeof dateString){if(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*))(?:Z|(\+|-)([\d|:]*))?$/.exec(dateString))return new Date(dateString);const msAjaxExec=reMsAjax.exec(dateString);if(msAjaxExec){const cleaned=msAjaxExec[1].split(/[-+,.]/);return new Date(cleaned[0]?+cleaned[0]:0-+cleaned[1])}}return dateString}static getBrowser(){const userAgent=navigator.userAgent;let version,data=userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];return/trident/i.test(data[1])?(version=/\brv[ :]+(\d+)/g.exec(userAgent)||[],{name:"IE",version:version[1]||""}):"Chrome"===data[1]&&(version=userAgent.match(/\bOPR|Edge\/(\d+)/),null!=version)?{name:"Opera",version:version[1]}:(data=data[2]?[data[1],data[2]]:[navigator.appName,navigator.appVersion,"-?"],version=userAgent.match(/version\/(\d+)/i),null!==version&&data.splice(1,1,version[1]),{name:data[0],version:data[1]})}static isSubset(a,b){if(a===b)return!0;if(typeof a!=typeof b)return!1;if(Array.isArray(a)){for(const[key,value]of Object.entries(a))if(Helper.isSubset(value,b[key]))return!1;return!0}if("object"==typeof a){const plain=JSON.parse(JSON.stringify(a));for(const[key,value]of Object.entries(plain))if(Helper.isSubset(value,b[key]))return!1;return!0}return!0}static isEqual(a,b){return Helper.isSubset(a,b)&&Helper.isSubset(b,a)}static getDiff(a,b,clone=!0){const result={};let firstObject=a;clone&&(firstObject=JSON.parse(JSON.stringify(a)));for(const[key,value]of Object.entries(firstObject))Helper.isSubset(value,b[key])||(result[key]=value);return result}static isNodeList(nodes){try{const stringRepr=Object.prototype.toString.call(nodes);return"object"==typeof nodes&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(stringRepr)&&"number"==typeof nodes.length&&(0===nodes.length||"object"==typeof nodes[0]&&nodes[0].nodeType>0)}catch(e){return!1}}static arrayBufferToBase64(buffer){let binary="";const bytes=new Uint8Array(buffer),len=bytes.byteLength;for(let i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return`data:image/*;base64, ${window.btoa(binary)}`}}class Standard{static map(data,item=new this){return item.map(data)}map(data){return Helper.map(data,this)}clone(mapData){const current=JSON.parse(JSON.stringify(this));return mapData&&Object.assign(current,mapData),(new this.constructor).map(current)}getDiff(compare,clone=!0){return Helper.getDiff(this,compare,clone)}}class GraphQLType extends Standard{constructor(){super(...arguments),this.type="",this.isRequired=!1,this.isItemRequired=!1,this.isList=!1,this.isEnum=!1,this.validEnums=[]}}var cloneDeep=__webpack_require__("./node_modules/@apollo/client/utilities/common/cloneDeep.js");class GraphQLMeta{constructor(schema){if(this.schema=schema,this.args={},this.fields={},!schema)throw Error("Missing schema")}getTypes(){const possibleTypes=[],mutationType=this.schema.getMutationType(),queryType=this.schema.getQueryType();for(const[key,value]of Object.entries(queryType.getFields()))key.startsWith("find")&&possibleTypes.push({name:key.split("find").pop().slice(0,-1),create:!1,update:!1,delete:!1});for(const[key,value]of Object.entries(mutationType.getFields())){if(key.startsWith("create")){const model=key.split("create").pop();possibleTypes.find((e=>e.name===model))&&(possibleTypes.find((item=>item.name===model)).create=!0)}if(key.startsWith("update")){const model=key.split("update").pop();possibleTypes.find((e=>e.name===model))&&(possibleTypes.find((item=>item.name===model)).update=!0)}if(key.startsWith("delete")){const model=key.split("delete").pop();possibleTypes.find((e=>e.name===model))&&(possibleTypes.find((item=>item.name===model)).delete=!0)}}return possibleTypes}getArgs(functionName,options={}){const{cache,freeze,type}=Object.assign({cache:!0,freeze:!0,type:void 0},options);if(cache&&freeze){const args=this.args[functionName+type];if(args)return args}const func=this.getFunction(functionName,{type}),result={};return(null==func?void 0:func.args)&&func.args.forEach((item=>{result[item.name]=this.getDeepType(item.type)})),freeze&&(this.args[functionName+type]=Helper.deepFreeze(result)),result}getFields(functionName,options={}){const{cache,freeze,type}=Object.assign({cache:!0,freeze:!0,type:void 0},options);if(cache&&freeze){const args=this.fields[functionName+type];if(args)return args}const func=this.getFunction(functionName,options),result=this.getDeepType(func.type);return freeze&&(this.fields[functionName+type]=Helper.deepFreeze(result)),result}getFunction(name,options={}){const config=Object.assign({},options);let functions={};if(config.type){const graphQLType=config.type.charAt(0).toUpperCase()+config.type.slice(1),type=this.schema.getType(graphQLType);type&&(functions=type.getFields())}else["Subscription","Mutation","Query"].forEach((item=>{const type=this.schema.getType(item);type&&(functions=Object.assign(Object.assign({},functions),type.getFields()||{}))}));return functions[name]}getType(name){return this.schema.getType(name)}getDeepType(type,prepared=new WeakMap,setMetaData=!1){var _a,_b;if(!type)return type;const preparedObject={};if("object"==typeof type){const preparedType=prepared.get(type);if(preparedType){const clone=(0,cloneDeep.X)(preparedType);return((null==type?void 0:type.type)instanceof definition.sR||(null==type?void 0:type.type)instanceof definition.bM&&(null===(_a=null==type?void 0:type.type)||void 0===_a?void 0:_a.ofType)instanceof definition.sR&&setMetaData)&&(setMetaData=!1),type.type&&setMetaData&&(type.type instanceof definition.bM?(clone.isRequired=!0,type.type.ofType instanceof definition.p2?(clone.isList=!0,clone.isItemRequired=type.type.ofType.ofType instanceof definition.bM):(clone.isList=!1,clone.isItemRequired=!1)):(clone.isRequired=!1,type.type instanceof definition.p2?(clone.isList=!0,clone.isItemRequired=type.ofType instanceof definition.bM):(clone.isList=!1,clone.isItemRequired=!1))),clone}prepared.set(type,preparedObject)}if(type.ofType){const ofTypeResult=this.getDeepType(type.ofType,prepared,setMetaData);return Object.assign(preparedObject,ofTypeResult),ofTypeResult}if(type._fields){const result={};for(const[key,value]of Object.entries(type._fields))result[key]=this.getDeepType(value,prepared,!0);return Object.assign(preparedObject,result),result}if(type.type){const typeResult=this.getDeepType(type.type,prepared,setMetaData);return((null==type?void 0:type.type)instanceof definition.sR||(null==type?void 0:type.type)instanceof definition.bM&&(null===(_b=null==type?void 0:type.type)||void 0===_b?void 0:_b.ofType)instanceof definition.sR&&setMetaData)&&(setMetaData=!1),setMetaData&&(type.type instanceof definition.bM?(typeResult.isRequired=!0,type.type.ofType instanceof definition.p2?(typeResult.isList=!0,typeResult.isItemRequired=type.type.ofType.ofType instanceof definition.bM):(typeResult.isList=!1,typeResult.isItemRequired=!1)):(typeResult.isRequired=!1,type.type instanceof definition.p2?(typeResult.isList=!0,typeResult.isItemRequired=type.ofType instanceof definition.bM):(typeResult.isList=!1,typeResult.isItemRequired=!1))),Object.assign(preparedObject,typeResult),typeResult}const graphqlType=GraphQLType.map({type:type.name});if(type._values){graphqlType.isEnum=!0;for(const[key,value]of Object.entries(type._nameLookup))value.isDeprecated||graphqlType.validEnums.push(key)}return prepared.set(type,graphqlType),graphqlType}}let GraphQLMetaService=class GraphQLMetaService{constructor(apollo){this.apollo=apollo}get introspectionQuery(){return JSON.parse(JSON.stringify(this._introspectionQuery))}getSchema(options={}){const config=Object.assign({cache:!0,freeze:!0},options);if(config.cache){if(config.freeze&&this._frozenSchema)return(0,of.of)(this._frozenSchema);if(this._introspectionQuery)return(0,of.of)((0,buildClientSchema.Z)(this.introspectionQuery));if(config.freeze&&this._frozenSchemaObservable)return this._frozenSchemaObservable;if(!config.freeze&&this._schemaObservable)return this._schemaObservable}const observable=this.apollo.query({query:(0,ngApollo.Ps)((0,getIntrospectionQuery.K)({descriptions:!1}))}).pipe((0,map.U)((schema=>(this._introspectionQuery=schema.data,this._frozenSchema=Helper.deepFreeze((0,buildClientSchema.Z)(this.introspectionQuery)),config.freeze?this._frozenSchema:(0,buildClientSchema.Z)(schema.data)))));return config.freeze?this._frozenSchemaObservable=observable:this._schemaObservable=observable,observable}getMeta(options={}){const config=Object.assign({cache:!0,log:!1},options);if(config.cache){if(this._meta)return(0,of.of)(this._meta);if(this._metaObservable)return this._metaObservable}const observable=this.getSchema(options).pipe((0,map.U)((schema=>(config.log&&console.log({schema}),this._meta=new GraphQLMeta(schema),this._meta))));return this._metaObservable=observable,observable}};GraphQLMetaService.ctorParameters=()=>[{type:ngApollo._M}],GraphQLMetaService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],GraphQLMetaService);class GraphQLEnum{constructor(value){this.value=value}}var sha256=__webpack_require__("./node_modules/js-sha256/src/sha256.js");let GraphQLService=class GraphQLService{constructor(apollo,graphQLMetaService){this.apollo=apollo,this.graphQLMetaService=graphQLMetaService}graphQl(graphql,options={}){graphql||(0,throwError._)("Missing graphql argument");const config=Object.assign({arguments:null,fields:null,log:!1,model:null,type:GraphQLRequestType.QUERY},options);return"function"==typeof config.arguments&&(config.arguments=new config.arguments),"function"==typeof config.fields&&(config.fields=new config.fields),config.log&&console.log({config}),new Observable.y((subscriber=>{this.graphQLMetaService.getMeta({log:config.log}).subscribe((meta=>{let fields,allowedFields;if(config.log&&console.log({meta}),config.fields){allowedFields=meta.getFields(graphql,{type:config.type}),config.log&&console.log({allowedFields});const fieldsData=this.prepareFields(config.fields,{allowed:allowedFields});if(config.log){fieldsData.usedFields.sort(),fieldsData.schemaFields.sort();const filtered=fieldsData.schemaFields.filter((field=>!fieldsData.usedFields.includes(field))),unused=this.graphQLTypeCollectionToStringArray(allowedFields).filter((field=>!fieldsData.usedFields.includes(field)));console.log({fieldsData,filtered,unused})}fields=fieldsData.fieldsString}fields&&!fields.startsWith("{")&&(fields="{"+fields+"\n}"),config.log&&console.log({fields});const allowedArgs=meta.getArgs(graphql,{type:config.type});config.log&&console.log({allowedArgs});const argsData=this.prepareArguments(config.arguments,{allowed:allowedArgs});if(config.log){argsData.usedArgs.sort(),argsData.schemaArgs.sort();const filtered=argsData.schemaArgs.filter((field=>!argsData.usedArgs.includes(field))),unused=this.graphQLTypeCollectionToStringArray(allowedArgs).sort().filter((field=>!argsData.usedArgs.includes(field)));console.log({argsData,filtered,unused})}const args=(null==argsData?void 0:argsData.argsString)||"";config.log&&console.log({graphQL:graphql,args,fields,type:config.type});const documentNode=fields?(0,ngApollo.Ps)(config.type+"{\n"+graphql+args+fields+"\n}"):(0,ngApollo.Ps)(config.type+"{\n"+graphql+args+"\n}");config.log&&console.log({documentNode});const request={};let func;request[config.type]=documentNode,config.log&&console.log({request}),config.type===GraphQLRequestType.MUTATION?(func="mutate",request[config.type]=documentNode):config.type===GraphQLRequestType.SUBSCRIPTION?(func="subscribe",request.query=documentNode):(func=config.type,request[config.type]=documentNode),this.apollo[func](request).subscribe((result=>{var _a;const data=void 0!==(null===(_a=null==result?void 0:result.data)||void 0===_a?void 0:_a[graphql])?result.data[graphql]:result;config.model?Array.isArray(data)?subscriber.next(data.map((item=>config.model.map(item)))):subscriber.next(config.model.map(data)):subscriber.next(data),config.type!==GraphQLRequestType.SUBSCRIPTION&&subscriber.complete()}),(error=>{subscriber.error(error),subscriber.complete()}))}))}))}graphQLTypeCollectionToStringArray(collection,current="",result=[],cacheNode=[]){if(collection)if(collection instanceof GraphQLType)result.push(current);else{(null==current?void 0:current.includes("."))?cacheNode.push(current.split(".")[1]):current&&cacheNode.push(current);for(const key of Object.keys(collection))current===key||cacheNode.includes(key)||this.graphQLTypeCollectionToStringArray(collection[key],current?current+"."+key:key,result,cacheNode)}return result}prepareArguments(args,options={}){const{allowed,level,parent,schemaArgs,usedArgs}=Object.assign({allowed:null,level:1,parent:"",schemaArgs:[],usedArgs:[]},options);if(null==args)return{argsString:"",schemaArgs,usedArgs};const result=[];if(Array.isArray(args)){const allowedKeys=allowed?Object.keys(allowed):null;for(const item of args){let key=null;if(allowed){if(allowed.length<1)break;key=null==allowedKeys?void 0:allowedKeys.shift()}result.push(this.prepareArguments(item,{allowed:key?allowed[key]:null,level:level+1,parent:parent+key+".",schemaArgs,usedArgs}).argsString)}if(result.length)return 1===level?{argsString:"("+result.join(", ")+")",schemaArgs,usedArgs}:{argsString:"["+result.join(", ")+"]",schemaArgs,usedArgs}}else{if("object"!=typeof args)return{argsString:JSON.stringify(args),schemaArgs,usedArgs};if(args&&0===Object.keys(args).length&&Object.getPrototypeOf(args)===Object.prototype)return{argsString:"{}",schemaArgs,usedArgs};for(const[key,value]of Object.entries(args)){const currentKey=parent+key;if(schemaArgs.push(currentKey),allowed&&!allowed[key])continue;if(null==value)continue;if(usedArgs.push(currentKey),value instanceof GraphQLEnum){result.push(key+":"+value.value);continue}if("password"===key){result.push(key+":"+`"${(0,sha256.sha256)(value)}"`);continue}if(Array.isArray(value)){result.push(key+": ["+value.map((item=>this.prepareArguments(item,{allowed:allowed[key],level:level+1,parent:currentKey+".",schemaArgs,usedArgs}).argsString))+"]");continue}let additionalResult=key+": ";"object"==typeof value&&"[object Date]"===Object.prototype.toString.call(value)?additionalResult+=`"""${value.toString()}"""`:"string"==typeof value?allowed[key].isEnum?additionalResult+=value:additionalResult+=`"${value.replace(/"/g,'\\"').replace(/\n/g,"\\n")}"`:additionalResult+="boolean"==typeof value||"number"==typeof value?value:this.prepareArguments(value,{allowed:allowed[key],level:level+1,parent:currentKey+".",schemaArgs,usedArgs}).argsString,result.push(additionalResult)}if(result.length)return 1===level?{argsString:"("+result.join(", ")+")",schemaArgs,usedArgs}:{argsString:"{"+result.join(", ")+"}",schemaArgs,usedArgs}}}prepareFields(fields,options={}){const{allowed,parent,schemaFields,spaces,tab,usedFields}=Object.assign({allowed:null,parent:"",schemaFields:[],spaces:2,tab:1,usedFields:[]},options);let fieldsString="";if(!fields)return{fieldsString,schemaFields,usedFields};if("string"==typeof fields)return allowed&&("string"==typeof allowed&&allowed!==fields||"object"==typeof allowed&&!allowed[fields])?{fieldsString,schemaFields,usedFields}:{fieldsString:"\n"+" ".repeat(spaces).repeat(tab)+fields,schemaFields,usedFields};if(Array.isArray(fields))for(const item of fields){if("object"==typeof item){fieldsString+=this.prepareFields(item,{allowed,parent,spaces,schemaFields,tab:tab+1,usedFields}).fieldsString;continue}const currentPath=parent+item;schemaFields.push(currentPath),allowed&&!(null==allowed?void 0:allowed[item])||(usedFields.push(currentPath),fieldsString+=this.prepareFields(item,{allowed:"object"!=typeof(null==allowed?void 0:allowed[item])||(null==allowed?void 0:allowed[item])instanceof GraphQLType?item:null==allowed?void 0:allowed[item],parent:currentPath+".",spaces,schemaFields,tab:tab+1,usedFields}).fieldsString)}else if("object"==typeof fields)for(const[key,val]of Object.entries(fields)){const currentPath=parent+key;schemaFields.push(currentPath),allowed&&!allowed[key]||(usedFields.push(currentPath),fieldsString="object"==typeof val&&Object.keys(val).length?fieldsString+"\n"+" ".repeat(spaces).repeat(tab)+key+" {"+this.prepareFields(val,{allowed:"object"!=typeof(null==allowed?void 0:allowed[key])||(null==allowed?void 0:allowed[key])instanceof GraphQLType?key:null==allowed?void 0:allowed[key],parent:currentPath+".",spaces,schemaFields,tab:tab+1,usedFields}).fieldsString+"\n"+" ".repeat(spaces).repeat(tab)+"}":fieldsString+"\n"+" ".repeat(spaces).repeat(tab)+key)}return{fieldsString,schemaFields,usedFields}}};GraphQLService.ctorParameters=()=>[{type:ngApollo._M},{type:GraphQLMetaService}],GraphQLService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],GraphQLService);let LoaderService=class LoaderService{constructor(){this.isLoading=new BehaviorSubject.X(!1)}start(){this.isLoading.next(!0)}stop(){this.isLoading.next(!1)}getAsObservable(){return this.isLoading.asObservable()}};LoaderService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],LoaderService);let GraphQLPlusService=class GraphQLPlusService extends GraphQLService{constructor(apollo,graphqlMetaService,loaderService){super(apollo,graphqlMetaService),this.apollo=apollo,this.graphqlMetaService=graphqlMetaService,this.loaderService=loaderService}graphQl(graphql,options={}){return this.handleLoader("start",options),new Observable.y((subscriber=>{super.graphQl(graphql,options).subscribe((response=>{response&&response.errors&&(this.handleError(response.errors,options.excludedErrors),subscriber.error(response),this.handleLoader("stop",options),subscriber.complete()),subscriber.next(response),this.handleLoader("stop",options),options.type!==GraphQLRequestType.SUBSCRIPTION&&subscriber.complete()}),(error=>{options.ignoreErrors||this.handleError(error,options.excludedErrors),subscriber.error(error),this.handleLoader("stop",options),subscriber.complete()}))}))}handleLoader(state,options){options.loading&&("start"===state?this.loaderService.start():"stop"===state&&this.loaderService.stop())}handleError(error,excludedErrors=null){if(excludedErrors)if(Array.isArray(excludedErrors))excludedErrors.forEach((excludedError=>{error.message.includes(excludedError.toLowerCase())}));else if(error.message.toLowerCase().includes(null==excludedErrors?void 0:excludedErrors.toLowerCase()))return;this.displayError(error)}displayError(error){console.error(error)}};GraphQLPlusService.ctorParameters=()=>[{type:ngApollo._M},{type:GraphQLMetaService},{type:LoaderService}],GraphQLPlusService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],GraphQLPlusService);var fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs");let FormsService=class FormsService{validateAllFormFields(formGroup){Object.keys(formGroup.controls).forEach((field=>{const control=formGroup.get(field);control instanceof fesm2020_forms.FormControl?control.markAsTouched({onlySelf:!0}):control instanceof fesm2020_forms.FormGroup&&this.validateAllFormFields(control)}))}};FormsService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],FormsService);class BasicUser extends Standard{constructor(){super(...arguments),this.id=void 0,this.email=void 0,this.firstName=void 0,this.lastName=void 0,this.roles=[],this.username=void 0}map(data){return Helper.map(data,this),this}hasRole(roles){return"string"==typeof roles&&(roles=[roles]),!(!this.roles||this.roles.length<1)&&(!roles||roles.length<1||this.roles.some((role=>roles.includes(role))))}hasAllRoles(roles){return"string"==typeof roles&&(roles=[roles]),!(!this.roles||this.roles.length<1)&&(!roles||roles.every((role=>this.roles.includes(role))))}}class Auth extends Standard{constructor(){super(...arguments),this.token=void 0,this.user=void 0}map(data){return Helper.map(data,this),this.user=(null==data?void 0:data.user)?BasicUser.map(data.user):this.user,this}}let UserService=class UserService extends GraphQLPlusService{constructor(apollo,graphqlMetaService,loaderService,authService){super(apollo,graphqlMetaService,loaderService),this.apollo=apollo,this.graphqlMetaService=graphqlMetaService,this.loaderService=loaderService,this.authService=authService}login(input){return this.graphQl("signIn",{arguments:{input},fields:["token",{user:["id","firstName","lastName","email","roles"]}],type:GraphQLRequestType.QUERY,loading:!0}).pipe((0,map.U)((response=>(this.authService.token=response.token,this.authService.currentUser=BasicUser.map(response.user),Auth.map({token:response.token,user:BasicUser.map(response.user)})))))}register(input){return this.graphQl("signUp",{arguments:{input},fields:["token",{user:["id","firstName","lastName","email","roles"]}],type:GraphQLRequestType.MUTATION,loading:!0}).pipe((0,map.U)((response=>(this.authService.token=response.token,this.authService.currentUser=BasicUser.map(response.user),Auth.map({token:response.token,user:BasicUser.map(response.user)})))))}requestPasswordResetMail(email){return this.graphQl("requestPasswordResetMail",{arguments:{email},fields:[],type:GraphQLRequestType.QUERY,loading:!0})}};UserService.ctorParameters=()=>[{type:ngApollo._M},{type:GraphQLMetaService},{type:LoaderService},{type:AuthService}],UserService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],UserService);var router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs");let ImageService=class ImageService{preLoadImages(options){const config=Object.assign({doneFunnction:void 0,elements:document,regExp:void 0},options);return new Promise((resolve=>{var _a;Array.isArray(config.elements)||(Helper.isNodeList(config.elements)?config.elements=Array.from(config.elements):config.elements=[config.elements]);const promises=[];let images=[];config.elements.forEach((element=>{images=images.concat(Array.from(element.getElementsByTagName("img")))}));for(let image of images){const src=image.getAttribute("src");if(!(image.complete&&0!==image.naturalHeight||!src||(null===(_a=config.regExp)||void 0===_a?void 0:_a.test(src)))){if("lazy"===image.getAttribute("loading")){const newImage=document.createElement("img");Array.from(image.attributes).forEach((attr=>{"loading"!==attr.name&&"src"!==attr.name&&newImage.setAttribute(attr.name,attr.value)})),image.replaceWith(newImage),image=newImage}promises.push(this.loadImage(image,src))}}Promise.all(promises).catch((e=>console.error("Error during image loading",e))).finally((()=>(0,tslib_es6.mG)(this,void 0,void 0,(function*(){let result;config.doneFunnction&&(result=yield config.doneFunction()),resolve(result)}))))}))}loadImage(imageElement,src){return(0,tslib_es6.mG)(this,void 0,void 0,(function*(){return src=src||imageElement.src,new Promise(((resolve,reject)=>{imageElement.onload=()=>resolve(imageElement),imageElement.onerror=reject,imageElement.src=src}))}))}};ImageService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ImageService);let ScrollService=class ScrollService{constructor(router,moduleConfig,imageService){this.router=router,this.moduleConfig=moduleConfig,this.imageService=imageService,this.scrollListener=!1,this.scrollTimer=-1;const config=Object.assign({scrollDetectionOffset:200,scrollOffset:100,scrollSamplingRate:100},moduleConfig);this.detectionOffset=config.scrollDetectionOffset,this.scrollOffset=config.scrollOffset,this.scrollSamplingRate=config.scrollSamplingRate}scrollTo(id,options={}){return(0,tslib_es6.mG)(this,void 0,void 0,(function*(){const config=Object.assign({checkUrl:!1,loadImagesBefore:!0,resetStyles:!1,setOverflow:!0,stopPropagation:!0},options);if(config.checkUrl&&"/"!==this.router.url&&!this.router.url.startsWith("/#"))return yield this.router.navigate(["/"],{fragment:id}),!config.stopPropagation;const el=document.getElementById(id);if(!el)return console.error("Missing scroll element with ID:",id),!config.stopPropagation;const body=document.querySelector("body");let undoOverflowChanges=!1;const scrollBodyStyles=JSON.parse(JSON.stringify(window.getComputedStyle(body)));!config.setOverflow||"visible"===scrollBodyStyles.overflowX&&"visible"===scrollBodyStyles.overflowY||(console.warn('Style of body element for overflowX and overflowY will be set to "visible" for scrolling!'),body.style.overflowX="visible",body.style.overflowY="visible",undoOverflowChanges=!0),config.loadImagesBefore&&(yield this.imageService.preLoadImages());const cords=el.getBoundingClientRect();return window.scrollBy({top:cords.top-this.scrollOffset,behavior:"smooth"}),yield this.scrollDone({doneFunction:()=>{undoOverflowChanges&&config.resetStyles&&(body.style.overflowX=scrollBodyStyles.overflowX,body.style.overflowY=scrollBodyStyles.overflowY,console.warn("Original style of body element for overflowX and overflowY is set."))}}),!config.stopPropagation}))}getLastActiveElement(list){const currentScrollPosition=window.scrollY,elementsWithId=document.querySelectorAll("[id]");let lastId=null,lastPosition=0-this.detectionOffset-1;return elementsWithId.forEach((element=>{const top=element.getBoundingClientRect().top+window.pageYOffset-this.detectionOffset;(!list||!list.length||list.includes(element.id))&&top<currentScrollPosition&&lastPosition<top&&(lastId=element.id,lastPosition=top)})),lastId}isActive(id,list,isFirst){const lastActiveElement=this.getLastActiveElement(list);return id===lastActiveElement||null===lastActiveElement&&isFirst}scrollDone(options={}){return(0,tslib_es6.mG)(this,void 0,void 0,(function*(){const config=Object.assign({doneFunction:void 0},options);if(yield this.scrollDoneDetection(),config.doneFunction)return config.doneFunction()}))}scrollDoneDetection(){return this.scrollPromise||(this.scrollPromise=new Promise((resolve=>{this.scrollPromiseResolve=resolve,-1!==this.scrollTimer&&window.clearTimeout(this.scrollTimer),this.scrollTimer=window.setTimeout((()=>{window.removeEventListener("scroll",this.scrollDoneDetection.bind(this)),this.scrollPromise=void 0,resolve()}),this.scrollSamplingRate)})),window.addEventListener("scroll",this.scrollDoneDetection.bind(this))),this.scrollPromise}};ScrollService.ctorParameters=()=>[{type:router.F0},{type:void 0,decorators:[{type:core.Inject,args:[BASE_MODULE_CONFIG]}]},{type:ImageService}],ScrollService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ScrollService);let ToastService=class ToastService{constructor(){this.toastsObservables=new BehaviorSubject.X([])}get toastsAsObservable(){return this.toastsObservables.asObservable()}show(toast,duration){const value=this.toastsObservables.value;value.push(toast),this.toastsObservables.next(value),duration&&setTimeout((()=>{const currentToasts=this.toastsObservables.value,foundIndex=currentToasts.findIndex((e=>e.id===toast.id));foundIndex>-1&&(currentToasts.splice(foundIndex,1),this.toastsObservables.next(currentToasts))}),duration)}};ToastService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ToastService);var filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js");let BreadcrumbService=class BreadcrumbService{constructor(router){this.router=router,this._breadcrumbs=new BehaviorSubject.X([]),this.subscribeToRouteChanges()}set breadcrumbs(value){this._breadcrumbs.next(value)}get breadcrumbsObservable(){return this._breadcrumbs.asObservable()}subscribeToRouteChanges(){this.router.events.pipe((0,filter.h)((event=>event instanceof router.m2))).subscribe((event=>{const root=this.router.routerState.snapshot.root,breadcrumbs=[];this.addBreadcrumb(root,[],breadcrumbs),this.breadcrumbs=breadcrumbs}))}addBreadcrumb(route,parentUrl,breadcrumbs){var _a;if(route){const routeUrl=parentUrl.concat(route.url.map((url=>url.path)));if(null===(_a=route.data)||void 0===_a?void 0:_a.breadcrumb){const breadcrumb={label:this.getLabel(route.data),url:"/"+routeUrl.join("/")};breadcrumbs.push(breadcrumb)}this.addBreadcrumb(route.firstChild,routeUrl,breadcrumbs)}}getLabel(data){return"function"==typeof data.breadcrumb?data.breadcrumb(data):data.breadcrumb}};var ComparisonOperatorEnum,LogicalOperatorEnum,SortOrderEnum,ToastType,SkeletonType;BreadcrumbService.ctorParameters=()=>[{type:router.F0}],BreadcrumbService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],BreadcrumbService),function(ComparisonOperatorEnum){ComparisonOperatorEnum.EQ="EQ",ComparisonOperatorEnum.GT="GT",ComparisonOperatorEnum.GTE="GTE",ComparisonOperatorEnum.IN="IN",ComparisonOperatorEnum.LT="LT",ComparisonOperatorEnum.LTE="LTE",ComparisonOperatorEnum.NE="NE",ComparisonOperatorEnum.NIN="NIN",ComparisonOperatorEnum.REGEX="REGEX"}(ComparisonOperatorEnum||(ComparisonOperatorEnum={})),function(LogicalOperatorEnum){LogicalOperatorEnum.AND="AND",LogicalOperatorEnum.NOR="NOR",LogicalOperatorEnum.OR="OR"}(LogicalOperatorEnum||(LogicalOperatorEnum={})),function(SortOrderEnum){SortOrderEnum.ASC="ASC",SortOrderEnum.DESC="DESC"}(SortOrderEnum||(SortOrderEnum={})),function(ToastType){ToastType.ERROR="error",ToastType.WARNING="warning",ToastType.INFO="info",ToastType.SUCCESS="success"}(ToastType||(ToastType={})),function(SkeletonType){SkeletonType.LINE="LINE",SkeletonType.RECTANGLE="RECTANGLE",SkeletonType.AVATAR="AVATAR"}(SkeletonType||(SkeletonType={}));class Validation{static match(controlName,checkControlName){return controls=>{var _a,_b;const control=controls.get(controlName),checkControl=controls.get(checkControlName);return(null==checkControl?void 0:checkControl.errors)&&!(null===(_a=checkControl.errors)||void 0===_a?void 0:_a.matching)?null:(null==control?void 0:control.value)!==(null==checkControl?void 0:checkControl.value)?(null===(_b=controls.get(checkControlName))||void 0===_b||_b.setErrors({matching:!0}),{matching:!0}):null}}}},"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");__webpack_require__("./node_modules/bootstrap/dist/js/bootstrap.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"DateAgoPipe","id":"pipe-DateAgoPipe-396883ceac7db961808daf705e94f02b24468dfdb6d86b92ea26242ca41ceb162cb458af6a44c4526a280fe5fd60e6d320ef34f0e1f43a722e856898c4219741","file":"projects/ng-base/src/pipes/date-ago.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"intervals","defaultValue":"{\\n    year: 31536000,\\n    month: 2592000,\\n    week: 604800,\\n    day: 86400,\\n    hour: 3600,\\n    minute: 60,\\n    second: 1,\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":8},{"name":"plural","defaultValue":"{\\n    year: \'Jahren\',\\n    month: \'Monaten\',\\n    week: \'Wochen\',\\n    day: \'Tagen\',\\n    hour: \'Stunden\',\\n    minute: \'Minuten\',\\n    second: \'Sekunden\',\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":28},{"name":"singular","defaultValue":"{\\n    year: \'Jahr\',\\n    month: \'Monat\',\\n    week: \'Woche\',\\n    day: \'Tag\',\\n    hour: \'Stunde\',\\n    minute: \'Minute\',\\n    second: \'Sekunde\',\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":18}],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"currentDate","type":"Date","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentDate","type":"Date","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"pure":true,"ngname":"dateAgo","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'dateAgo\',\\n  pure: true,\\n})\\nexport class DateAgoPipe implements PipeTransform {\\n  intervals = {\\n    year: 31536000,\\n    month: 2592000,\\n    week: 604800,\\n    day: 86400,\\n    hour: 3600,\\n    minute: 60,\\n    second: 1,\\n  };\\n\\n  singular = {\\n    year: \'Jahr\',\\n    month: \'Monat\',\\n    week: \'Woche\',\\n    day: \'Tag\',\\n    hour: \'Stunde\',\\n    minute: \'Minute\',\\n    second: \'Sekunde\',\\n  };\\n\\n  plural = {\\n    year: \'Jahren\',\\n    month: \'Monaten\',\\n    week: \'Wochen\',\\n    day: \'Tagen\',\\n    hour: \'Stunden\',\\n    minute: \'Minuten\',\\n    second: \'Sekunden\',\\n  };\\n\\n  transform(value: any, currentDate?: Date): any {\\n    const now = currentDate ?? new Date();\\n    if (value) {\\n      const seconds = Math.floor((+now - +new Date(value)) / 1000);\\n      if (seconds < 29) {\\n        return \'gerade eben\'; // less than 30 seconds ago will show as \'Just now\'\\n      }\\n\\n      let counter;\\n      for (const i of Object.keys(this.intervals)) {\\n        counter = Math.floor(seconds / this.intervals[i]);\\n        if (counter > 0) {\\n          if (counter === 1) {\\n            return \'vor \' + counter + \' \' + this.singular[i]; // singular (1 day ago)\\n          } else {\\n            return \'vor \' + counter + \' \' + this.plural[i]; // plural (2 days ago)\\n          }\\n        }\\n      }\\n    }\\n    return value;\\n  }\\n}\\n"},{"name":"EllipsesPipe","id":"pipe-EllipsesPipe-dc9724e9f097232bdf627df93cb26052b58ba8fd51e2aa7402d48bce2bf88b6bd1fb6c6948e618b5219ffe50c0fe13aa6eade75f9b067b77117977460212bb21","file":"projects/ng-base/src/pipes/ellipses.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"<p>Truncate string with ellipses</p>\\n","rawdescription":"\\n\\nTruncate string with ellipses\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"ltEllipses","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n/**\\n * Truncate string with ellipses\\n */\\n@Pipe({\\n  name: \'ltEllipses\',\\n})\\nexport class EllipsesPipe implements PipeTransform {\\n  transform(value: string, limit: number): string {\\n    if (!value) {\\n      return null;\\n    }\\n\\n    return value.length > limit ? value.substring(0, limit) + \'...\' : value;\\n  }\\n}\\n"},{"name":"SafeHtmlPipe","id":"pipe-SafeHtmlPipe-7046e80fc93fc8f2c1c4e5a25cf00d4e4fd1354b454e071ecf26298e41f15ef223e34cd4e0341214fb5f335b882f680ebb8214bfc735a9eb43484f49552c70ce","file":"projects/ng-base/src/pipes/safe-html.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"<p>Declarate html as safe</p>\\n","rawdescription":"\\n\\nDeclarate html as safe\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"ltSafeHtml","sourceCode":"import { DomSanitizer } from \'@angular/platform-browser\';\\nimport { Pipe, PipeTransform } from \'@angular/core\';\\n\\n/**\\n * Declarate html as safe\\n */\\n@Pipe({ name: \'ltSafeHtml\' })\\nexport class SafeHtmlPipe implements PipeTransform {\\n  constructor(private sanitized: DomSanitizer) {}\\n\\n  transform(value) {\\n    return this.sanitized.bypassSecurityTrustHtml(value);\\n  }\\n}\\n"}],"interfaces":[{"name":"BaseCMSModuleConfig","id":"interface-BaseCMSModuleConfig-7742eb7dcad491a0f997b64e55fe833ecf0553332d748e7fdb6c59a18e0d2f67ae16f926d928bcf5161d26fd812ccc93fb352a404aa647b90feeeb751a80f220","file":"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { InjectionToken } from \'@angular/core\';\\n\\nexport interface BaseCMSModuleConfig {\\n  modelConfig?: { [key: string]: any };\\n  fieldConfig?: { [key: string]: any };\\n  logging?: boolean;\\n  branding?: boolean;\\n}\\n\\nexport const BASE_CMS_MODULE_CONFIG = new InjectionToken(\'BASE_CMS_MODULE_CONFIG\');\\n","properties":[{"name":"branding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7},{"name":"fieldConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":5},{"name":"logging","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"modelConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"BaseModuleConfig","id":"interface-BaseModuleConfig-973a72c121eea983d4b7a67b74bed19de3db095a0ee811c4a6c303d73a760c1411a4d2a067b8c757fa32e1de3fbeb663fbfdb57d2d62c1573b775af0ace96986","file":"projects/ng-base/shared/interfaces/base-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { InjectionToken } from \'@angular/core\';\\nimport { StorageType } from \'../types/storage.type\';\\n\\n/**\\n * Configuration for base module\\n */\\nexport interface BaseModuleConfig {\\n  /**\\n   * URL to server API\\n   * Default: \'localhost:3000\'\\n   */\\n  apiUrl?: string;\\n\\n  /**\\n   * Websocket URL to server API\\n   */\\n  wsUrl?: string;\\n\\n  /**\\n   * Default redirect URL for AuthGuard\\n   * Default: \'/auth\'\\n   */\\n  authGuardRedirectUrl?: string;\\n\\n  /**\\n   * Whether logging is enabled or not\\n   */\\n  logging?: boolean;\\n\\n  /**\\n   * Version of the App (for storage handling)\\n   * Default: null\\n   */\\n  version?: string;\\n\\n  /**\\n   * Prefix of the App (for storage handling)\\n   * Default: null\\n   */\\n  prefix?: string;\\n\\n  /**\\n   * Scroll detection offset for ScrollService\\n   * Should be >= scrollOffset\\n   * Default: 200\\n   */\\n  scrollDetectionOffset?: number;\\n\\n  /**\\n   * Scroll offset for ScrollService\\n   * Default: 100\\n   */\\n  scrollOffset?: number;\\n\\n  /**\\n   * Sampling rate for scroll done detection\\n   * Default: 100\\n   */\\n  scrollSamplingRate?: number;\\n\\n  /**\\n   * Type of storage: \'session\' or \'local\'\\n   * Default: \'local\'\\n   */\\n  storageType?: StorageType;\\n}\\n\\nexport const BASE_MODULE_CONFIG = new InjectionToken(\'BASE_MODULE_CONFIG\');\\n","properties":[{"name":"apiUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>URL to server API\\nDefault: &#39;localhost:3000&#39;</p>\\n","line":12,"rawdescription":"\\n\\nURL to server API\\nDefault: \'localhost:3000\'\\n"},{"name":"authGuardRedirectUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Default redirect URL for AuthGuard\\nDefault: &#39;/auth&#39;</p>\\n","line":23,"rawdescription":"\\n\\nDefault redirect URL for AuthGuard\\nDefault: \'/auth\'\\n"},{"name":"logging","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether logging is enabled or not</p>\\n","line":28,"rawdescription":"\\n\\nWhether logging is enabled or not\\n"},{"name":"prefix","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Prefix of the App (for storage handling)\\nDefault: null</p>\\n","line":40,"rawdescription":"\\n\\nPrefix of the App (for storage handling)\\nDefault: null\\n"},{"name":"scrollDetectionOffset","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Scroll detection offset for ScrollService\\nShould be &gt;= scrollOffset\\nDefault: 200</p>\\n","line":47,"rawdescription":"\\n\\nScroll detection offset for ScrollService\\nShould be >= scrollOffset\\nDefault: 200\\n"},{"name":"scrollOffset","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Scroll offset for ScrollService\\nDefault: 100</p>\\n","line":53,"rawdescription":"\\n\\nScroll offset for ScrollService\\nDefault: 100\\n"},{"name":"scrollSamplingRate","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Sampling rate for scroll done detection\\nDefault: 100</p>\\n","line":59,"rawdescription":"\\n\\nSampling rate for scroll done detection\\nDefault: 100\\n"},{"name":"storageType","deprecated":false,"deprecationMessage":"","type":"StorageType","optional":true,"description":"<p>Type of storage: &#39;session&#39; or &#39;local&#39;\\nDefault: &#39;local&#39;</p>\\n","line":65,"rawdescription":"\\n\\nType of storage: \'session\' or \'local\'\\nDefault: \'local\'\\n"},{"name":"version","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Version of the App (for storage handling)\\nDefault: null</p>\\n","line":34,"rawdescription":"\\n\\nVersion of the App (for storage handling)\\nDefault: null\\n"},{"name":"wsUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Websocket URL to server API</p>\\n","line":17,"rawdescription":"\\n\\nWebsocket URL to server API\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Configuration for base module</p>\\n","rawdescription":"\\n\\nConfiguration for base module\\n","methods":[]},{"name":"Breadcrumb","id":"interface-Breadcrumb-235e71ac1b67ddfb3deecb74f0a964226563912db8c7dc3237358e613501a075f6b9bc18a074f3a0f51a3d57e60448ccc33d592264e417c308ff99fa9427e845","file":"projects/ng-base/shared/interfaces/breadcrumb.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Breadcrumb {\\n  label: string;\\n  url: string;\\n}\\n","properties":[{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"CombinedFilterInput","id":"interface-CombinedFilterInput-cfb4e6f200d524afe17aaa195ba5f121428d44a5e2681e0baee680e0ee662847f11d7043b139d81b6fdb1774e9bce3f69f1ba4baa2d9c3889f53f3a4c5892b39","file":"projects/ng-base/shared/interfaces/combined-filter-input.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { LogicalOperatorEnum } from \'../enums/logical-operator.enum\';\\nimport { FilterInput } from \'./filter-input.interface\';\\n\\n/**\\n * Combined filter input\\n */\\nexport interface CombinedFilterInput {\\n  logicalOperator?: LogicalOperatorEnum;\\n  filters?: FilterInput[];\\n}\\n","properties":[{"name":"filters","deprecated":false,"deprecationMessage":"","type":"FilterInput[]","optional":true,"description":"","line":9},{"name":"logicalOperator","deprecated":false,"deprecationMessage":"","type":"LogicalOperatorEnum","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"description":"<p>Combined filter input</p>\\n","rawdescription":"\\n\\nCombined filter input\\n","methods":[]},{"name":"FilterInput","id":"interface-FilterInput-1075510bef47ced45a3de5b5925d54452f0d953f9821bf70dbcf4d187ed87cd2916fdd65461e7b468883b41da071471a1646212a30b467d6d1790cee27ab6e22","file":"projects/ng-base/shared/interfaces/filter-input.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SingleFilterInput } from \'./single-filter-input.interface\';\\nimport { CombinedFilterInput } from \'./combined-filter-input.interface\';\\n\\n/**\\n * Filter input\\n */\\nexport interface FilterInput {\\n  combinedFilter?: CombinedFilterInput;\\n  singleFilter?: SingleFilterInput;\\n}\\n","properties":[{"name":"combinedFilter","deprecated":false,"deprecationMessage":"","type":"CombinedFilterInput","optional":true,"description":"","line":8},{"name":"singleFilter","deprecated":false,"deprecationMessage":"","type":"SingleFilterInput","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":165,"description":"<p>Filter input</p>\\n","rawdescription":"\\n\\nFilter input\\n","methods":[]},{"name":"FindArgs","id":"interface-FindArgs-82af4e6e93e99af98b190c03a508c8b1db87949ea42401c145725ac179982b1d6928e85d520dfb3c8042b2dc53b8b36dfded0488e26debbffd85af81c8e8cd11","file":"projects/ng-base/shared/interfaces/find-args.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FilterInput } from \'./filter-input.interface\';\\nimport { SortInput } from \'./sort-input.interface\';\\n\\nexport interface FindArgs {\\n  limit: number;\\n  offset: number;\\n  skip: number;\\n  sort: SortInput[];\\n  take: number;\\n  filter: FilterInput;\\n}\\n","properties":[{"name":"filter","deprecated":false,"deprecationMessage":"","type":"FilterInput","optional":false,"description":"","line":10},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5},{"name":"offset","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":6},{"name":"skip","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":7},{"name":"sort","deprecated":false,"deprecationMessage":"","type":"SortInput[]","optional":false,"description":"","line":8},{"name":"take","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GraphqlCrudType","id":"interface-GraphqlCrudType-9f5c17ce275cf114f2eed02a2def802221eb1af13e0c604a6dbcf7d525b333728e7afb1a6049ac16ab7077d270d9d455f5fca8c43fadaf84835580748a54811d","file":"projects/ng-base/shared/interfaces/graphql-crud-type.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GraphqlCrudType {\\n  name: string;\\n  create: boolean;\\n  update: boolean;\\n  delete: boolean;\\n}\\n","properties":[{"name":"create","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":3},{"name":"delete","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":5},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"update","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GraphQLFieldsObject","id":"interface-GraphQLFieldsObject-438fbcf7612c95b12b3440de2538d93a7b93d9cc229d60627f2af86810e3b5940ef02332df0ba27a92968d9bb348045346c3c1a6548e1e5cf3975dcd77b76e4b","file":"projects/ng-base/shared/interfaces/graphql-fields-object.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface GraphQLFieldsObject {\\n  [key: string]: boolean | (string | GraphQLFieldsObject)[] | GraphQLFieldsObject;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-438fbcf7612c95b12b3440de2538d93a7b93d9cc229d60627f2af86810e3b5940ef02332df0ba27a92968d9bb348045346c3c1a6548e1e5cf3975dcd77b76e4b","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean | [] | GraphQLFieldsObject","line":4,"deprecated":false,"deprecationMessage":""}],"kind":175,"description":"<p>GraphQL fields object</p>\\n","rawdescription":"\\n\\nGraphQL fields object\\n","methods":[]},{"name":"ICanComponentDeactivate","id":"interface-ICanComponentDeactivate-820b96cdfb057335d0eb7d53dc3a048676089c83cbaa8d50edeb24a31e7ba5cd9532e690fbff80b8b4e5b3f0513415db580b32e3caf7cd3bd89a1a51bbfdc234","file":"projects/ng-base/shared/interfaces/can-component-deactivate.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable } from \'rxjs\';\\n\\n/**\\n * Interface for \\"can deactivate\\" handling of the corresponding guard\\n */\\nexport interface ICanComponentDeactivate {\\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\\n}\\n","properties":[{"name":"canDeactivate","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"description":"<p>Interface for &quot;can deactivate&quot; handling of the corresponding guard</p>\\n","rawdescription":"\\n\\nInterface for \\"can deactivate\\" handling of the corresponding guard\\n","methods":[]},{"name":"IFieldObject","id":"interface-IFieldObject-882c7eccb35750eef46048ebd033fab6a5d39147be31e570f89f4e61c08511564db741084205b17b8b6faef1b4ee1572939ca272fb07de8ffbbade3abd3bd6b8","file":"projects/ng-base/shared/interfaces/field-object.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IFieldObject {\\n  [key: string]: string | string[] | IFieldObject;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-882c7eccb35750eef46048ebd033fab6a5d39147be31e570f89f4e61c08511564db741084205b17b8b6faef1b4ee1572939ca272fb07de8ffbbade3abd3bd6b8","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"string | [] | IFieldObject","line":4,"deprecated":false,"deprecationMessage":""}],"kind":175,"description":"<p>GraphQL field object</p>\\n","rawdescription":"\\n\\nGraphQL field object\\n","methods":[]},{"name":"IGraphQLOptions","id":"interface-IGraphQLOptions-00260a345e7dbf04a7fe57b5e89a7775d18b32563ddb05190e452e664b60f779c7f08b92d3f12e614b67bf6b2543d305749cc0e1bc9826a1f738efe543025b9d","file":"projects/ng-base/shared/interfaces/graphql-options.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { GraphQLRequestType } from \'../enums/graphql-request-type.enum\';\\n\\n/**\\n * Options for graphql requests\\n */\\nexport interface IGraphQLOptions {\\n  arguments?: any;\\n  fields?: any;\\n  log?: boolean;\\n  model?: any;\\n  type?: GraphQLRequestType;\\n}\\n","properties":[{"name":"arguments","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":7},{"name":"fields","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":8},{"name":"log","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":9},{"name":"model","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":10},{"name":"type","deprecated":false,"deprecationMessage":"","type":"GraphQLRequestType","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"description":"<p>Options for graphql requests</p>\\n","rawdescription":"\\n\\nOptions for graphql requests\\n","methods":[]},{"name":"IGraphQLPlusOptions","id":"interface-IGraphQLPlusOptions-e558a6ed3c26b97ac58321660c671da55329ff46a81b88ab4e634da8ec6f042bbaaac272925b3eb5083bc7c42ccea52e2ddaae61fcf8b95c7443fbec01e3bef5","file":"projects/ng-base/shared/interfaces/graphql-plus-options.interfacen.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IGraphQLOptions } from \'./graphql-options.interface\';\\n\\n/**\\n * GraphQL extra options for errors and loading indicator\\n */\\nexport interface IGraphQLPlusOptions extends IGraphQLOptions {\\n  ignoreErrors?: boolean;\\n  excludedErrors?: string | string[];\\n  loading?: boolean;\\n}\\n","properties":[{"name":"excludedErrors","deprecated":false,"deprecationMessage":"","type":"string | string[]","optional":true,"description":"","line":8},{"name":"ignoreErrors","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":165,"description":"<p>GraphQL extra options for errors and loading indicator</p>\\n","rawdescription":"\\n\\nGraphQL extra options for errors and loading indicator\\n","methods":[],"extends":"IGraphQLOptions"},{"name":"IGraphQLTypeCollection","id":"interface-IGraphQLTypeCollection-b6c689a137cb44145962f6c864cdc14a92c38968abca576cba31748fb2e4827a89ebecea667bdde008a71e38ef42c9f5c98d94ffb5228b04294d1babb7a833f2","file":"projects/ng-base/shared/interfaces/graphql-type-collection.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { GraphQLType } from \'../classes/graphql-type.class\';\\n\\n/**\\n * Interface of GraphQL type collection\\n */\\nexport interface IGraphQLTypeCollection {\\n  [key: string]: IGraphQLTypeCollection | GraphQLType;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-b6c689a137cb44145962f6c864cdc14a92c38968abca576cba31748fb2e4827a89ebecea667bdde008a71e38ef42c9f5c98d94ffb5228b04294d1babb7a833f2","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"IGraphQLTypeCollection | GraphQLType","line":6,"deprecated":false,"deprecationMessage":""}],"kind":175,"description":"<p>Interface of GraphQL type collection</p>\\n","rawdescription":"\\n\\nInterface of GraphQL type collection\\n","methods":[]},{"name":"Option","id":"interface-Option-f12a691c69d8bdfd36f188a85a1a406399000435765792775dfdcbb8c8123a7f702c6cd805168e350a7d64e74e38976669116e16a67511521cce48cb0b76c10f","file":"projects/ng-base/base-components/components/select/select.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\ninterface Option {\\n  text: string;\\n  value: string | number;\\n}\\n\\n@Component({\\n  selector: \'base-select\',\\n  templateUrl: \'./select.component.html\',\\n  styleUrls: [\'./select.component.scss\'],\\n})\\nexport class SelectComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() placeholder?: string = \'\';\\n  @Input() control: any;\\n  @Input() tabIndex?: number;\\n  @Input() required = false;\\n  @Input() multiple = false;\\n  @Input() search = false;\\n  @Input() options: Option[] = [];\\n}\\n","properties":[{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string | number","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RestartableClient","id":"interface-RestartableClient-14767a5ab52b7d1fae0802b055f0b878a7b067d62587fc368b3040423fba25c8703efd4e84cd34ebc5ef081355718b6318e84a0609230861c0b9fddbd1aeed8a","file":"projects/ng-base/shared/functions/ws-client.function.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { createClient, Client, ClientOptions } from \'graphql-ws\';\\n\\nexport interface RestartableClient extends Client {\\n  restart(): void;\\n}\\n\\nexport function createRestartableClient(options: ClientOptions): RestartableClient {\\n  let restartRequested = false;\\n  let restart = () => {\\n    restartRequested = true;\\n  };\\n\\n  const { on = undefined } = options;\\n\\n  const client = createClient({\\n    ...options,\\n    on: {\\n      ...on,\\n      connected: (socket: any) => {\\n        // @ts-ignore\\n        on?.connected?.(socket);\\n\\n        restart = () => {\\n          if (socket.readyState === WebSocket.OPEN) {\\n            // if the socket is still open for the restart, do the restart\\n            socket.close(4205, \'Client Restart\');\\n          } else {\\n            // otherwise the socket might\'ve closed, indicate that you want\\n            // a restart on the next connected event\\n            restartRequested = true;\\n          }\\n        };\\n\\n        // just in case you were eager to restart\\n        if (restartRequested) {\\n          restartRequested = false;\\n          restart();\\n        }\\n      },\\n    },\\n  });\\n\\n  return {\\n    ...client,\\n    restart: () => restart(),\\n  };\\n}\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"restart","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":""}],"extends":"Client"},{"name":"SEOData","id":"interface-SEOData-ce6a5e912669fe655ffe2e0ba4e50309c8683f65ac585106af0ed74e254793d03e8c715979542d5866af24c035feb8ba3cc1e80facc86a9181fea0c7f47c5842","file":"projects/ng-base/src/services/seo.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Meta, Title } from \'@angular/platform-browser\';\\n\\ninterface SEOData {\\n  title: string;\\n  description: string;\\n  image?: string;\\n  url?: string;\\n  keywords?: string;\\n}\\n\\n/**\\n * SEO service for setting HTML meta data\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class SEOService {\\n  constructor(private titleService: Title, private metaTagService: Meta) {}\\n\\n  public initPageForSEO(input: SEOData) {\\n    this.setGeneralData(input);\\n    this.setTwitterData(input);\\n    this.setTwitterData(input);\\n    this.setFacebookData(input);\\n\\n    if (input.keywords) {\\n      this.setPageKeywords(input.keywords);\\n    }\\n  }\\n\\n  /**\\n   * Set general metadata\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setGeneralData(data: SEOData) {\\n    this.titleService.setTitle(data.title);\\n    this.metaTagService.updateTag({ name: \'description\', content: data.description });\\n  }\\n\\n  /**\\n   * Set metadata for twitter\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setTwitterData(data: SEOData) {\\n    this.metaTagService.updateTag({ name: \'twitter:title\', content: data.title });\\n    this.metaTagService.updateTag({ name: \'twitter:description\', content: data.description });\\n    this.metaTagService.updateTag({\\n      property: \'twitter:url\',\\n      content: data.url ? data.url : window.location.href,\\n    });\\n\\n    if (data.image) {\\n      this.metaTagService.updateTag({\\n        property: \'twitter:image\',\\n        content: data.image,\\n      });\\n\\n      this.metaTagService.updateTag({\\n        property: \'twitter:card\',\\n        content: \'summary_large_image\',\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Set metadata for facebook\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setFacebookData(data: SEOData) {\\n    this.metaTagService.updateTag({ property: \'og:title\', content: data.title });\\n    this.metaTagService.updateTag({ property: \'og:description\', content: data.description });\\n    this.metaTagService.updateTag({\\n      property: \'og:type\',\\n      content: \'website\',\\n    });\\n    this.metaTagService.updateTag({\\n      property: \'og:url\',\\n      content: data.url ? data.url : window.location.href,\\n    });\\n\\n    if (data.image) {\\n      this.metaTagService.updateTag({\\n        property: \'og:image\',\\n        content: data.image,\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Set page keywords\\n   *\\n   * @param keywords\\n   * @private\\n   */\\n  private setPageKeywords(keywords: string) {\\n    this.metaTagService.updateTag({ name: \'keywords\', content: keywords });\\n  }\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"image","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"keywords","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SingleFilterInput","id":"interface-SingleFilterInput-321f234a60b58e2375e98b9f08a664da4e50f8b7f98c1f5c4d0d835b5753afb288129056211f5fcaccd61b5a46da9210f041973e1610695774d70d681322b21d","file":"projects/ng-base/shared/interfaces/single-filter-input.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ComparisonOperatorEnum } from \'../enums/comparison-operator.enum\';\\n\\n/**\\n * Single filter input kjhg\\n */\\nexport interface SingleFilterInput {\\n  field: string;\\n  not?: boolean;\\n  operator: ComparisonOperatorEnum;\\n  options?: string;\\n  value: any;\\n}\\n","properties":[{"name":"field","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"not","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8},{"name":"operator","deprecated":false,"deprecationMessage":"","type":"ComparisonOperatorEnum","optional":false,"description":"","line":9},{"name":"options","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"value","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"description":"<p>Single filter input kjhg</p>\\n","rawdescription":"\\n\\nSingle filter input kjhg\\n","methods":[]},{"name":"SortInput","id":"interface-SortInput-2679faa75c0cf229714d9b15d7368b784f96abb08d9f522de07ca712203a2b05a5c620c041c773b8d7d7f8b03915c46f6c726bc8d26014255bc8ddb7876f15c7","file":"projects/ng-base/shared/interfaces/sort-input.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SortOrderEnum } from \'../enums/sort-order.enum\';\\n\\nexport interface SortInput {\\n  field: string;\\n  order: SortOrderEnum;\\n}\\n","properties":[{"name":"field","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"order","deprecated":false,"deprecationMessage":"","type":"SortOrderEnum","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"TimeComponents","id":"interface-TimeComponents-c38fe61e9b68859dd89ab00922499d340381e8c1504ac1afcfbbc711e897220a551a0a6a8244aa444f6ca8d20ac4e80ebdcf78e38bbc87d46f1bf1d020b78455","file":"projects/ng-base/shared/interfaces/time-components.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface TimeComponents {\\n  secondsToDday: number;\\n  minutesToDday: number;\\n  hoursToDday: number;\\n  daysToDday: number;\\n}\\n","properties":[{"name":"daysToDday","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5},{"name":"hoursToDday","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"minutesToDday","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3},{"name":"secondsToDday","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Toast","id":"interface-Toast-4a04cd1401da4281834adbfb4dad588f99e4b2032d52a9b8d25bcc01305666c05282927a543effc4a33fa1a36c8f6a3aa642ce7357576769352a2e9de5158b16","file":"projects/ng-base/shared/interfaces/toast.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ToastType } from \'../enums/toast-type.enum\';\\n\\nexport interface Toast {\\n  id: string;\\n  type: ToastType;\\n  title?: string;\\n  description?: string;\\n  errorCode?: string;\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"errorCode","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"type","deprecated":false,"deprecationMessage":"","type":"ToastType","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[{"name":"AuthService","id":"injectable-AuthService-ecd786127eeeb0ce14a6953835b6cda1e59a0286beb96a7e8fd92b5982691932a3d45ecc0b8cf9919632481468956b07e006fd886ec9e3b9f0e2b48a9a3bdcd1","file":"projects/ng-base/shared/services/auth.service.ts","properties":[{"name":"_currentUser","defaultValue":"new BehaviorSubject<BasicUser>(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<BasicUser>","optional":false,"description":"","line":16,"modifierKind":[121]},{"name":"_token","defaultValue":"new BehaviorSubject<string>(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string>","optional":false,"description":"","line":17,"modifierKind":[121]}],"methods":[{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogout\\n","description":"<p>Logout</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"<p>Authentication service</p>\\n","rawdescription":"\\n\\nAuthentication service\\n","sourceCode":"import { Inject, Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { BASE_MODULE_CONFIG, BaseModuleConfig } from \'../interfaces/base-module-config.interface\';\\nimport { BasicUser } from \'../classes/basic-user.class\';\\nimport { StorageService } from \'./storage.service\';\\nimport { WsService } from \'./ws.service\';\\n\\n/**\\n * Authentication service\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class AuthService {\\n  // Subjects\\n  private _currentUser: BehaviorSubject<BasicUser> = new BehaviorSubject<BasicUser>(null);\\n  private _token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\\n\\n  /**\\n   * Constructor\\n   */\\n  constructor(\\n    @Inject(BASE_MODULE_CONFIG) private moduleConfig: BaseModuleConfig,\\n    private storageService: StorageService,\\n    private wsService: WsService\\n  ) {\\n    this.token = this.storageService.load(\'token\') as string;\\n    this.currentUser = this.storageService.load(\'currentUser\') as BasicUser;\\n  }\\n\\n  /**\\n   * Logout\\n   */\\n  public logout() {\\n    this.storageService.remove([\'token\', \'currentUser\']);\\n    this.currentUser = null;\\n    this.token = null;\\n  }\\n\\n  // #################################################################\\n  // Current User\\n  // #################################################################\\n\\n  get currentUser(): BasicUser {\\n    return this._currentUser.value;\\n  }\\n\\n  set currentUser(user: BasicUser) {\\n    this._currentUser.next(user);\\n    this.storageService.save(\'currentUser\', user);\\n  }\\n\\n  get currentUserObservable(): Observable<BasicUser> {\\n    return this._currentUser.asObservable();\\n  }\\n\\n  // #################################################################\\n  // Token\\n  // #################################################################\\n\\n  get token(): string {\\n    return this._token.value;\\n  }\\n\\n  set token(token: string) {\\n    this._token.next(token);\\n    this.storageService.save(\'token\', token);\\n    this.wsService.reconnect();\\n  }\\n\\n  get tokenObservable(): Observable<string> {\\n    return this._token.asObservable();\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Constructor</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":""}],"line":17,"rawdescription":"\\n\\nConstructor\\n","jsdoctags":[{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"currentUser":{"name":"currentUser","setSignature":{"name":"currentUser","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"user","type":"BasicUser","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":48,"jsdoctags":[{"name":"user","type":"BasicUser","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"currentUser","type":"","returnType":"BasicUser","line":44}},"currentUserObservable":{"name":"currentUserObservable","getSignature":{"name":"currentUserObservable","type":"","returnType":"Observable<BasicUser>","line":53}},"token":{"name":"token","setSignature":{"name":"token","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":65,"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"token","type":"string","returnType":"string","line":61}},"tokenObservable":{"name":"tokenObservable","getSignature":{"name":"tokenObservable","type":"","returnType":"Observable<string>","line":71}}},"type":"injectable"},{"name":"BreadcrumbService","id":"injectable-BreadcrumbService-753ae279a1ece55b3b381492d62c20babf3a3ba89563cd7a37f8c1ab5ea0081e2a67ccd0f798e5048cdde81647b58b29142af49a526d12b293b03d63d81c584a","file":"projects/ng-base/shared/services/breadcrumb.service.ts","properties":[{"name":"_breadcrumbs","defaultValue":"new BehaviorSubject<Breadcrumb[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121,144]}],"methods":[{"name":"addBreadcrumb","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"parentUrl","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"breadcrumbs","type":"Breadcrumb[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd element to breadcrumb\\n\\n","description":"<p>Add element to breadcrumb</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":1097,"end":1102,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"route"},"type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"pos":1091,"end":1096,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1115,"end":1124,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"parentUrl"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1109,"end":1114,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1137,"end":1148,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"breadcrumbs"},"type":"Breadcrumb[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1131,"end":1136,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1155,"end":1162,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"getLabel","args":[{"name":"data","type":"Data","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet label for breadcrumb\\n\\n","description":"<p>Get label for breadcrumb</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":1706,"end":1710,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"Data","deprecated":false,"deprecationMessage":"","tagName":{"pos":1700,"end":1705,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1717,"end":1724,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"subscribeToRouteChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubscribe to route changes and add element to breadcrumb\\n","description":"<p>Subscribe to route changes and add element to breadcrumb</p>\\n"}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, filter } from \'rxjs\';\\nimport { ActivatedRouteSnapshot, Data, NavigationEnd, Router } from \'@angular/router\';\\nimport { Breadcrumb } from \'../interfaces/breadcrumb.interface\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class BreadcrumbService {\\n  private readonly _breadcrumbs = new BehaviorSubject<Breadcrumb[]>([]);\\n\\n  set breadcrumbs(value: Breadcrumb[]) {\\n    this._breadcrumbs.next(value);\\n  }\\n\\n  get breadcrumbsObservable() {\\n    return this._breadcrumbs.asObservable();\\n  }\\n\\n  constructor(private router: Router) {\\n    this.subscribeToRouteChanges();\\n  }\\n\\n  /**\\n   * Subscribe to route changes and add element to breadcrumb\\n   */\\n  subscribeToRouteChanges() {\\n    this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event) => {\\n      const root = this.router.routerState.snapshot.root;\\n      const breadcrumbs: Breadcrumb[] = [];\\n      this.addBreadcrumb(root, [], breadcrumbs);\\n      this.breadcrumbs = breadcrumbs;\\n    });\\n  }\\n\\n  /**\\n   * Add element to breadcrumb\\n   *\\n   * @param route\\n   * @param parentUrl\\n   * @param breadcrumbs\\n   * @private\\n   */\\n  private addBreadcrumb(route: ActivatedRouteSnapshot, parentUrl: string[], breadcrumbs: Breadcrumb[]) {\\n    if (route) {\\n      const routeUrl = parentUrl.concat(route.url.map((url) => url.path));\\n\\n      if (route.data?.breadcrumb) {\\n        const breadcrumb = {\\n          label: this.getLabel(route.data),\\n          url: \'/\' + routeUrl.join(\'/\'),\\n        };\\n        breadcrumbs.push(breadcrumb);\\n      }\\n\\n      this.addBreadcrumb(route.firstChild, routeUrl, breadcrumbs);\\n    }\\n  }\\n\\n  /**\\n   * Get label for breadcrumb\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private getLabel(data: Data) {\\n    return typeof data.breadcrumb === \'function\' ? data.breadcrumb(data) : data.breadcrumb;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"breadcrumbs":{"name":"breadcrumbs","setSignature":{"name":"breadcrumbs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"Breadcrumb[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":12,"jsdoctags":[{"name":"value","type":"Breadcrumb[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"breadcrumbsObservable":{"name":"breadcrumbsObservable","getSignature":{"name":"breadcrumbsObservable","type":"","returnType":"","line":16}}},"type":"injectable"},{"name":"FormsService","id":"injectable-FormsService-2e3b0dd5d2e3cebaf00157de4df7271a1af627d5947dc3f0212cddf0dfa96984be4b47ae4d4f88f7a4dec164a157d133569c889e0a6e17b38fbb6f88c0376afa","file":"projects/ng-base/shared/services/forms.service.ts","properties":[],"methods":[{"name":"validateAllFormFields","args":[{"name":"formGroup","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formGroup","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { FormGroup, FormControl } from \'@angular/forms\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class FormsService {\\n  public validateAllFormFields(formGroup: FormGroup) {\\n    Object.keys(formGroup.controls).forEach((field) => {\\n      const control = formGroup.get(field);\\n      if (control instanceof FormControl) {\\n        control.markAsTouched({ onlySelf: true });\\n      } else if (control instanceof FormGroup) {\\n        this.validateAllFormFields(control);\\n      }\\n    });\\n  }\\n}\\n","type":"injectable"},{"name":"FullscreenService","id":"injectable-FullscreenService-ed862dda85110e6bd5bb1a996d22daecbe20ea6a291acd5eec7b2410ced5cea419126ae927ecc289f3f6fe6c77541350e36bc28e45bf0a030a82757f328ab7da","file":"projects/ng-base/src/services/fullscreen.service.ts","properties":[{"name":"_isFullscreenActive","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":11,"modifierKind":[121]}],"methods":[{"name":"listenToFullscreenEvent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEvent Listener for fullscreen toggle\\n","description":"<p>Event Listener for fullscreen toggle</p>\\n","modifierKind":[121]},{"name":"toggleFullscreen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"<p>Fullscreen service</p>\\n","rawdescription":"\\n\\nFullscreen service\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\n\\n/**\\n * Fullscreen service\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class FullscreenService {\\n  private _isFullscreenActive: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\\n\\n  constructor() {\\n    this.listenToFullscreenEvent();\\n  }\\n\\n  get fullscreenState(): boolean {\\n    return this._isFullscreenActive.value;\\n  }\\n\\n  get fullscreenStateAsObservable(): Observable<boolean> {\\n    return this._isFullscreenActive.asObservable();\\n  }\\n\\n  public toggleFullscreen() {\\n    const elem = document.documentElement;\\n    if (!this._isFullscreenActive.value) {\\n      elem.requestFullscreen();\\n      this._isFullscreenActive.next(true);\\n    } else {\\n      document.exitFullscreen();\\n      this._isFullscreenActive.next(false);\\n    }\\n  }\\n\\n  /**\\n   * Event Listener for fullscreen toggle\\n   */\\n  private listenToFullscreenEvent() {\\n    document.addEventListener(\'fullscreenchange\', () => {\\n      if (document.fullscreenElement) {\\n        this._isFullscreenActive.next(true);\\n      } else {\\n        this._isFullscreenActive.next(false);\\n      }\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":11},"accessors":{"fullscreenState":{"name":"fullscreenState","getSignature":{"name":"fullscreenState","type":"boolean","returnType":"boolean","line":17}},"fullscreenStateAsObservable":{"name":"fullscreenStateAsObservable","getSignature":{"name":"fullscreenStateAsObservable","type":"","returnType":"Observable<boolean>","line":21}}},"type":"injectable"},{"name":"GraphQLMetaService","id":"injectable-GraphQLMetaService-dd13ba31b70a260a4ccd97adae8854c83cecf4fb3e6ce0bea3a9ad9c535aabbeda1e72cd0bd7ee73872d4f7c35ca39f29d6d8a6899cd2f746b2f5546ded6fb69","file":"projects/ng-base/shared/services/graphql-meta.service.ts","properties":[{"name":"_frozenSchema","deprecated":false,"deprecationMessage":"","type":"GraphQLSchema","optional":false,"description":"","line":19,"modifierKind":[122]},{"name":"_frozenSchemaObservable","deprecated":false,"deprecationMessage":"","type":"Observable<GraphQLSchema>","optional":false,"description":"","line":20,"modifierKind":[122]},{"name":"_introspectionQuery","deprecated":false,"deprecationMessage":"","type":"IntrospectionQuery","optional":false,"description":"","line":26,"modifierKind":[121]},{"name":"_meta","deprecated":false,"deprecationMessage":"","type":"GraphQLMeta","optional":false,"description":"","line":21,"modifierKind":[122]},{"name":"_metaObservable","deprecated":false,"deprecationMessage":"","type":"Observable<GraphQLMeta>","optional":false,"description":"","line":22,"modifierKind":[122]},{"name":"_schemaObservable","deprecated":false,"deprecationMessage":"","type":"Observable<GraphQLSchema>","optional":false,"description":"","line":23,"modifierKind":[122]}],"methods":[{"name":"getMeta","args":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Observable<GraphQLMeta>","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet meta for API\\nSee https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\n","description":"<p>Get meta for API\\nSee <a href=\\"https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\">https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d</a></p>\\n","modifierKind":[123],"jsdoctags":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"getSchema","args":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Observable<GraphQLSchema>","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet schema for API\\nSee https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\n","description":"<p>Get schema for API\\nSee <a href=\\"https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\">https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d</a></p>\\n","modifierKind":[123],"jsdoctags":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>GraphQL meta service</p>\\n<p>For collecting meta information of the GraphQL API</p>\\n","rawdescription":"\\n\\nGraphQL meta service\\n\\nFor collecting meta information of the GraphQL API\\n","sourceCode":"import { Apollo, gql } from \'apollo-angular\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Observable, of } from \'rxjs\';\\nimport { buildClientSchema, getIntrospectionQuery, GraphQLSchema, IntrospectionQuery } from \'graphql\';\\nimport { map } from \'rxjs/operators\';\\nimport { GraphQLMeta } from \'../classes/graphql-meta.class\';\\nimport { Helper } from \'../classes/helper.class\';\\n\\n/**\\n * GraphQL meta service\\n *\\n * For collecting meta information of the GraphQL API\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GraphQLMetaService {\\n  // Caches\\n  protected _frozenSchema: GraphQLSchema;\\n  protected _frozenSchemaObservable: Observable<GraphQLSchema>;\\n  protected _meta: GraphQLMeta;\\n  protected _metaObservable: Observable<GraphQLMeta>;\\n  protected _schemaObservable: Observable<GraphQLSchema>;\\n\\n  // Private caches\\n  private _introspectionQuery: IntrospectionQuery;\\n\\n  /**\\n   * Include services\\n   */\\n  constructor(protected apollo: Apollo) {}\\n\\n  /**\\n   * Getter of introspectionQuery\\n   */\\n  get introspectionQuery(): IntrospectionQuery {\\n    return JSON.parse(JSON.stringify(this._introspectionQuery));\\n  }\\n\\n  /**\\n   * Get schema for API\\n   * See https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\n   */\\n  public getSchema(options: { cache?: boolean; freeze?: boolean } = {}): Observable<GraphQLSchema> {\\n    // Get configurations\\n    const config = {\\n      cache: true,\\n      freeze: true,\\n      ...options,\\n    };\\n\\n    // Use caching\\n    if (config.cache) {\\n      if (config.freeze && this._frozenSchema) {\\n        return of(this._frozenSchema);\\n      }\\n      if (this._introspectionQuery) {\\n        return of(buildClientSchema(this.introspectionQuery));\\n      }\\n      if (config.freeze && this._frozenSchemaObservable) {\\n        return this._frozenSchemaObservable;\\n      } else if (!config.freeze && this._schemaObservable) {\\n        return this._schemaObservable;\\n      }\\n    }\\n\\n    // Request schema from server\\n    const observable = this.apollo\\n      .query({\\n        query: gql(getIntrospectionQuery({ descriptions: false })),\\n      })\\n      .pipe(\\n        map((schema: any) => {\\n          // Cache introspectionQuery\\n          this._introspectionQuery = schema.data;\\n\\n          // Convert schema to GraphQLSchema\\n          this._frozenSchema = Helper.deepFreeze(buildClientSchema(this.introspectionQuery));\\n\\n          // Return GraphQLSchema\\n          if (config.freeze) {\\n            return this._frozenSchema;\\n          }\\n          return buildClientSchema(schema.data);\\n        })\\n      );\\n\\n    // Set observables\\n    if (config.freeze) {\\n      this._frozenSchemaObservable = observable;\\n    } else {\\n      this._schemaObservable = observable;\\n    }\\n\\n    // Return result\\n    return observable;\\n  }\\n\\n  /**\\n   * Get meta for API\\n   * See https://www.apollographql.com/blog/three-ways-to-represent-your-graphql-schema-a41f4175100d\\n   */\\n  public getMeta(options: { cache?: boolean; log?: boolean } = {}): Observable<GraphQLMeta> {\\n    // Get configurations\\n    const config = {\\n      cache: true,\\n      log: false,\\n      ...options,\\n    };\\n\\n    // Use caching\\n    if (config.cache) {\\n      if (this._meta) {\\n        return of(this._meta);\\n      } else if (this._metaObservable) {\\n        return this._metaObservable;\\n      }\\n    }\\n\\n    // Request schema from server\\n    const observable = this.getSchema(options).pipe(\\n      map((schema: any) => {\\n        // Log\\n        if (config.log) {\\n          console.log({ schema });\\n        }\\n\\n        this._meta = new GraphQLMeta(schema);\\n        return this._meta;\\n      })\\n    );\\n\\n    // Set observables\\n    this._metaObservable = observable;\\n\\n    // Return result\\n    return observable;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Include services</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":""}],"line":26,"rawdescription":"\\n\\nInclude services\\n","jsdoctags":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"introspectionQuery":{"name":"introspectionQuery","getSignature":{"name":"introspectionQuery","type":"","returnType":"IntrospectionQuery","line":36,"rawdescription":"\\n\\nGetter of introspectionQuery\\n","description":"<p>Getter of introspectionQuery</p>\\n"}}},"type":"injectable"},{"name":"GraphQLPlusService","id":"injectable-GraphQLPlusService-7bfc93548366e67617bf3b80d05c6a8954c73f39765b877fb26a44f267900617ea3349c9ce80baaa5ee0774fbcfed18ad81e93a6dc45e532e32e1c3c36b413c4","file":"projects/ng-base/shared/services/graphql-plus.service.ts","properties":[],"methods":[{"name":"displayError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"graphQl","args":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"handleError","args":[{"name":"error","type":"Error","deprecated":false,"deprecationMessage":""},{"name":"excludedErrors","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"Error","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"excludedErrors","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"handleLoader","args":[{"name":"state","type":"\\"start\\" | \\"stop\\"","deprecated":false,"deprecationMessage":""},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"\\"start\\" | \\"stop\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"graphQLTypeCollectionToStringArray","args":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":""},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"{}","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet fields / args from IGraphQLTypeCollection\\n","description":"<p>Get fields / args from IGraphQLTypeCollection</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"prepareArguments","args":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare arguments for GraphQL request\\n","description":"<p>Prepare arguments for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"prepareFields","args":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":427,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare fields for GraphQL request\\n","description":"<p>Prepare fields for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}}],"deprecated":false,"deprecationMessage":"","description":"<p>GraphQL plus service, for extra error handling and loading indication</p>\\n","rawdescription":"\\n\\nGraphQL plus service, for extra error handling and loading indication\\n","sourceCode":"import { Apollo } from \'apollo-angular\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { GraphQLService } from \'./graphql.service\';\\nimport { GraphQLMetaService } from \'./graphql-meta.service\';\\nimport { IGraphQLPlusOptions } from \'../interfaces/graphql-plus-options.interfacen\';\\nimport { LoaderService } from \'./loader.service\';\\nimport { GraphQLRequestType } from \'../enums/graphql-request-type.enum\';\\n\\n/**\\n * GraphQL plus service, for extra error handling and loading indication\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GraphQLPlusService extends GraphQLService {\\n  /**\\n   * Include services\\n   */\\n  constructor(\\n    protected apollo: Apollo,\\n    protected graphqlMetaService: GraphQLMetaService,\\n    protected loaderService: LoaderService\\n  ) {\\n    super(apollo, graphqlMetaService);\\n  }\\n\\n  public graphQl(graphql: string, options: IGraphQLPlusOptions = {}): Observable<any> {\\n    this.handleLoader(\'start\', options);\\n\\n    return new Observable((subscriber) => {\\n      super.graphQl(graphql, options).subscribe(\\n        (response) => {\\n          if (response && response.errors) {\\n            this.handleError(response.errors, options.excludedErrors);\\n            subscriber.error(response);\\n            this.handleLoader(\'stop\', options);\\n            subscriber.complete();\\n          }\\n\\n          subscriber.next(response);\\n          this.handleLoader(\'stop\', options);\\n          if (options.type !== GraphQLRequestType.SUBSCRIPTION) {\\n            subscriber.complete();\\n          }\\n        },\\n        (error) => {\\n          if (!options.ignoreErrors) {\\n            this.handleError(error, options.excludedErrors);\\n          }\\n          subscriber.error(error);\\n          this.handleLoader(\'stop\', options);\\n          subscriber.complete();\\n        }\\n      );\\n    });\\n  }\\n\\n  handleLoader(state: \'start\' | \'stop\', options: IGraphQLPlusOptions): void {\\n    if (options.loading) {\\n      if (state === \'start\') {\\n        this.loaderService.start();\\n      } else if (state === \'stop\') {\\n        this.loaderService.stop();\\n      }\\n    }\\n  }\\n\\n  handleError(error: Error, excludedErrors: any = null): void {\\n    if (excludedErrors) {\\n      if (Array.isArray(excludedErrors)) {\\n        excludedErrors.forEach((excludedError) => {\\n          if (error.message.includes(excludedError.toLowerCase())) {\\n            return;\\n          }\\n        });\\n      } else if (error.message.toLowerCase().includes(excludedErrors?.toLowerCase())) {\\n        return;\\n      }\\n    }\\n\\n    this.displayError(error);\\n  }\\n\\n  displayError(error: any): void {\\n    console.error(error);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Include services</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":""},{"name":"graphqlMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""},{"name":"loaderService","type":"LoaderService","deprecated":false,"deprecationMessage":""}],"line":16,"rawdescription":"\\n\\nInclude services\\n","jsdoctags":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphqlMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"loaderService","type":"LoaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"GraphQLService","type":"injectable"},{"name":"GraphQLService","id":"injectable-GraphQLService-cf83d7ca4909aa7daf280a1b7d89797392a9b895ee2db0c3cf4e10f54e22349427a58eab12957261b66d6cde40be742d75ef14bf3ac6f0ca764283b86c039c5e","file":"projects/ng-base/shared/services/graphql.service.ts","properties":[],"methods":[{"name":"graphQl","args":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"IGraphQLOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGraphQL request\\n","description":"<p>GraphQL request</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"IGraphQLOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"graphQLTypeCollectionToStringArray","args":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":""},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"{}","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet fields / args from IGraphQLTypeCollection\\n","description":"<p>Get fields / args from IGraphQLTypeCollection</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"prepareArguments","args":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare arguments for GraphQL request\\n","description":"<p>Prepare arguments for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"prepareFields","args":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":427,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare fields for GraphQL request\\n","description":"<p>Prepare fields for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>GraphQL service</p>\\n","rawdescription":"\\n\\nGraphQL service\\n","sourceCode":"import { Apollo, gql } from \'apollo-angular\';\\nimport { Injectable } from \'@angular/core\';\\nimport { IGraphQLOptions } from \'../interfaces/graphql-options.interface\';\\nimport { GraphQLRequestType } from \'../enums/graphql-request-type.enum\';\\nimport { Observable, throwError } from \'rxjs\';\\nimport { GraphQLMetaService } from \'./graphql-meta.service\';\\nimport { GraphQLEnum } from \'../classes/graphql-enum.class\';\\nimport { GraphQLType } from \'../classes/graphql-type.class\';\\nimport { IGraphQLTypeCollection } from \'../interfaces/graphql-type-collection.interface\';\\nimport { sha256 } from \'js-sha256\';\\n\\n/**\\n * GraphQL service\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GraphQLService {\\n  /**\\n   * Include services\\n   */\\n  constructor(protected apollo: Apollo, protected graphQLMetaService: GraphQLMetaService) {}\\n\\n  /**\\n   * GraphQL request\\n   */\\n  public graphQl(graphql: string, options: IGraphQLOptions = {}): Observable<any> {\\n    // Check arguments\\n    if (!graphql) {\\n      throwError(\'Missing graphql argument\');\\n    }\\n\\n    // Get config\\n    const config = {\\n      arguments: null,\\n      fields: null,\\n      log: false,\\n      model: null,\\n      type: GraphQLRequestType.QUERY,\\n      ...options,\\n    };\\n\\n    // Convert class to Object for arguments\\n    if (typeof config.arguments === \'function\') {\\n      config.arguments = new config.arguments();\\n    }\\n\\n    // Convert class to Object for fields\\n    if (typeof config.fields === \'function\') {\\n      config.fields = new config.fields();\\n    }\\n\\n    // Log\\n    if (config.log) {\\n      console.log({ config });\\n    }\\n\\n    // Send request\\n    return new Observable((subscriber) => {\\n      // Get meta\\n      this.graphQLMetaService.getMeta({ log: config.log }).subscribe((meta) => {\\n        // Prepare fields\\n        let fields;\\n        let allowedFields;\\n\\n        // Log meta\\n        if (config.log) {\\n          console.log({ meta });\\n        }\\n\\n        if (config.fields) {\\n          allowedFields = meta.getFields(graphql, { type: config.type });\\n\\n          // Log meta\\n          if (config.log) {\\n            console.log({ allowedFields });\\n          }\\n\\n          const fieldsData = this.prepareFields(config.fields, {\\n            allowed: allowedFields,\\n          });\\n\\n          // Log fields data\\n          if (config.log) {\\n            fieldsData.usedFields.sort();\\n            fieldsData.schemaFields.sort();\\n            const filtered = fieldsData.schemaFields.filter((field) => !fieldsData.usedFields.includes(field));\\n            const unused = this.graphQLTypeCollectionToStringArray(allowedFields).filter(\\n              (field) => !fieldsData.usedFields.includes(field)\\n            );\\n            console.log({ fieldsData, filtered, unused });\\n          }\\n\\n          fields = fieldsData.fieldsString;\\n        }\\n\\n        if (fields && !fields.startsWith(\'{\')) {\\n          fields = \'{\' + fields + \'\\\\n}\';\\n        }\\n\\n        // Log fields\\n        if (config.log) {\\n          console.log({ fields });\\n        }\\n\\n        // Get allowed args\\n        const allowedArgs = meta.getArgs(graphql, { type: config.type });\\n\\n        // Log allowed args\\n        if (config.log) {\\n          console.log({ allowedArgs });\\n        }\\n\\n        const argsData = this.prepareArguments(config.arguments, {\\n          allowed: allowedArgs,\\n        });\\n\\n        // Log args data\\n        if (config.log) {\\n          argsData.usedArgs.sort();\\n          argsData.schemaArgs.sort();\\n          const filtered = argsData.schemaArgs.filter((field) => !argsData.usedArgs.includes(field));\\n          const unused = this.graphQLTypeCollectionToStringArray(allowedArgs)\\n            .sort()\\n            .filter((field) => !argsData.usedArgs.includes(field));\\n          console.log({ argsData, filtered, unused });\\n        }\\n\\n        const args = argsData?.argsString || \'\';\\n\\n        // Log\\n        if (config.log) {\\n          console.log({ graphQL: graphql, args, fields, type: config.type });\\n        }\\n\\n        // Prepare request\\n        const documentNode = fields\\n          ? gql(config.type + \'{\\\\n\' + graphql + args + fields + \'\\\\n}\')\\n          : gql(config.type + \'{\\\\n\' + graphql + args + \'\\\\n}\');\\n\\n        // Log\\n        if (config.log) {\\n          console.log({ documentNode });\\n        }\\n\\n        const request: any = {};\\n        request[config.type] = documentNode;\\n\\n        // Log\\n        if (config.log) {\\n          console.log({ request });\\n        }\\n\\n        let func;\\n        if (config.type === GraphQLRequestType.MUTATION) {\\n          func = \'mutate\';\\n          request[config.type] = documentNode;\\n        } else if (config.type === GraphQLRequestType.SUBSCRIPTION) {\\n          func = \'subscribe\';\\n          request.query = documentNode;\\n        } else {\\n          func = config.type;\\n          request[config.type] = documentNode;\\n        }\\n\\n        (this.apollo as any)[func](request).subscribe(\\n          (result: any) => {\\n            const data = result?.data?.[graphql] !== undefined ? result.data[graphql] : result;\\n\\n            // Direct data\\n            if (!config.model) {\\n              subscriber.next(data);\\n            }\\n\\n            // Map data as array\\n            else if (Array.isArray(data)) {\\n              subscriber.next(\\n                data.map((item) => {\\n                  return config.model.map(item);\\n                })\\n              );\\n            }\\n\\n            // Map data\\n            else {\\n              subscriber.next(config.model.map(data));\\n            }\\n\\n            if (config.type !== GraphQLRequestType.SUBSCRIPTION) {\\n              // Done\\n              subscriber.complete();\\n            }\\n          },\\n          (error: any) => {\\n            subscriber.error(error);\\n            subscriber.complete();\\n          }\\n        );\\n      });\\n    });\\n  }\\n\\n  /**\\n   * Get fields / args from IGraphQLTypeCollection\\n   */\\n  protected graphQLTypeCollectionToStringArray(\\n    collection: IGraphQLTypeCollection,\\n    current = \'\',\\n    result = [],\\n    cacheNode = []\\n  ) {\\n    if (collection) {\\n      if (collection instanceof GraphQLType) {\\n        result.push(current);\\n      } else {\\n        if (current?.includes(\'.\')) {\\n          cacheNode.push(current.split(\'.\')[1]);\\n        } else if (current) {\\n          cacheNode.push(current);\\n        }\\n        for (const key of Object.keys(collection)) {\\n          if (current === key || cacheNode.includes(key)) {\\n            continue;\\n          }\\n          this.graphQLTypeCollectionToStringArray(\\n            collection[key] as IGraphQLTypeCollection,\\n            current ? current + \'.\' + key : key,\\n            result,\\n            cacheNode\\n          );\\n        }\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Prepare arguments for GraphQL request\\n   */\\n  protected prepareArguments(\\n    args: any,\\n    options: {\\n      allowed?: any;\\n      level?: number;\\n      parent?: string;\\n      schemaArgs?: string[];\\n      usedArgs?: string[];\\n    } = {}\\n  ): { argsString: string; schemaArgs: string[]; usedArgs: string[] } {\\n    // Init config variables\\n    const { allowed, level, parent, schemaArgs, usedArgs } = {\\n      allowed: null,\\n      level: 1,\\n      parent: \'\',\\n      schemaArgs: [],\\n      usedArgs: [],\\n      ...options,\\n    };\\n\\n    // Check args\\n    if (args === undefined || args === null) {\\n      return { argsString: \'\', schemaArgs, usedArgs };\\n    }\\n\\n    // Init args\\n    const result = [];\\n\\n    // Process array\\n    if (Array.isArray(args)) {\\n      const allowedKeys = allowed ? Object.keys(allowed) : null;\\n      for (const item of args) {\\n        let key = null;\\n        if (allowed) {\\n          if (allowed.length < 1) {\\n            break;\\n          }\\n          key = allowedKeys?.shift();\\n        }\\n\\n        // Process value\\n        result.push(\\n          this.prepareArguments(item, {\\n            allowed: key ? allowed[key] : null,\\n            level: level + 1,\\n            parent: parent + key + \'.\',\\n            schemaArgs,\\n            usedArgs,\\n          }).argsString\\n        );\\n      }\\n\\n      // Encapsulation of the array result\\n      if (result.length) {\\n        // Complete result, encapsulated via round brackets\\n        if (level === 1) {\\n          return { argsString: \'(\' + result.join(\', \') + \')\', schemaArgs, usedArgs };\\n        }\\n\\n        // Deeper result part, encapsulated via square brackets\\n        else {\\n          return { argsString: \'[\' + result.join(\', \') + \']\', schemaArgs, usedArgs };\\n        }\\n      }\\n    }\\n\\n    // Process object\\n    else if (typeof args === \'object\') {\\n      // Check object is empty\\n      if (args && Object.keys(args).length === 0 && Object.getPrototypeOf(args) === Object.prototype) {\\n        return { argsString: \'{}\', schemaArgs, usedArgs };\\n      }\\n      // Process all object entries\\n      for (const [key, value] of Object.entries(args)) {\\n        // Init data for current entry\\n        const currentKey = parent + key;\\n        schemaArgs.push(currentKey);\\n\\n        // If the allowed key handling is enabled and the current key is not included in the list of allowed keys,\\n        // the current key will be skipped\\n        if (allowed && !allowed[key]) {\\n          continue;\\n        }\\n\\n        // Skip value if not exists\\n        if (value === undefined || value === null) {\\n          continue;\\n        }\\n\\n        // Add current key to metadata\\n        usedArgs.push(currentKey);\\n\\n        // Process GraphQLEnum\\n        if (value instanceof GraphQLEnum) {\\n          result.push(key + \':\' + value.value);\\n          continue;\\n        }\\n\\n        if (key === \'password\') {\\n          result.push(key + \':\' + `\\"${sha256(value as string)}\\"`);\\n          continue;\\n        }\\n\\n        // Process array\\n        else if (Array.isArray(value)) {\\n          result.push(\\n            key +\\n              \': [\' +\\n              value.map(\\n                (item) =>\\n                  this.prepareArguments(item, {\\n                    allowed: allowed[key],\\n                    level: level + 1,\\n                    parent: currentKey + \'.\',\\n                    schemaArgs,\\n                    usedArgs,\\n                  }).argsString\\n              ) +\\n              \']\'\\n          );\\n          continue;\\n        }\\n\\n        // Prepare additional result string\\n        let additionalResult = key + \': \';\\n\\n        // Value is a date object\\n        if (typeof value === \'object\' && Object.prototype.toString.call(value) === \'[object Date]\') {\\n          additionalResult += `\\"\\"\\"${(value as Date).toString()}\\"\\"\\"`;\\n        }\\n\\n        // Value is a string\\n        else if (typeof value === \'string\') {\\n          // Enum (doesn\'t need quotation marks)\\n          if (allowed[key].isEnum) {\\n            additionalResult += value;\\n          }\\n\\n          // String\\n          else {\\n            additionalResult += `\\"${value.replace(/\\"/g, \'\\\\\\\\\\"\').replace(/\\\\n/g, \'\\\\\\\\n\')}\\"`;\\n          }\\n        }\\n\\n        // Value is a simple boolean or a number\\n        else if (typeof value === \'boolean\' || typeof value === \'number\') {\\n          additionalResult += value;\\n        }\\n\\n        // Others\\n        else {\\n          additionalResult += this.prepareArguments(value, {\\n            allowed: allowed[key],\\n            level: level + 1,\\n            parent: currentKey + \'.\',\\n            schemaArgs,\\n            usedArgs,\\n          }).argsString;\\n        }\\n\\n        // Push deeper part into result array\\n        result.push(additionalResult);\\n      }\\n\\n      // Encapsulation of the object result\\n      if (result.length) {\\n        // Complete result, encapsulated via round brackets\\n        if (level === 1) {\\n          return { argsString: \'(\' + result.join(\', \') + \')\', schemaArgs, usedArgs };\\n        }\\n\\n        // Deeper result part, encapsulated via curly brackets\\n        else {\\n          return { argsString: \'{\' + result.join(\', \') + \'}\', schemaArgs, usedArgs };\\n        }\\n      }\\n    }\\n\\n    // Prepare and process other / unknown values as JSON\\n    else {\\n      return { argsString: JSON.stringify(args), schemaArgs, usedArgs };\\n    }\\n  }\\n\\n  /**\\n   * Prepare fields for GraphQL request\\n   */\\n  protected prepareFields(\\n    fields: any,\\n    options: {\\n      allowed?: any;\\n      schemaFields?: string[];\\n      usedFields?: string[];\\n      parent?: string;\\n      spaces?: number;\\n      tab?: number;\\n    } = {}\\n  ): { schemaFields: string[]; fieldsString: string; usedFields: string[] } {\\n    // Config\\n    const { allowed, parent, schemaFields, spaces, tab, usedFields } = {\\n      allowed: null,\\n      parent: \'\',\\n      schemaFields: [],\\n      spaces: 2,\\n      tab: 1,\\n      usedFields: [],\\n      ...options,\\n    };\\n\\n    // Init fields string\\n    let fieldsString = \'\';\\n\\n    // Check fields\\n    if (!fields) {\\n      return { fieldsString, schemaFields, usedFields };\\n    }\\n\\n    // Process string\\n    if (typeof fields === \'string\') {\\n      if (\\n        allowed &&\\n        ((typeof allowed === \'string\' && allowed !== fields) || (typeof allowed === \'object\' && !allowed[fields]))\\n      ) {\\n        return { fieldsString, schemaFields, usedFields };\\n      }\\n      return { fieldsString: \'\\\\n\' + \' \'.repeat(spaces).repeat(tab) + fields, schemaFields, usedFields };\\n    }\\n\\n    // Process array\\n    else if (Array.isArray(fields)) {\\n      for (const item of fields) {\\n        if (typeof item === \'object\') {\\n          fieldsString =\\n            fieldsString +\\n            this.prepareFields(item, {\\n              allowed,\\n              parent,\\n              spaces,\\n              schemaFields,\\n              tab: tab + 1,\\n              usedFields,\\n            }).fieldsString;\\n          continue;\\n        }\\n        const currentPath = parent + item;\\n        schemaFields.push(currentPath);\\n        if (allowed && !allowed?.[item]) {\\n          continue;\\n        }\\n        usedFields.push(currentPath);\\n        fieldsString =\\n          fieldsString +\\n          this.prepareFields(item, {\\n            allowed:\\n              typeof allowed?.[item] === \'object\' && !(allowed?.[item] instanceof GraphQLType) ? allowed?.[item] : item,\\n            parent: currentPath + \'.\',\\n            spaces,\\n            schemaFields,\\n            tab: tab + 1,\\n            usedFields,\\n          }).fieldsString;\\n      }\\n    }\\n\\n    // Process object\\n    else if (typeof fields === \'object\') {\\n      for (const [key, val] of Object.entries(fields)) {\\n        const currentPath = parent + key;\\n        schemaFields.push(currentPath);\\n        if (allowed && !allowed[key]) {\\n          continue;\\n        }\\n        usedFields.push(currentPath);\\n        if (typeof val !== \'object\' || !Object.keys(val).length) {\\n          fieldsString = fieldsString + \'\\\\n\' + \' \'.repeat(spaces).repeat(tab) + key;\\n        } else {\\n          fieldsString =\\n            fieldsString +\\n            \'\\\\n\' +\\n            \' \'.repeat(spaces).repeat(tab) +\\n            key +\\n            \' \' +\\n            \'{\' +\\n            this.prepareFields(val, {\\n              allowed:\\n                typeof allowed?.[key] === \'object\' && !(allowed?.[key] instanceof GraphQLType) ? allowed?.[key] : key,\\n              parent: currentPath + \'.\',\\n              spaces,\\n              schemaFields,\\n              tab: tab + 1,\\n              usedFields,\\n            }).fieldsString +\\n            \'\\\\n\' +\\n            \' \'.repeat(spaces).repeat(tab) +\\n            \'}\';\\n        }\\n      }\\n    }\\n\\n    // Return result\\n    return { fieldsString, schemaFields, usedFields };\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Include services</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":""},{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""}],"line":18,"rawdescription":"\\n\\nInclude services\\n","jsdoctags":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"ImageService","id":"injectable-ImageService-db4dbfbf373fe08310eebfa777b1a9b51288f238e2294b6dc984a81a85e3b87d810139dadf5ba64fedcaa0cbdba0d0db753a394c48e1f822fce0653db97f358c","file":"projects/ng-base/shared/services/image.service.ts","properties":[],"methods":[{"name":"loadImage","args":[{"name":"imageElement","type":"HTMLImageElement","deprecated":false,"deprecationMessage":""},{"name":"src","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"unknown","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoad image for image element\\n\\n","description":"<p>Load image for image element</p>\\n","modifierKind":[123,131],"jsdoctags":[{"name":{"pos":2829,"end":2841,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"imageElement"},"type":"HTMLImageElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":2823,"end":2828,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":2854,"end":2857,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"src"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2848,"end":2853,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"preLoadImages","args":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPreaload images (for lazy handling)\\n\\n","description":"<p>Preaload images (for lazy handling)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":251,"end":258,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":245,"end":250,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Image service</p>\\n","rawdescription":"\\n\\nImage service\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Helper } from \'../classes/helper.class\';\\n\\n/**\\n * Image service\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ImageService {\\n  /**\\n   * Preaload images (for lazy handling)\\n   *\\n   * @param options\\n   * @protected\\n   */\\n  public preLoadImages(options?: {\\n    doneFunction?: () => Promise<any> | any | void;\\n    elements?:\\n      | Element\\n      | Element[]\\n      | HTMLCollectionOf<Element>\\n      | Node\\n      | NodeList\\n      | Document\\n      | HTMLElement\\n      | HTMLElement[];\\n    regExp?: RegExp;\\n  }): Promise<any> {\\n    // Init configuration\\n    const config = {\\n      doneFunnction: undefined,\\n      elements: document,\\n      regExp: undefined,\\n      ...options,\\n    };\\n\\n    return new Promise((resolve) => {\\n      // Convert element(s) into array\\n      if (!Array.isArray(config.elements)) {\\n        // NodeList or HTMLCollection\\n        if (Helper.isNodeList(config.elements)) {\\n          config.elements = Array.from(config.elements as HTMLCollection | NodeList) as Element[];\\n        }\\n\\n        // Single element\\n        else {\\n          config.elements = [config.elements] as Element[];\\n        }\\n      }\\n\\n      // Init loading\\n      const promises = [];\\n\\n      // Get all images\\n      let images: HTMLImageElement[] = [];\\n      config.elements.forEach((element) => {\\n        images = images.concat(Array.from(element.getElementsByTagName(\'img\')));\\n      });\\n\\n      // Prepare images\\n      for (let image of images) {\\n        const src = image.getAttribute(\'src\');\\n\\n        // Check if changes are necessary and possible\\n        if (\\n          (image.complete && image.naturalHeight !== 0) || // already laoded\\n          !src || // Image has no src\\n          config.regExp?.test(src) // Test if src matches regular expression\\n        ) {\\n          continue;\\n        }\\n\\n        // Replace lazy loading image with immediately loading image\\n        if (image.getAttribute(\'loading\') === \'lazy\') {\\n          const newImage = document.createElement(\'img\');\\n          Array.from(image.attributes).forEach((attr) => {\\n            if (attr.name !== \'loading\' && attr.name !== \'src\') {\\n              newImage.setAttribute(attr.name, attr.value);\\n            }\\n          });\\n          image.replaceWith(newImage);\\n          image = newImage;\\n        }\\n\\n        // Wait for laoding\\n        promises.push(this.loadImage(image, src));\\n      }\\n\\n      // Wait until all images loaded\\n      Promise.all(promises)\\n        .catch((e) => console.error(\'Error during image loading\', e))\\n        .finally(async () => {\\n          // Return result\\n          let result;\\n          if (config.doneFunnction) {\\n            result = await config.doneFunction();\\n          }\\n          resolve(result);\\n        });\\n    });\\n  }\\n\\n  /**\\n   * Load image for image element\\n   *\\n   * @param imageElement\\n   * @param src\\n   * @protected\\n   */\\n  public async loadImage(imageElement: HTMLImageElement, src?: string) {\\n    src = src || imageElement.src;\\n    return new Promise((resolve, reject) => {\\n      imageElement.onload = () => resolve(imageElement);\\n      imageElement.onerror = reject;\\n      imageElement.src = src;\\n    });\\n  }\\n}\\n","type":"injectable"},{"name":"LoaderService","id":"injectable-LoaderService-8394fbd727cdb656c7c0b5936070b731e5952ccd0a0d3cef7db4e390973370a7182b4c73617fddd870d839e8c65e2d8d40cd0cd61691da15be5ee35d60e7c1fb","file":"projects/ng-base/shared/services/loader.service.ts","properties":[{"name":"isLoading","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11,"modifierKind":[123]}],"methods":[{"name":"getAsObservable","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"start","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"stop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"<p>Loader service for loading indication</p>\\n","rawdescription":"\\n\\nLoader service for loading indication\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\n\\n/**\\n * Loader service for loading indication\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class LoaderService {\\n  public isLoading = new BehaviorSubject(false);\\n\\n  public start(): void {\\n    this.isLoading.next(true);\\n  }\\n\\n  public stop(): void {\\n    this.isLoading.next(false);\\n  }\\n\\n  public getAsObservable(): Observable<boolean> {\\n    return this.isLoading.asObservable();\\n  }\\n}\\n","type":"injectable"},{"name":"ScrollService","id":"injectable-ScrollService-c2250558676b67a0760f2b871fe99742397ab25988d50b2c2ec913912c19661442972efec5fc77b0c892e39e50ebf91fc57e2d4eddd63ffb2b638923009d7aec","file":"projects/ng-base/shared/services/scroll.service.ts","properties":[{"name":"detectionOffset","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Detection offset\\nShould be &gt;= scrollOffset</p>\\n","line":50,"rawdescription":"\\n\\nDetection offset\\nShould be >= scrollOffset\\n","modifierKind":[122,144]},{"name":"scrollListener","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Is a scroll listener set</p>\\n","line":32,"rawdescription":"\\n\\nIs a scroll listener set\\n\\n","modifierKind":[122],"jsdoctags":[{"pos":682,"end":696,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":683,"end":692,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]},{"name":"scrollOffset","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Scroll offset</p>\\n","line":44,"rawdescription":"\\n\\nScroll offset\\n","modifierKind":[122,144]},{"name":"scrollPromise","deprecated":false,"deprecationMessage":"","type":"Promise<void>","optional":false,"description":"<p>Current scroll promise</p>\\n","line":18,"rawdescription":"\\n\\nCurrent scroll promise\\n\\n","modifierKind":[122],"jsdoctags":[{"pos":417,"end":431,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":418,"end":427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]},{"name":"scrollPromiseResolve","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"<p>Resolve function of current scroll promise</p>\\n","line":25,"rawdescription":"\\n\\nResolve function of current scroll promise\\n\\n","modifierKind":[122],"jsdoctags":[{"pos":541,"end":555,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":542,"end":551,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]},{"name":"scrollSamplingRate","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Sampling rate for scroll done detection</p>\\n","line":55,"rawdescription":"\\n\\nSampling rate for scroll done detection\\n","modifierKind":[122,144]},{"name":"scrollTimer","defaultValue":"-1","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Current scroll timer;</p>\\n","line":39,"rawdescription":"\\n\\nCurrent scroll timer;\\n\\n","modifierKind":[122],"jsdoctags":[{"pos":779,"end":793,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":780,"end":789,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]}],"methods":[{"name":"getLastActiveElement","args":[{"name":"list","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet last active structureElement\\n","description":"<p>Get last active structureElement</p>\\n","jsdoctags":[{"name":"list","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"isActive","args":[{"name":"id","type":"","deprecated":false,"deprecationMessage":""},{"name":"list","type":"","deprecated":false,"deprecationMessage":"","optional":true},{"name":"isFirst","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":177,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if ID is active\\n","description":"<p>Check if ID is active</p>\\n","jsdoctags":[{"name":"id","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"list","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"isFirst","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"scrollDone","args":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":185,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nScroll done promise\\n","description":"<p>Scroll done promise</p>\\n","modifierKind":[123,131],"jsdoctags":[{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"scrollDoneDetection","args":[],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nScroll done detecton\\n\\n","description":"<p>Scroll done detecton</p>\\n","modifierKind":[122],"jsdoctags":[]},{"name":"scrollTo","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"unknown","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nScroll to structureElement with specific ID\\n","description":"<p>Scroll to structureElement with specific ID</p>\\n","modifierKind":[131],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Scroll service for autoscroll to specific fragments</p>\\n","rawdescription":"\\n\\nScroll service for autoscroll to specific fragments\\n","sourceCode":"import { Inject, Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { BASE_MODULE_CONFIG, BaseModuleConfig } from \'../interfaces/base-module-config.interface\';\\nimport { ImageService } from \'./image.service\';\\n\\n/**\\n * Scroll service for autoscroll to specific fragments\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ScrollService {\\n  /**\\n   * Current scroll promise\\n   *\\n   * @protected\\n   */\\n  protected scrollPromise: Promise<void>;\\n\\n  /**\\n   * Resolve function of current scroll promise\\n   *\\n   * @protected\\n   */\\n  protected scrollPromiseResolve: (value: void | PromiseLike<void>) => void;\\n\\n  /**\\n   * Is a scroll listener set\\n   *\\n   * @protected\\n   */\\n  protected scrollListener = false;\\n\\n  /**\\n   * Current scroll timer;\\n   *\\n   * @protected\\n   */\\n  protected scrollTimer = -1;\\n\\n  /**\\n   * Scroll offset\\n   */\\n  protected readonly scrollOffset: number;\\n\\n  /**\\n   * Detection offset\\n   * Should be >= scrollOffset\\n   */\\n  protected readonly detectionOffset: number;\\n\\n  /**\\n   * Sampling rate for scroll done detection\\n   */\\n  protected readonly scrollSamplingRate: number;\\n\\n  /**\\n   * Initializer\\n   */\\n  constructor(\\n    protected router: Router,\\n    @Inject(BASE_MODULE_CONFIG) protected moduleConfig: BaseModuleConfig,\\n    protected imageService: ImageService\\n  ) {\\n    const config = {\\n      scrollDetectionOffset: 200,\\n      scrollOffset: 100,\\n      scrollSamplingRate: 100,\\n      ...moduleConfig,\\n    };\\n\\n    this.detectionOffset = config.scrollDetectionOffset;\\n    this.scrollOffset = config.scrollOffset;\\n    this.scrollSamplingRate = config.scrollSamplingRate;\\n  }\\n\\n  /**\\n   * Scroll to structureElement with specific ID\\n   */\\n  async scrollTo(\\n    id: string,\\n    options: {\\n      checkUrl?: boolean;\\n      loadImagesBefore?: boolean;\\n      resetStyles?: boolean;\\n      setOverflow?: boolean;\\n      stopPropagation?: boolean;\\n    } = {}\\n  ) {\\n    // Prepare config\\n    const config = {\\n      checkUrl: false,\\n      loadImagesBefore: true,\\n      resetStyles: false,\\n      setOverflow: true,\\n      stopPropagation: true,\\n      ...options,\\n    };\\n\\n    // Check current URL\\n    if (config.checkUrl && this.router.url !== \'/\' && !this.router.url.startsWith(\'/#\')) {\\n      await this.router.navigate([\'/\'], { fragment: id });\\n      return !config.stopPropagation;\\n    }\\n\\n    // Check if target element exits\\n    const el = document.getElementById(id);\\n    if (!el) {\\n      console.error(\'Missing scroll element with ID:\', id);\\n      return !config.stopPropagation;\\n    }\\n\\n    // Check if body overflow is visible\\n    // This is necessary for scroll handling\\n    const body = document.querySelector(\'body\');\\n    let undoOverflowChanges = false;\\n    const scrollBodyStyles = JSON.parse(JSON.stringify(window.getComputedStyle(body)));\\n    if (config.setOverflow && (scrollBodyStyles.overflowX !== \'visible\' || scrollBodyStyles.overflowY !== \'visible\')) {\\n      // Set body overflow to visible\\n      console.warn(\'Style of body element for overflowX and overflowY will be set to \\"visible\\" for scrolling!\');\\n      body.style.overflowX = \'visible\';\\n      body.style.overflowY = \'visible\';\\n      undoOverflowChanges = true;\\n    }\\n\\n    // Load images before scrolling (once)\\n    if (config.loadImagesBefore) {\\n      await this.imageService.preLoadImages();\\n    }\\n\\n    // Get get bounding rect of target element\\n    const cords = el.getBoundingClientRect();\\n\\n    // Scroll to element\\n    window.scrollBy({ top: cords.top - this.scrollOffset, behavior: \'smooth\' });\\n    await this.scrollDone({\\n      doneFunction: () => {\\n        // Undo changes\\n        if (undoOverflowChanges && config.resetStyles) {\\n          body.style.overflowX = scrollBodyStyles.overflowX;\\n          body.style.overflowY = scrollBodyStyles.overflowY;\\n          console.warn(\'Original style of body element for overflowX and overflowY is set.\');\\n        }\\n      },\\n    });\\n\\n    // Return stop propagation configuration\\n    return !config.stopPropagation;\\n  }\\n\\n  /**\\n   * Get last active structureElement\\n   */\\n  getLastActiveElement(list?): string {\\n    const currentScrollPosition = window.scrollY;\\n    const elementsWithId = document.querySelectorAll(\'[id]\');\\n    let lastId = null;\\n    let lastPosition = 0 - this.detectionOffset - 1;\\n    elementsWithId.forEach((element) => {\\n      const cords = element.getBoundingClientRect();\\n      const top = cords.top + window.pageYOffset - this.detectionOffset;\\n      if (\\n        (!list || !list.length || list.includes(element.id)) && // In list\\n        top < currentScrollPosition && // In active area\\n        lastPosition < top // Higher than the last one\\n      ) {\\n        lastId = element.id;\\n        lastPosition = top;\\n      }\\n    });\\n    return lastId;\\n  }\\n\\n  /**\\n   * Check if ID is active\\n   */\\n  isActive(id, list?, isFirst?) {\\n    const lastActiveElement = this.getLastActiveElement(list);\\n    return id === lastActiveElement || (lastActiveElement === null && isFirst);\\n  }\\n\\n  /**\\n   * Scroll done promise\\n   */\\n  public async scrollDone(options: { doneFunction?: () => any | void } = {}): Promise<any> {\\n    // Init configuration\\n    const config = {\\n      doneFunction: undefined,\\n      ...options,\\n    };\\n\\n    // Wait for scroll done\\n    await this.scrollDoneDetection();\\n\\n    // Get result\\n    if (config.doneFunction) {\\n      return config.doneFunction();\\n    }\\n  }\\n\\n  /**\\n   * Scroll done detecton\\n   *\\n   * @protected\\n   */\\n  protected scrollDoneDetection(): Promise<void> {\\n    // Return current scroll promise (Singelton)\\n    if (this.scrollPromise) {\\n      return this.scrollPromise;\\n    }\\n\\n    // Create current scroll promise\\n    this.scrollPromise = new Promise((resolve) => {\\n      this.scrollPromiseResolve = resolve;\\n      if (this.scrollTimer !== -1) {\\n        window.clearTimeout(this.scrollTimer);\\n      }\\n      this.scrollTimer = window.setTimeout(() => {\\n        window.removeEventListener(\'scroll\', this.scrollDoneDetection.bind(this));\\n        this.scrollPromise = undefined;\\n        resolve();\\n      }, this.scrollSamplingRate);\\n    });\\n\\n    // Lisitening to scroll event;\\n    window.addEventListener(\'scroll\', this.scrollDoneDetection.bind(this));\\n\\n    // Return promise\\n    return this.scrollPromise;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Initializer</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""},{"name":"imageService","type":"ImageService","deprecated":false,"deprecationMessage":""}],"line":55,"rawdescription":"\\n\\nInitializer\\n","jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"imageService","type":"ImageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"SEOService","id":"injectable-SEOService-ce6a5e912669fe655ffe2e0ba4e50309c8683f65ac585106af0ed74e254793d03e8c715979542d5866af24c035feb8ba3cc1e80facc86a9181fea0c7f47c5842","file":"projects/ng-base/src/services/seo.service.ts","properties":[],"methods":[{"name":"initPageForSEO","args":[{"name":"input","type":"SEOData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"input","type":"SEOData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setFacebookData","args":[{"name":"data","type":"SEOData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet metadata for facebook\\n\\n","description":"<p>Set metadata for facebook</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":1672,"end":1676,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"SEOData","deprecated":false,"deprecationMessage":"","tagName":{"pos":1666,"end":1671,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1683,"end":1690,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"setGeneralData","args":[{"name":"data","type":"SEOData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet general metadata\\n\\n","description":"<p>Set general metadata</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":714,"end":718,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"SEOData","deprecated":false,"deprecationMessage":"","tagName":{"pos":708,"end":713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":725,"end":732,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"setPageKeywords","args":[{"name":"keywords","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet page keywords\\n\\n","description":"<p>Set page keywords</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":2329,"end":2337,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"keywords"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2323,"end":2328,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":2344,"end":2351,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"setTwitterData","args":[{"name":"data","type":"SEOData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet metadata for twitter\\n\\n","description":"<p>Set metadata for twitter</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":970,"end":974,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"SEOData","deprecated":false,"deprecationMessage":"","tagName":{"pos":964,"end":969,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":981,"end":988,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"<p>SEO service for setting HTML meta data</p>\\n","rawdescription":"\\n\\nSEO service for setting HTML meta data\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Meta, Title } from \'@angular/platform-browser\';\\n\\ninterface SEOData {\\n  title: string;\\n  description: string;\\n  image?: string;\\n  url?: string;\\n  keywords?: string;\\n}\\n\\n/**\\n * SEO service for setting HTML meta data\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class SEOService {\\n  constructor(private titleService: Title, private metaTagService: Meta) {}\\n\\n  public initPageForSEO(input: SEOData) {\\n    this.setGeneralData(input);\\n    this.setTwitterData(input);\\n    this.setTwitterData(input);\\n    this.setFacebookData(input);\\n\\n    if (input.keywords) {\\n      this.setPageKeywords(input.keywords);\\n    }\\n  }\\n\\n  /**\\n   * Set general metadata\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setGeneralData(data: SEOData) {\\n    this.titleService.setTitle(data.title);\\n    this.metaTagService.updateTag({ name: \'description\', content: data.description });\\n  }\\n\\n  /**\\n   * Set metadata for twitter\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setTwitterData(data: SEOData) {\\n    this.metaTagService.updateTag({ name: \'twitter:title\', content: data.title });\\n    this.metaTagService.updateTag({ name: \'twitter:description\', content: data.description });\\n    this.metaTagService.updateTag({\\n      property: \'twitter:url\',\\n      content: data.url ? data.url : window.location.href,\\n    });\\n\\n    if (data.image) {\\n      this.metaTagService.updateTag({\\n        property: \'twitter:image\',\\n        content: data.image,\\n      });\\n\\n      this.metaTagService.updateTag({\\n        property: \'twitter:card\',\\n        content: \'summary_large_image\',\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Set metadata for facebook\\n   *\\n   * @param data\\n   * @private\\n   */\\n  private setFacebookData(data: SEOData) {\\n    this.metaTagService.updateTag({ property: \'og:title\', content: data.title });\\n    this.metaTagService.updateTag({ property: \'og:description\', content: data.description });\\n    this.metaTagService.updateTag({\\n      property: \'og:type\',\\n      content: \'website\',\\n    });\\n    this.metaTagService.updateTag({\\n      property: \'og:url\',\\n      content: data.url ? data.url : window.location.href,\\n    });\\n\\n    if (data.image) {\\n      this.metaTagService.updateTag({\\n        property: \'og:image\',\\n        content: data.image,\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Set page keywords\\n   *\\n   * @param keywords\\n   * @private\\n   */\\n  private setPageKeywords(keywords: string) {\\n    this.metaTagService.updateTag({ name: \'keywords\', content: keywords });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"titleService","type":"Title","deprecated":false,"deprecationMessage":""},{"name":"metaTagService","type":"Meta","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"titleService","type":"Title","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"metaTagService","type":"Meta","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"StorageService","id":"injectable-StorageService-ec70f625a713567959836b9713738c7ada68659bc242f17ab45be81a7eee8af267c252e82566453a7154e4254a0efe930bc2b95ae494cefade62b6e6ce8376bf","file":"projects/ng-base/shared/services/storage.service.ts","properties":[{"name":"prefix","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Prefix for storage keys</p>\\n","line":19,"rawdescription":"\\n\\nPrefix for storage keys\\n","modifierKind":[122]},{"name":"storage","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>Storage</p>\\n","line":14,"rawdescription":"\\n\\nStorage\\n","modifierKind":[122]}],"methods":[{"name":"load","args":[{"name":"itemKeys","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoad items via key(s)\\n","description":"<p>Load items via key(s)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"itemKeys","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"remove","args":[{"name":"itemKeys","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemove item from storage\\n\\n","description":"<p>Remove item from storage</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2760,"end":2768,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"itemKeys"},"type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2754,"end":2759,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>keys or key to remove</p>\\n"}]},{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClear local storage\\n","description":"<p>Clear local storage</p>\\n","modifierKind":[123]},{"name":"save","args":[{"name":"itemKeys","type":"string | literal type","deprecated":false,"deprecationMessage":""},{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSave itemKeys\\n\\nIf you want to save one item, use itemKeys and value parameters like these:\\nsave(\'KEY_OF_THE_ITEM\', ITEM)\\n\\nIf you want to save multiple items, use itemKeys only (value parameter will be ignored):\\nsave({\'KEY_OF_ITEM_1\': ITEM_1, \'KEY_OF_ITEM_2\': ITEM_2, ...})\\n","description":"<p>Save itemKeys</p>\\n<p>If you want to save one item, use itemKeys and value parameters like these:\\nsave(&#39;KEY_OF_THE_ITEM&#39;, ITEM)</p>\\n<p>If you want to save multiple items, use itemKeys only (value parameter will be ignored):\\nsave({&#39;KEY_OF_ITEM_1&#39;: ITEM_1, &#39;KEY_OF_ITEM_2&#39;: ITEM_2, ...})</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"itemKeys","type":"string | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Storage service for local data storage</p>\\n","rawdescription":"\\n\\nStorage service for local data storage\\n","sourceCode":"import { Inject, Injectable } from \'@angular/core\';\\nimport { BASE_MODULE_CONFIG, BaseModuleConfig } from \'../interfaces/base-module-config.interface\';\\n\\n/**\\n * Storage service for local data storage\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class StorageService {\\n  /**\\n   * Storage\\n   */\\n  protected storage: any = null;\\n\\n  /**\\n   * Prefix for storage keys\\n   */\\n  protected prefix = \'\';\\n\\n  /**\\n   * Initializations\\n   */\\n  constructor(@Inject(BASE_MODULE_CONFIG) private moduleConfig: BaseModuleConfig) {\\n    // Set storage\\n    const type = moduleConfig.storageType ? moduleConfig.storageType : \'local\';\\n    if (window[type + \'Storage\']) {\\n      this.storage = window[type + \'Storage\'];\\n    }\\n\\n    // Set prefix\\n    this.prefix = \'\';\\n    if (moduleConfig.prefix) {\\n      this.prefix += moduleConfig.prefix + \'_\';\\n    }\\n    if (moduleConfig.version) {\\n      this.prefix += moduleConfig.version + \'_\';\\n    }\\n  }\\n\\n  /**\\n   * Save itemKeys\\n   *\\n   * If you want to save one item, use itemKeys and value parameters like these:\\n   * save(\'KEY_OF_THE_ITEM\', ITEM)\\n   *\\n   * If you want to save multiple items, use itemKeys only (value parameter will be ignored):\\n   * save({\'KEY_OF_ITEM_1\': ITEM_1, \'KEY_OF_ITEM_2\': ITEM_2, ...})\\n   */\\n  public save(itemKeys: string | { [key: string]: any }, value?: any): boolean {\\n    // Check local storage\\n    if (!this.storage) {\\n      return false;\\n    }\\n\\n    // Check item keys and value\\n    if (\\n      !itemKeys ||\\n      (typeof itemKeys === \'object\' && !Object.keys(itemKeys).length) ||\\n      (typeof itemKeys === \'string\' && value === undefined)\\n    ) {\\n      return false;\\n    }\\n\\n    if (typeof itemKeys === \'object\') {\\n      for (const [itemKey, itemValue] of Object.entries(itemKeys)) {\\n        this.storage.setItem(this.prefix + itemKey, JSON.stringify(itemValue));\\n      }\\n      return true;\\n    }\\n\\n    this.storage.setItem(this.prefix + itemKeys, JSON.stringify(value));\\n    return true;\\n  }\\n\\n  /**\\n   * Load items via key(s)\\n   */\\n  public load(itemKeys: string | string[]): any {\\n    // Check local storage\\n    if (!this.storage) {\\n      return;\\n    }\\n\\n    // Check item keys\\n    if (!itemKeys || (Array.isArray(itemKeys) && !itemKeys.length)) {\\n      return null;\\n    }\\n\\n    if (Array.isArray(itemKeys)) {\\n      const back = {};\\n      itemKeys.forEach((itemKey) => {\\n        const loadedItem = this.storage.getItem(this.prefix + itemKey);\\n        if (loadedItem) {\\n          back[itemKey] = JSON.parse(loadedItem);\\n        } else {\\n          back[itemKey] = null;\\n        }\\n      });\\n      return back;\\n    }\\n\\n    let value = this.storage.getItem(this.prefix + itemKeys);\\n    if (value) {\\n      value = JSON.parse(value);\\n    }\\n\\n    return value;\\n  }\\n\\n  /**\\n   * Remove item from storage\\n   *\\n   * @param itemKeys keys or key to remove\\n   */\\n  public remove(itemKeys: string | string[]): boolean {\\n    // Check local storage\\n    if (!this.storage) {\\n      return false;\\n    }\\n\\n    if (Array.isArray(itemKeys)) {\\n      itemKeys.forEach((key) => {\\n        this.storage.removeItem(this.prefix + key);\\n      });\\n      return true;\\n    }\\n\\n    this.storage.removeItem(this.prefix + itemKeys);\\n    return true;\\n  }\\n\\n  /**\\n   * Clear local storage\\n   */\\n  public reset(): void {\\n    this.storage.clear();\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Initializations</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""}],"line":19,"rawdescription":"\\n\\nInitializations\\n","jsdoctags":[{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"ThemeService","id":"injectable-ThemeService-0bf9f123b940b86226218bcfef69c0eb95a02c76d35a1aba0a13eb6d5c3c8fdc4a37931bc4160ad79adeff6cb70a479f97f7b4e6436cdce275a26a717aca136b","file":"projects/ng-base/src/services/theme.service.ts","properties":[{"name":"_theme","defaultValue":"new BehaviorSubject<string>(\'light\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9}],"methods":[{"name":"checkSystemTheme","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck theme from system\\n","description":"<p>Check theme from system</p>\\n"}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { StorageService } from \'@lenne.tech/ng-base/shared\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ThemeService {\\n  _theme = new BehaviorSubject<string>(\'light\');\\n\\n  get theme(): string {\\n    return this._theme.value;\\n  }\\n\\n  set theme(theme: string) {\\n    this._theme.next(theme);\\n    this.storageService.save(\'theme\', theme);\\n  }\\n\\n  get themeObservable(): Observable<string> {\\n    return this._theme.asObservable();\\n  }\\n\\n  constructor(private storageService: StorageService) {\\n    // Load from storage\\n    this.theme = this.storageService.load(\'theme\') as string;\\n\\n    // Use system theme if no theme is set\\n    if (!this.theme) {\\n      this.checkSystemTheme();\\n    }\\n  }\\n\\n  /**\\n   * Check theme from system\\n   */\\n  checkSystemTheme() {\\n    if (window.matchMedia) {\\n      this.theme = window.matchMedia(\'(prefers-color-scheme: dark)\').matches ? \'dark\' : \'light\';\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"theme":{"name":"theme","setSignature":{"name":"theme","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"theme","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":15,"jsdoctags":[{"name":"theme","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"theme","type":"string","returnType":"string","line":11}},"themeObservable":{"name":"themeObservable","getSignature":{"name":"themeObservable","type":"","returnType":"Observable<string>","line":20}}},"type":"injectable"},{"name":"ToastService","id":"injectable-ToastService-e64cf19f0b7c4f80dd77c86a1befe8758710edce11382338f52435769103fd1aa5d9794076d0180a7703a922bca7dc4a80ddbd5ccbe66ea005958b4874619fbe","file":"projects/ng-base/shared/services/toast.service.ts","properties":[{"name":"toastsObservables","defaultValue":"new BehaviorSubject<Toast[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[121]}],"methods":[{"name":"show","args":[{"name":"toast","type":"Toast","deprecated":false,"deprecationMessage":""},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow new toast\\n\\n","description":"<p>Show new toast</p>\\n","jsdoctags":[{"name":{"pos":399,"end":404,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"toast"},"type":"Toast","deprecated":false,"deprecationMessage":"","tagName":{"pos":393,"end":398,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":417,"end":425,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":411,"end":416,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { Toast } from \'../interfaces/toast.interface\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class ToastService {\\n  private toastsObservables = new BehaviorSubject<Toast[]>([]);\\n\\n  get toastsAsObservable() {\\n    return this.toastsObservables.asObservable();\\n  }\\n\\n  /**\\n   * Show new toast\\n   *\\n   * @param toast\\n   * @param duration\\n   */\\n  show(toast: Toast, duration?: number) {\\n    const value = this.toastsObservables.value;\\n    value.push(toast);\\n    this.toastsObservables.next(value);\\n\\n    if (duration) {\\n      setTimeout(() => {\\n        const currentToasts = this.toastsObservables.value;\\n        const foundIndex = currentToasts.findIndex((e) => e.id === toast.id);\\n\\n        if (foundIndex > -1) {\\n          currentToasts.splice(foundIndex, 1);\\n          this.toastsObservables.next(currentToasts);\\n        }\\n      }, duration);\\n    }\\n  }\\n}\\n","accessors":{"toastsAsObservable":{"name":"toastsAsObservable","getSignature":{"name":"toastsAsObservable","type":"","returnType":"","line":11}}},"type":"injectable"},{"name":"UserService","id":"injectable-UserService-8f517f60fe0453fd987604944968548a1fd4847d1656784abf0200b6b073ea401456154f851b1b44a06b5c7fe56de252f18557d26d24743356e7108101b0b9d3","file":"projects/ng-base/shared/services/user.service.ts","properties":[],"methods":[{"name":"login","args":[{"name":"input","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogin\\n\\n","description":"<p>Login</p>\\n","jsdoctags":[{"name":{"pos":882,"end":887,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"input"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":876,"end":881,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"register","args":[{"name":"input","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRegister\\n\\n","description":"<p>Register</p>\\n","jsdoctags":[{"name":{"pos":1496,"end":1501,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"input"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":1490,"end":1495,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"requestPasswordResetMail","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRequest password reset mail\\n\\n","description":"<p>Request password reset mail</p>\\n","jsdoctags":[{"name":{"pos":2172,"end":2177,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"email"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2166,"end":2171,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"displayError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLPlusService"}},{"name":"graphQl","args":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"graphql","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"handleError","args":[{"name":"error","type":"Error","deprecated":false,"deprecationMessage":""},{"name":"excludedErrors","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"Error","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"excludedErrors","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLPlusService"}},{"name":"handleLoader","args":[{"name":"state","type":"\\"start\\" | \\"stop\\"","deprecated":false,"deprecationMessage":""},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"\\"start\\" | \\"stop\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"IGraphQLPlusOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLPlusService"}},{"name":"graphQLTypeCollectionToStringArray","args":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":""},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"{}","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet fields / args from IGraphQLTypeCollection\\n","description":"<p>Get fields / args from IGraphQLTypeCollection</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"collection","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"current","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}},{"name":"result","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}},{"name":"cacheNode","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"prepareArguments","args":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare arguments for GraphQL request\\n","description":"<p>Prepare arguments for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"args","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}},{"name":"prepareFields","args":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":427,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPrepare fields for GraphQL request\\n","description":"<p>Prepare fields for GraphQL request</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"fields","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"GraphQLService"}}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Apollo } from \'apollo-angular\';\\nimport { map } from \'rxjs\';\\nimport { Auth } from \'../classes/auth.class\';\\nimport { BasicUser } from \'../classes/basic-user.class\';\\nimport { GraphQLRequestType } from \'../enums/graphql-request-type.enum\';\\nimport { AuthService } from \'./auth.service\';\\nimport { GraphQLMetaService } from \'./graphql-meta.service\';\\nimport { GraphQLPlusService } from \'./graphql-plus.service\';\\nimport { LoaderService } from \'./loader.service\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class UserService extends GraphQLPlusService {\\n  constructor(\\n    protected apollo: Apollo,\\n    protected graphqlMetaService: GraphQLMetaService,\\n    protected loaderService: LoaderService,\\n    protected authService: AuthService\\n  ) {\\n    super(apollo, graphqlMetaService, loaderService);\\n  }\\n\\n  /**\\n   * Login\\n   *\\n   * @param input\\n   */\\n  login(input: { email: string; password: string }) {\\n    return this.graphQl(\'signIn\', {\\n      arguments: { input },\\n      fields: [\'token\', { user: [\'id\', \'firstName\', \'lastName\', \'email\', \'roles\'] }],\\n      type: GraphQLRequestType.QUERY,\\n      loading: true,\\n    }).pipe(\\n      map((response: Auth) => {\\n        this.authService.token = response.token;\\n        this.authService.currentUser = BasicUser.map(response.user);\\n\\n        return Auth.map({\\n          token: response.token,\\n          user: BasicUser.map(response.user),\\n        });\\n      })\\n    );\\n  }\\n\\n  /**\\n   * Register\\n   *\\n   * @param input\\n   */\\n  register(input: { firstName: string; lastName: string; email: string; password: string }) {\\n    return this.graphQl(\'signUp\', {\\n      arguments: { input },\\n      fields: [\'token\', { user: [\'id\', \'firstName\', \'lastName\', \'email\', \'roles\'] }],\\n      type: GraphQLRequestType.MUTATION,\\n      loading: true,\\n    }).pipe(\\n      map((response: Auth) => {\\n        this.authService.token = response.token;\\n        this.authService.currentUser = BasicUser.map(response.user);\\n\\n        return Auth.map({\\n          token: response.token,\\n          user: BasicUser.map(response.user),\\n        });\\n      })\\n    );\\n  }\\n\\n  /**\\n   * Request password reset mail\\n   *\\n   * @param email\\n   */\\n  requestPasswordResetMail(email: string) {\\n    return this.graphQl(\'requestPasswordResetMail\', {\\n      arguments: { email },\\n      fields: [],\\n      type: GraphQLRequestType.QUERY,\\n      loading: true,\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":""},{"name":"graphqlMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""},{"name":"loaderService","type":"LoaderService","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apollo","type":"Apollo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphqlMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"loaderService","type":"LoaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"GraphQLPlusService","type":"injectable"},{"name":"WsService","id":"injectable-WsService-19d1cdeb5629ede3576031ca24666995e1ee040b3d8b64ef257962721b9205cc5d228a24d58a4d28d7ffe21a8e4b7500579855e455d360ed6e1ce342dded3fc5","file":"projects/ng-base/shared/services/ws.service.ts","properties":[{"name":"client","deprecated":false,"deprecationMessage":"","type":"RestartableClient","optional":false,"description":"","line":8}],"methods":[{"name":"reconnect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { RestartableClient } from \'../functions/ws-client.function\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class WsService {\\n  client: RestartableClient;\\n\\n  reconnect() {\\n    this.client?.restart();\\n  }\\n}\\n","type":"injectable"}],"guards":[{"name":"AuthGuard","id":"injectable-AuthGuard-6c21e83087a2cd15515557db0aab044ecb655fd03720ed346376fa337a2a30347aec1e3eb70cad7e840c5af79e47a3a1a48fc276a67a220ea893f70431c46296","file":"projects/ng-base/src/guards/auth.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCan activate main route\\n","description":"<p>Can activate main route</p>\\n","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"canActivateChild","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCan activate child route\\n","description":"<p>Can activate child route</p>\\n","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Authentication guard</p>\\n","rawdescription":"\\n\\nAuthentication guard\\n","sourceCode":"import { Inject, Injectable } from \'@angular/core\';\\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from \'@angular/router\';\\nimport { Observable } from \'rxjs\';\\nimport { AuthService, BaseModuleConfig, BASE_MODULE_CONFIG } from \'@lenne.tech/ng-base/shared\';\\n\\n/**\\n * Authentication guard\\n */\\n@Injectable()\\nexport class AuthGuard implements CanActivate, CanActivateChild {\\n  /**\\n   * Imports\\n   */\\n  constructor(\\n    private router: Router,\\n    private authService: AuthService,\\n    @Inject(BASE_MODULE_CONFIG) private moduleConfig: BaseModuleConfig\\n  ) {}\\n\\n  /**\\n   * Can activate main route\\n   */\\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\\n    return new Observable((subscriber) => {\\n      let allowed = false;\\n      const opposite = route?.data?.opposite ? route?.data?.opposite : false;\\n      const redirectUrl = route?.data?.redirectUrl ? route.data.redirectUrl : this.moduleConfig.authGuardRedirectUrl;\\n\\n      if (this.authService.token && !opposite) {\\n        if (route.data.allowedRole) {\\n          const user = this.authService.currentUser;\\n          allowed = user?.roles?.includes(route.data.allowedRole);\\n        } else {\\n          allowed = true;\\n        }\\n      } else if (!this.authService.token && opposite) {\\n        allowed = true;\\n      }\\n\\n      if (!allowed) {\\n        this.router.navigate([redirectUrl]);\\n      }\\n\\n      subscriber.next(allowed);\\n      subscriber.complete();\\n    });\\n  }\\n\\n  /**\\n   * Can activate child route\\n   */\\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\\n    return this.canActivate(route, state);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Imports</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""}],"line":10,"rawdescription":"\\n\\nImports\\n","jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"moduleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"},{"name":"CanDeactivateGuard","id":"injectable-CanDeactivateGuard-8e1f274383bc6012f24ff4de045dc4868d047c781cca4c4bbe8a7fe6ea93cda4b93c3597e1dd8c8ae4e515e2093b6a76cea9bf62481e11656f0be6a7c8b7157a","file":"projects/ng-base/src/guards/can-deactivate.guard.ts","properties":[],"methods":[{"name":"canDeactivate","args":[{"name":"component","type":"ICanComponentDeactivate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"component","type":"ICanComponentDeactivate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Guard to check if a component can be deactivated</p>\\n","rawdescription":"\\n\\nGuard to check if a component can be deactivated\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { CanDeactivate } from \'@angular/router\';\\nimport { ICanComponentDeactivate } from \'@lenne.tech/ng-base/shared\';\\n\\n/**\\n * Guard to check if a component can be deactivated\\n */\\n@Injectable()\\nexport class CanDeactivateGuard implements CanDeactivate<ICanComponentDeactivate> {\\n  canDeactivate(component: ICanComponentDeactivate) {\\n    return component.canDeactivate ? component.canDeactivate() : true;\\n  }\\n}\\n","type":"guard"},{"name":"LogoutGuard","id":"injectable-LogoutGuard-260355c3e1ee8962699bbb393aa925b8632126f74976c467692d064f1c2bb9f84adef11dc013e480d79e05efc154659b097762584f9c4e0c57bc623e6491b2f6","file":"projects/ng-base/src/guards/logout.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"canActivateChild","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Logout guard</p>\\n","rawdescription":"\\n\\nLogout guard\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from \'@angular/router\';\\nimport { Observable } from \'rxjs\';\\nimport { AuthService } from \'@lenne.tech/ng-base/shared\';\\n\\n/**\\n * Logout guard\\n */\\n@Injectable()\\nexport class LogoutGuard implements CanActivate, CanActivateChild {\\n  constructor(private router: Router, private authService: AuthService) {}\\n\\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\\n    return new Observable((subscriber) => {\\n      if (this.authService.token) {\\n        this.authService.logout();\\n      }\\n\\n      subscriber.next(true);\\n      subscriber.complete();\\n    });\\n  }\\n\\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\\n    return this.canActivate(route, state);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"}],"interceptors":[],"classes":[{"name":"Auth","id":"class-Auth-2729549a2e7f049234b95dcdcf0a856789ddb709b4579290d48ebf21af16a20ab606152d039398dc5f27da62e95b6f48c885d542fe7e6032549d0e6a6091b363","file":"projects/ng-base/shared/classes/auth.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { BasicUser } from \'./basic-user.class\';\\nimport { Helper } from \'./helper.class\';\\nimport { Standard } from \'./standard.class\';\\n\\nexport class Auth extends Standard {\\n  token: string = undefined;\\n  user: BasicUser = undefined;\\n\\n  public map(data: Partial<this> | { [key: string]: any }): this {\\n    Helper.map(data, this);\\n    this.user = data?.user ? BasicUser.map(data.user) : this.user;\\n    return this;\\n  }\\n}\\n","properties":[{"name":"token","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"user","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"BasicUser","optional":false,"description":"","line":7}],"methods":[{"name":"map","args":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}},{"name":"clone","args":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClone object (and map additional data)\\n","description":"<p>Clone object (and map additional data)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}},{"name":"getDiff","args":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"any","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n\\n","description":"<p>Compare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}},{"tagName":{"pos":1165,"end":1171,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>Record&lt;string, any&gt; with properties of this object which are different</p>\\n"}],"inheritance":{"file":"Standard"}}],"indexSignatures":[],"extends":"Standard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BasicUser","id":"class-BasicUser-e30ab7ee13a6e6d677fcc81b7ccfdc8b60097b52fecc5052cd755fa4294f105277213305ec7a5e5fe0f45b26ee5eb2d28b5080de0e6ec6edc0c3adedbdc1b8cd","file":"projects/ng-base/shared/classes/basic-user.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Standard } from \'./standard.class\';\\nimport { Helper } from \'./helper.class\';\\n\\n/**\\n * User class\\n */\\nexport class BasicUser extends Standard {\\n  id: string = undefined;\\n  email: string = undefined;\\n  firstName: string = undefined;\\n  lastName: string = undefined;\\n  roles: string[] = [];\\n  username: string = undefined;\\n\\n  // ===================================================================================================================\\n  // Methods\\n  // ===================================================================================================================\\n\\n  /**\\n   * Mapping\\n   */\\n  public map(data: Partial<this> | { [key: string]: any }): this {\\n    Helper.map(data, this);\\n    return this;\\n  }\\n\\n  /**\\n   * Checks whether the user has at least one of the required roles\\n   */\\n  public hasRole(roles: string | string[]) {\\n    if (typeof roles === \'string\') {\\n      roles = [roles];\\n    }\\n    if (!this.roles || this.roles.length < 1) {\\n      return false;\\n    }\\n    return !roles || roles.length < 1 ? true : this.roles.some((role) => roles.includes(role));\\n  }\\n\\n  /**\\n   * Checks whether the user has all required roles\\n   */\\n  public hasAllRoles(roles: string | string[]) {\\n    if (typeof roles === \'string\') {\\n      roles = [roles];\\n    }\\n    if (!this.roles || this.roles.length < 1) {\\n      return false;\\n    }\\n    return !roles ? true : roles.every((role) => this.roles.includes(role));\\n  }\\n}\\n","properties":[{"name":"email","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"firstName","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"id","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"lastName","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"roles","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":12},{"name":"username","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13}],"description":"<p>User class</p>\\n","rawdescription":"\\n\\nUser class\\n","methods":[{"name":"hasAllRoles","args":[{"name":"roles","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks whether the user has all required roles\\n","description":"<p>Checks whether the user has all required roles</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"roles","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hasRole","args":[{"name":"roles","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks whether the user has at least one of the required roles\\n","description":"<p>Checks whether the user has at least one of the required roles</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"roles","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"map","args":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMapping\\n","description":"<p>Mapping</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}},{"name":"clone","args":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClone object (and map additional data)\\n","description":"<p>Clone object (and map additional data)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}},{"name":"getDiff","args":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"any","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n\\n","description":"<p>Compare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}},{"tagName":{"pos":1165,"end":1171,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>Record&lt;string, any&gt; with properties of this object which are different</p>\\n"}],"inheritance":{"file":"Standard"}}],"indexSignatures":[],"extends":"Standard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"GraphQLEnum","id":"class-GraphQLEnum-186068464ff7681ca53112ef489cafab3f4b945189f7e271121ba11f11fcdaf74649151efa99374ba2a61fec3ac8c62597327cb534d7b228708747fb15d95e56","file":"projects/ng-base/shared/classes/graphql-enum.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class GraphQLEnum {\\n  value: string;\\n\\n  constructor(value) {\\n    this.value = value;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"line":5,"jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5}],"description":"<p>GraphQL enum</p>\\n","rawdescription":"\\n\\nGraphQL enum\\n","methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"GraphQLMeta","id":"class-GraphQLMeta-4bf4c295693d151e619eb97bc3368758961ffe8180477fc53f504aec518580ae69f6478fbdbc172f8ab17deec84bbb6921b3b925fcdfa084634000c20b11eba4","file":"projects/ng-base/shared/classes/graphql-meta.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { GraphQLInputObjectType, GraphQLList, GraphQLNamedType, GraphQLNonNull, GraphQLSchema } from \'graphql\';\\nimport { GraphQLRequestType } from \'../enums/graphql-request-type.enum\';\\nimport { Helper } from \'./helper.class\';\\nimport { GraphQLType } from \'./graphql-type.class\';\\nimport { IGraphQLTypeCollection } from \'../interfaces/graphql-type-collection.interface\';\\nimport { GraphqlCrudType } from \'../interfaces/graphql-crud-type.interface\';\\nimport { cloneDeep } from \'@apollo/client/utilities\';\\n\\n/**\\n * GraphQL meta\\n */\\nexport class GraphQLMeta {\\n  // Frozen caches\\n  protected args: Record<string, any> = {};\\n  protected fields: Record<string, any> = {};\\n\\n  /**\\n   * Integrate schema\\n   */\\n  constructor(protected schema: GraphQLSchema) {\\n    if (!schema) {\\n      throw Error(\'Missing schema\');\\n    }\\n  }\\n\\n  /**\\n   * We\'re going to get the query and mutation types from the schema, then we\'re going to loop through the fields of each\\n   * type and check if the field name starts with `find`, `create`, `update`, or `delete`. If it does, we\'re going to add\\n   * the model name to the `possibleTypes` array\\n   *\\n   * @returns An array of objects with the name of the model, and the CRUD operations that are available for that model.\\n   */\\n  getTypes(): GraphqlCrudType[] {\\n    const possibleTypes: GraphqlCrudType[] = [] as any;\\n    const mutationType = this.schema.getMutationType();\\n    const queryType = this.schema.getQueryType();\\n\\n    for (const [key, value] of Object.entries(queryType.getFields())) {\\n      if (key.startsWith(\'find\')) {\\n        possibleTypes.push({\\n          name: key.split(\'find\').pop().slice(0, -1),\\n          create: false,\\n          update: false,\\n          delete: false,\\n        });\\n      }\\n    }\\n\\n    for (const [key, value] of Object.entries(mutationType.getFields())) {\\n      if (key.startsWith(\'create\')) {\\n        const model = key.split(\'create\').pop();\\n        if (possibleTypes.find((e) => e.name === model)) {\\n          possibleTypes.find((item) => item.name === model).create = true;\\n        }\\n      }\\n\\n      if (key.startsWith(\'update\')) {\\n        const model = key.split(\'update\').pop();\\n        if (possibleTypes.find((e) => e.name === model)) {\\n          possibleTypes.find((item) => item.name === model).update = true;\\n        }\\n      }\\n\\n      if (key.startsWith(\'delete\')) {\\n        const model = key.split(\'delete\').pop();\\n        if (possibleTypes.find((e) => e.name === model)) {\\n          possibleTypes.find((item) => item.name === model).delete = true;\\n        }\\n      }\\n    }\\n\\n    return possibleTypes;\\n  }\\n\\n  /**\\n   * Get arguments of GraphQL function\\n   */\\n  getArgs(\\n    functionName: string,\\n    options: { cache?: boolean; freeze?: boolean; type?: GraphQLRequestType } = {}\\n  ): IGraphQLTypeCollection {\\n    const { cache, freeze, type } = {\\n      cache: true,\\n      freeze: true,\\n      type: undefined,\\n      ...options,\\n    };\\n\\n    // Get cache\\n    if (cache && freeze) {\\n      const args = this.args[functionName + type];\\n      if (args) {\\n        return args;\\n      }\\n    }\\n\\n    const func = this.getFunction(functionName, { type });\\n    const result = {};\\n    if (func?.args) {\\n      func.args.forEach((item) => {\\n        result[item.name] = this.getDeepType(item.type);\\n      });\\n    }\\n\\n    // Set cache\\n    if (freeze) {\\n      this.args[functionName + type] = Helper.deepFreeze(result);\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * Get fields of GraphQL function\\n   */\\n  getFields(\\n    functionName: string,\\n    options: { cache?: boolean; freeze?: boolean; type?: GraphQLRequestType } = {}\\n  ): IGraphQLTypeCollection {\\n    const { cache, freeze, type } = {\\n      cache: true,\\n      freeze: true,\\n      type: undefined,\\n      ...options,\\n    };\\n\\n    // Get cache\\n    if (cache && freeze) {\\n      const args = this.fields[functionName + type];\\n      if (args) {\\n        return args;\\n      }\\n    }\\n\\n    const func = this.getFunction(functionName, options);\\n    const result: IGraphQLTypeCollection = this.getDeepType(func.type) as IGraphQLTypeCollection;\\n\\n    // Set cache\\n    if (freeze) {\\n      this.fields[functionName + type] = Helper.deepFreeze(result);\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * Get GraphQL function\\n   */\\n  protected getFunction(name: string, options: { type?: GraphQLRequestType } = {}): Record<string, any> {\\n    // Set config\\n    const config = {\\n      ...options,\\n    };\\n\\n    // Init possible functions\\n    let functions = {};\\n\\n    // If function type is set\\n    if (config.type) {\\n      const graphQLType = config.type.charAt(0).toUpperCase() + config.type.slice(1);\\n      const type = this.schema.getType(graphQLType);\\n      if (type) {\\n        functions = (type as any).getFields();\\n      }\\n    }\\n\\n    // If function type is not set\\n    else {\\n      [\'Subscription\', \'Mutation\', \'Query\'].forEach((item) => {\\n        const type: any = this.schema.getType(item);\\n        if (type) {\\n          functions = {\\n            ...functions,\\n            ...(type.getFields() || {}),\\n          };\\n        }\\n      });\\n    }\\n\\n    // Get function via name\\n    return functions[name];\\n  }\\n\\n  /**\\n   * Get type\\n   */\\n  protected getType(name: string): GraphQLNamedType | null | undefined {\\n    return this.schema.getType(name);\\n  }\\n\\n  /**\\n   * Get deep type data\\n   */\\n  protected getDeepType(\\n    type: any,\\n    prepared: WeakMap<any, any> = new WeakMap(),\\n    setMetaData = false\\n  ): IGraphQLTypeCollection | GraphQLType {\\n    // Check type\\n    if (!type) {\\n      return type;\\n    }\\n\\n    // Infinite regress protection\\n    const preparedObject = {};\\n\\n    // Check prepared\\n    if (typeof type === \'object\') {\\n      const preparedType = prepared.get(type);\\n      if (preparedType) {\\n        const clone = cloneDeep(preparedType);\\n\\n        // Disable meta flags for sub objects\\n        if (\\n          type?.type instanceof GraphQLInputObjectType ||\\n          (type?.type instanceof GraphQLNonNull && type?.type?.ofType instanceof GraphQLInputObjectType && setMetaData)\\n        ) {\\n          setMetaData = false;\\n        }\\n\\n        // Check for meta flags\\n        if (type.type && setMetaData) {\\n          if (type.type instanceof GraphQLNonNull) {\\n            clone.isRequired = true;\\n            if (type.type.ofType instanceof GraphQLList) {\\n              clone.isList = true;\\n              clone.isItemRequired = type.type.ofType.ofType instanceof GraphQLNonNull;\\n            } else {\\n              clone.isList = false;\\n              clone.isItemRequired = false;\\n            }\\n          } else {\\n            clone.isRequired = false;\\n\\n            // List first\\n            if (type.type instanceof GraphQLList) {\\n              clone.isList = true;\\n              clone.isItemRequired = type.ofType instanceof GraphQLNonNull;\\n            } else {\\n              clone.isList = false;\\n              clone.isItemRequired = false;\\n            }\\n          }\\n        }\\n\\n        return clone;\\n      }\\n\\n      // Set prepared\\n      prepared.set(type, preparedObject);\\n    }\\n\\n    // Search deeper\\n    if (type.ofType) {\\n      const ofTypeResult = this.getDeepType(type.ofType, prepared, setMetaData);\\n      Object.assign(preparedObject, ofTypeResult);\\n      return ofTypeResult;\\n    }\\n\\n    // Process fields\\n    if (type._fields) {\\n      const result = {};\\n      for (const [key, value] of Object.entries(type._fields)) {\\n        result[key] = this.getDeepType(value, prepared, true);\\n      }\\n      Object.assign(preparedObject, result);\\n      return result;\\n    }\\n\\n    // Get type name\\n    if (type.type) {\\n      const typeResult = this.getDeepType(type.type, prepared, setMetaData);\\n\\n      // Disable meta flags for sub objects\\n      if (\\n        type?.type instanceof GraphQLInputObjectType ||\\n        (type?.type instanceof GraphQLNonNull && type?.type?.ofType instanceof GraphQLInputObjectType && setMetaData)\\n      ) {\\n        setMetaData = false;\\n      }\\n\\n      // Check for meta flags\\n      if (setMetaData) {\\n        if (type.type instanceof GraphQLNonNull) {\\n          typeResult.isRequired = true;\\n          if (type.type.ofType instanceof GraphQLList) {\\n            typeResult.isList = true;\\n            typeResult.isItemRequired = type.type.ofType.ofType instanceof GraphQLNonNull;\\n          } else {\\n            typeResult.isList = false;\\n            typeResult.isItemRequired = false;\\n          }\\n        } else {\\n          typeResult.isRequired = false;\\n\\n          // List first\\n          if (type.type instanceof GraphQLList) {\\n            typeResult.isList = true;\\n            typeResult.isItemRequired = type.ofType instanceof GraphQLNonNull;\\n          } else {\\n            typeResult.isList = false;\\n            typeResult.isItemRequired = false;\\n          }\\n        }\\n      }\\n\\n      Object.assign(preparedObject, typeResult);\\n      return typeResult;\\n    }\\n\\n    // Initialize GraphQLType\\n    const graphqlType = GraphQLType.map({\\n      type: type.name,\\n    });\\n\\n    // Set enum values\\n    if (!!type._values) {\\n      graphqlType.isEnum = true;\\n      for (const [key, value] of Object.entries(type._nameLookup)) {\\n        if (!(value as any).isDeprecated) {\\n          graphqlType.validEnums.push(key);\\n        }\\n      }\\n    }\\n\\n    // Finish\\n    prepared.set(type, graphqlType);\\n    return graphqlType;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"<p>Integrate schema</p>\\n","deprecated":false,"deprecationMessage":"","args":[{"name":"schema","type":"GraphQLSchema","deprecated":false,"deprecationMessage":""}],"line":15,"rawdescription":"\\n\\nIntegrate schema\\n","jsdoctags":[{"name":"schema","type":"GraphQLSchema","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"args","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"Record<string | any>","optional":false,"description":"","line":14,"modifierKind":[122]},{"name":"fields","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"Record<string | any>","optional":false,"description":"","line":15,"modifierKind":[122]}],"description":"<p>GraphQL meta</p>\\n","rawdescription":"\\n\\nGraphQL meta\\n","methods":[{"name":"getArgs","args":[{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"IGraphQLTypeCollection","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet arguments of GraphQL function\\n","description":"<p>Get arguments of GraphQL function</p>\\n","jsdoctags":[{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"getDeepType","args":[{"name":"type","type":"any","deprecated":false,"deprecationMessage":""},{"name":"prepared","type":"WeakMap<any | any>","deprecated":false,"deprecationMessage":"","defaultValue":"new WeakMap()"},{"name":"setMetaData","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"IGraphQLTypeCollection | GraphQLType","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet deep type data\\n","description":"<p>Get deep type data</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"type","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"prepared","type":"WeakMap<any | any>","deprecated":false,"deprecationMessage":"","defaultValue":"new WeakMap()","tagName":{"text":"param"}},{"name":"setMetaData","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"getFields","args":[{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"IGraphQLTypeCollection","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet fields of GraphQL function\\n","description":"<p>Get fields of GraphQL function</p>\\n","jsdoctags":[{"name":"functionName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"getFunction","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"Record<string, any>","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet GraphQL function\\n","description":"<p>Get GraphQL function</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"getType","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"GraphQLNamedType | null | undefined","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet type\\n","description":"<p>Get type</p>\\n","modifierKind":[122],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTypes","args":[],"optional":false,"returnType":"GraphqlCrudType[]","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWe\'re going to get the query and mutation types from the schema, then we\'re going to loop through the fields of each\\ntype and check if the field name starts with `find`, `create`, `update`, or `delete`. If it does, we\'re going to add\\nthe model name to the `possibleTypes` array\\n\\n","description":"<p>We&#39;re going to get the query and mutation types from the schema, then we&#39;re going to loop through the fields of each\\ntype and check if the field name starts with <code>find</code>, <code>create</code>, <code>update</code>, or <code>delete</code>. If it does, we&#39;re going to add\\nthe model name to the <code>possibleTypes</code> array</p>\\n","jsdoctags":[{"tagName":{"pos":1121,"end":1128,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of objects with the name of the model, and the CRUD operations that are available for that model.</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"GraphQLType","id":"class-GraphQLType-e1995deae06390a713d2afd6fb72f377146adcc6800b32e2deae2786f2b8a74929fb11ca977f369ad5e6a99829b21cfbba5046312fe8c34fb390810a13ec0eac","file":"projects/ng-base/shared/classes/graphql-type.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Standard } from \'./standard.class\';\\n\\n/**\\n * GraphQL type\\n */\\nexport class GraphQLType extends Standard {\\n  type = \'\';\\n  isRequired = false;\\n  isItemRequired = false;\\n  isList = false;\\n  isEnum = false;\\n  validEnums: string[] = [];\\n}\\n","properties":[{"name":"isEnum","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11},{"name":"isItemRequired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9},{"name":"isList","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10},{"name":"isRequired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8},{"name":"type","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"validEnums","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":12}],"description":"<p>GraphQL type</p>\\n","rawdescription":"\\n\\nGraphQL type\\n","methods":[{"name":"clone","args":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClone object (and map additional data)\\n","description":"<p>Clone object (and map additional data)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}},{"name":"getDiff","args":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"any","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n\\n","description":"<p>Compare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}},{"tagName":{"pos":1165,"end":1171,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>Record&lt;string, any&gt; with properties of this object which are different</p>\\n"}],"inheritance":{"file":"Standard"}},{"name":"map","args":[{"name":"this","type":"","deprecated":false,"deprecationMessage":""},{"name":"data","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":""},{"name":"item","type":"T","deprecated":false,"deprecationMessage":"","defaultValue":"new this()"}],"optional":false,"returnType":"T","typeParameters":["T"],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStatic map method\\n","description":"<p>Static map method</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"this","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"T","deprecated":false,"deprecationMessage":"","defaultValue":"new this()","tagName":{"text":"param"}}],"inheritance":{"file":"Standard"}}],"indexSignatures":[],"extends":"Standard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Helper","id":"class-Helper-b3f89f46cbdc5927d4e008f67123799e82cc200ff32205c3f4515fe936db1eb0604aab48dcab524835055098464fb720ca5bd1b0274fe68d78ff71dc65f2426f","file":"projects/ng-base/shared/classes/helper.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Standard } from \'./standard.class\';\\n\\n/**\\n * Helper class\\n */\\nexport class Helper {\\n  /**\\n   * Simple filter function for plain objects\\n   */\\n  static filter<T = { [key: string]: any }>(objects: T[], filter: { [key: string]: any }): T[] {\\n    return (objects?.filter((element) => {\\n      for (const [key, value] of Object.entries(filter)) {\\n        if (Array.isArray(element[key])) {\\n          for (const item of element[key]) {\\n            if (!element[key].includs(value)) {\\n              return false;\\n            }\\n          }\\n        } else if (element[key] !== value) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }) || []) as any[];\\n  }\\n\\n  /**\\n   * Convert to a url/uri conform string\\n   * Only:\\n   * - lower case\\n   * - chars, numbers and hyphens\\n   */\\n  static urlString(str: any, options: { allowAll?: boolean } = {}): string {\\n    // Config\\n    const config = {\\n      allowAll: false,\\n      ...options,\\n    };\\n\\n    // To string\\n    str = str + \'\';\\n\\n    // Trim\\n    str = str.trim();\\n\\n    // Lower case\\n    str = str.toLowerCase();\\n\\n    if (!config.allowAll) {\\n      // Replace spaces\\n      str = str.trim().replace(/\\\\s+/g, \'-\');\\n\\n      // Replace some special chars\\n      str = str.replace(\'ä\', \'ae\');\\n      str = str.replace(\'ö\', \'oe\');\\n      str = str.replace(\'ü\', \'ue\');\\n      str = str.replace(\'ß\', \'ss\');\\n\\n      // Remove other special chars\\n      str = str.replace(/[^a-zA-Z0-9-]/g, \'\');\\n    }\\n\\n    // Return url conform string\\n    return encodeURI(str);\\n  }\\n\\n  /**\\n   * Simple map function\\n   */\\n  public static map<T = { [key: string]: any }>(\\n    source: Partial<T> | { [key: string]: any },\\n    target: T,\\n    options: { funcAllowed?: boolean; dateStringToDate?: boolean | string[] } = {}\\n  ): T {\\n    // Set config\\n    const config = {\\n      funcAllowed: false,\\n      dateStringToDate: true,\\n      ...options,\\n    };\\n\\n    // Check source\\n    if (!source || typeof source !== \'object\' || Array.isArray(source)) {\\n      return target;\\n    }\\n\\n    // Update properties\\n    for (const key of Object.keys(target)) {\\n      if (source[key] !== undefined && (config.funcAllowed || typeof (source[key] !== \'function\'))) {\\n        if (typeof source[key] === \'string\' && config.dateStringToDate) {\\n          if (Array.isArray(config.dateStringToDate)) {\\n            if (config.dateStringToDate.includes(key)) {\\n              target[key] = Helper.parseDate(source[key]);\\n            }\\n          } else {\\n            target[key] = Helper.parseDate(source[key]);\\n          }\\n        } else {\\n          target[key] = source[key];\\n        }\\n      }\\n    }\\n\\n    // Return target\\n    return target;\\n  }\\n\\n  /**\\n   * Create Object or Objects of specified type with specified data\\n   */\\n  public static maps<T extends Standard>(\\n    data: Partial<T> | Partial<T>[] | { [key: string]: any } | { [key: string]: any }[],\\n    targetClass: new (...args: any[]) => T\\n  ): T[] {\\n    // Check data\\n    if (!data || typeof data !== \'object\') {\\n      return undefined;\\n    }\\n\\n    // Check array\\n    if (!Array.isArray(data)) {\\n      data = [data];\\n    }\\n\\n    // Map\\n    return (data as any).map((item: any) => {\\n      return (targetClass as any).map(item);\\n    });\\n  }\\n\\n  /**\\n   * Get plain parameter\\n   */\\n  public static getPlainParameter(parameter: string) {\\n    if (!parameter) {\\n      return parameter;\\n    }\\n    return parameter?.split(\'?\')?.shift()?.split(\'#\')?.shift();\\n  }\\n\\n  /**\\n   * Get ID of an url parameter\\n   */\\n  public static getParameterId(parameter: string) {\\n    if (!parameter) {\\n      return parameter;\\n    }\\n    return Helper.getPlainParameter(parameter)?.split(\'-\').pop();\\n  }\\n\\n  /**\\n   * Delay\\n   */\\n  public static delay(ms: number) {\\n    const promise = new Promise((resolve) => setTimeout(resolve, ms));\\n    return promise;\\n  }\\n\\n  /**\\n   * Deep freeze\\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#What_is_shallow_freeze\\n   */\\n  public static deepFreeze(object: any, preparedObjects = []) {\\n    // Prevent infinit regress\\n    if (preparedObjects.includes(object as never)) {\\n      return object;\\n    }\\n    preparedObjects.push(object as never);\\n\\n    // Retrieve the property names defined on object\\n    const propNames = Object.getOwnPropertyNames(object);\\n\\n    // Freeze properties before freezing self\\n    for (const name of propNames) {\\n      const value = object[name];\\n\\n      if (value && typeof value === \'object\') {\\n        Helper.deepFreeze(value, preparedObjects);\\n      }\\n    }\\n\\n    return Object.freeze(object);\\n  }\\n\\n  /**\\n   * Generates an unique identifier with 24 characters\\n   */\\n  public static getUID(): string {\\n    let dt = new Date().getTime();\\n    const uuid = \'xxxxxxxxxxxxxxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n      // eslint-disable-next-line no-bitwise\\n      const r = (dt + Math.random() * 16) % 16 | 0;\\n      dt = Math.floor(dt / 16);\\n      // eslint-disable-next-line no-bitwise\\n      return (c === \'x\' ? r : (r & 0x3) | 0x8).toString(16);\\n    });\\n    return uuid;\\n  }\\n\\n  /**\\n   * Parse date string to date object\\n   */\\n  public static parseDate(dateString: string) {\\n    const reISO = /^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*))(?:Z|(\\\\+|-)([\\\\d|:]*))?$/;\\n    const reMsAjax = /^\\\\/Date\\\\((d|-|.*)\\\\)[\\\\/|\\\\\\\\]$/;\\n    if (typeof dateString === \'string\') {\\n      const isoExec = reISO.exec(dateString);\\n      if (isoExec) {\\n        return new Date(dateString);\\n      }\\n      const msAjaxExec = reMsAjax.exec(dateString);\\n      if (msAjaxExec) {\\n        const cleaned = msAjaxExec[1].split(/[-+,.]/);\\n        return new Date(cleaned[0] ? +cleaned[0] : 0 - +cleaned[1]);\\n      }\\n    }\\n    return dateString;\\n  }\\n\\n  /**\\n   * Get browser name and version\\n   */\\n  public static getBrowser() {\\n    const userAgent = navigator.userAgent;\\n    let data = userAgent.match(/(opera|chrome|safari|firefox|msie|trident(?=\\\\/))\\\\/?\\\\s*(\\\\d+)/i) || [];\\n    let version;\\n    if (/trident/i.test(data[1])) {\\n      version = /\\\\brv[ :]+(\\\\d+)/g.exec(userAgent) || [];\\n      return { name: \'IE\', version: version[1] || \'\' };\\n    }\\n    if (data[1] === \'Chrome\') {\\n      version = userAgent.match(/\\\\bOPR|Edge\\\\/(\\\\d+)/);\\n      if (version != null) {\\n        return { name: \'Opera\', version: version[1] };\\n      }\\n    }\\n    data = data[2] ? [data[1], data[2]] : [navigator.appName, navigator.appVersion, \'-?\'];\\n    version = userAgent.match(/version\\\\/(\\\\d+)/i);\\n    if (version !== null) {\\n      data.splice(1, 1, version[1]);\\n    }\\n    return {\\n      name: data[0],\\n      version: data[1],\\n    };\\n  }\\n\\n  /**\\n   * Whether first parameter is a deep subset of second parameter\\n   * Hint: functions will be ignored\\n   */\\n  static isSubset(a: any, b: any) {\\n    // Equal\\n    if (a === b) {\\n      return true;\\n    }\\n\\n    // Different type\\n    if (typeof a !== typeof b) {\\n      return false;\\n    }\\n\\n    // Process array\\n    if (Array.isArray(a)) {\\n      for (const [key, value] of Object.entries(a)) {\\n        if (Helper.isSubset(value, b[key])) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n\\n    // Process object\\n    if (typeof a === \'object\') {\\n      const plain = JSON.parse(JSON.stringify(a));\\n      for (const [key, value] of Object.entries(plain)) {\\n        if (Helper.isSubset(value, b[key])) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }\\n\\n    // Else\\n    return true;\\n  }\\n\\n  /**\\n   * Whether parameters are equal (have equal properties)\\n   * Hint: functions will be ignored\\n   */\\n  static isEqual(a: any, b: any) {\\n    return Helper.isSubset(a, b) && Helper.isSubset(b, a);\\n  }\\n\\n  /**\\n   * First level difference of two objects\\n   * Hint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n   *\\n   * @returns Record<string, any> Object with properties from first object\\n   */\\n  static getDiff(a: Record<string, any>, b: Record<string, any>, clone: boolean = true) {\\n    const result = {};\\n    let firstObject = a;\\n    if (clone) {\\n      firstObject = JSON.parse(JSON.stringify(a));\\n    }\\n    for (const [key, value] of Object.entries(firstObject)) {\\n      if (!Helper.isSubset(value, b[key])) {\\n        result[key] = value;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Check if propertie is type of HTMLCollection or NodeList\\n   * See https://stackoverflow.com/a/7238344\\n   *\\n   * @param nodes\\n   */\\n  static isNodeList(nodes) {\\n    try {\\n      const stringRepr = Object.prototype.toString.call(nodes);\\n      return (\\n        typeof nodes === \'object\' &&\\n        /^\\\\[object (HTMLCollection|NodeList|Object)\\\\]$/.test(stringRepr) &&\\n        typeof nodes.length === \'number\' &&\\n        (nodes.length === 0 || (typeof nodes[0] === \'object\' && nodes[0].nodeType > 0))\\n      );\\n    } catch (e) {\\n      return false;\\n    }\\n  }\\n\\n  static arrayBufferToBase64(buffer) {\\n    let binary = \'\';\\n    const bytes = new Uint8Array(buffer);\\n    const len = bytes.byteLength;\\n    for (let i = 0; i < len; i++) {\\n      binary += String.fromCharCode(bytes[i]);\\n    }\\n    return `data:image/*;base64, ${window.btoa(binary)}`;\\n  }\\n}\\n","properties":[],"description":"<p>Helper class</p>\\n","rawdescription":"\\n\\nHelper class\\n","methods":[{"name":"arrayBufferToBase64","args":[{"name":"buffer","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":336,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"buffer","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"deepFreeze","args":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":""},{"name":"preparedObjects","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"any","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDeep freeze\\nSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#What_is_shallow_freeze\\n","description":"<p>Deep freeze\\nSee <a href=\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#What_is_shallow_freeze\\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#What_is_shallow_freeze</a></p>\\n","modifierKind":[124],"jsdoctags":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"preparedObjects","type":"[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"delay","args":[{"name":"ms","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDelay\\n","description":"<p>Delay</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"ms","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"filter","args":[{"name":"objects","type":"T[]","deprecated":false,"deprecationMessage":""},{"name":"filter","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"T[]","typeParameters":["T"],"line":10,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSimple filter function for plain objects\\n","description":"<p>Simple filter function for plain objects</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"objects","type":"T[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"filter","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getBrowser","args":[],"optional":false,"returnType":"{ name: any; version: any; }","typeParameters":[],"line":223,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet browser name and version\\n","description":"<p>Get browser name and version</p>\\n","modifierKind":[124]},{"name":"getDiff","args":[{"name":"a","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"b","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"{}","typeParameters":[],"line":302,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFirst level difference of two objects\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n\\n","description":"<p>First level difference of two objects\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"a","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"b","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}},{"tagName":{"pos":7732,"end":7739,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Record&lt;string, any&gt; Object with properties from first object</p>\\n"}]},{"name":"getParameterId","args":[{"name":"parameter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet ID of an url parameter\\n","description":"<p>Get ID of an url parameter</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"parameter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPlainParameter","args":[{"name":"parameter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet plain parameter\\n","description":"<p>Get plain parameter</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"parameter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getUID","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerates an unique identifier with 24 characters\\n","description":"<p>Generates an unique identifier with 24 characters</p>\\n","modifierKind":[124]},{"name":"isEqual","args":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":""},{"name":"b","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":292,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhether parameters are equal (have equal properties)\\nHint: functions will be ignored\\n","description":"<p>Whether parameters are equal (have equal properties)\\nHint: functions will be ignored</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"b","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isNodeList","args":[{"name":"nodes","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":322,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if propertie is type of HTMLCollection or NodeList\\nSee https://stackoverflow.com/a/7238344\\n\\n","description":"<p>Check if propertie is type of HTMLCollection or NodeList\\nSee <a href=\\"https://stackoverflow.com/a/7238344\\">https://stackoverflow.com/a/7238344</a></p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":8323,"end":8328,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"nodes"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":8317,"end":8322,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"isSubset","args":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":""},{"name":"b","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":252,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhether first parameter is a deep subset of second parameter\\nHint: functions will be ignored\\n","description":"<p>Whether first parameter is a deep subset of second parameter\\nHint: functions will be ignored</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"a","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"b","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"map","args":[{"name":"source","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":""},{"name":"target","type":"T","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"T","typeParameters":["T"],"line":70,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSimple map function\\n","description":"<p>Simple map function</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"source","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"target","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"maps","args":[{"name":"data","type":"Partial<T> | Partial<T>[] | literal type | literal type[]","deprecated":false,"deprecationMessage":""},{"name":"targetClass","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"T[]","typeParameters":["T"],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate Object or Objects of specified type with specified data\\n","description":"<p>Create Object or Objects of specified type with specified data</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"data","type":"Partial<T> | Partial<T>[] | literal type | literal type[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"targetClass","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parseDate","args":[{"name":"dateString","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":203,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nParse date string to date object\\n","description":"<p>Parse date string to date object</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"dateString","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"urlString","args":[{"name":"str","type":"any","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"string","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nConvert to a url/uri conform string\\nOnly:\\n- lower case\\n- chars, numbers and hyphens\\n","description":"<p>Convert to a url/uri conform string\\nOnly:</p>\\n<ul>\\n<li>lower case</li>\\n<li>chars, numbers and hyphens</li>\\n</ul>\\n","modifierKind":[124],"jsdoctags":[{"name":"str","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MockUserService","id":"class-MockUserService-58d0f081f9e556726f10d629e38bac37655ac53d45d20c2679560bab32e2fc8cd074e3cd1316d78d7fe4034b70e377a905638783eded1aa7a02bed8ff6dd8ec0","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Story, Meta } from \'@storybook/angular/types-6-0\';\\nimport { moduleMetadata } from \'@storybook/angular\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterTestingModule } from \'@angular/router/testing\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\nimport { ForgotPasswordComponent } from \'./forgot-password.component\';\\nimport { UserService } from \'@lenne.tech/ng-base/shared\';\\nimport { of } from \'rxjs\';\\n\\nclass MockUserService {\\n  requestPasswordResetMail() {\\n    return of(false);\\n  }\\n}\\n\\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\\nexport default {\\n  title: \'Prototype/Pages/Forgot-Password\',\\n  component: ForgotPasswordComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        CommonModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        BaseComponentsModule,\\n        RouterTestingModule.withRoutes([]),\\n      ],\\n      providers: [\\n        {\\n          provide: UserService,\\n          useClass: MockUserService,\\n        },\\n      ],\\n    }),\\n  ],\\n  parameters: {\\n    // More on Story layout: https://storybook.js.org/docs/angular/configure/story-layout\\n    layout: \'fullscreen\',\\n  },\\n} as Meta;\\n\\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\\nconst Template: Story<ForgotPasswordComponent> = (args: ForgotPasswordComponent) => ({\\n  props: args,\\n});\\n\\nexport const Default = Template.bind({});\\nDefault.args = {};\\n","properties":[],"methods":[{"name":"requestPasswordResetMail","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MockUserService","id":"class-MockUserService-5d73e807d4ca6ae4ad46799e6400be43533c7bebaaf0b6fdd8a685cd0e996578879fa6011349573544b81957d7c627a3cd540db79e599745f5f95653de939a20-1","file":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Story, Meta } from \'@storybook/angular/types-6-0\';\\nimport { moduleMetadata } from \'@storybook/angular\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { LoginComponent } from \'./login.component\';\\nimport { RouterTestingModule } from \'@angular/router/testing\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\nimport { of } from \'rxjs\';\\nimport { UserService } from \'@lenne.tech/ng-base/shared\';\\n\\nclass MockUserService {\\n  login() {\\n    return of(false);\\n  }\\n}\\n\\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\\nexport default {\\n  title: \'Prototype/Pages/Login\',\\n  component: LoginComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        CommonModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        BaseComponentsModule,\\n        RouterTestingModule.withRoutes([]),\\n      ],\\n      providers: [\\n        {\\n          provide: UserService,\\n          useClass: MockUserService,\\n        },\\n      ],\\n    }),\\n  ],\\n  parameters: {\\n    // More on Story layout: https://storybook.js.org/docs/angular/configure/story-layout\\n    layout: \'fullscreen\',\\n  },\\n} as Meta;\\n\\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\\nconst Template: Story<LoginComponent> = (args: LoginComponent) => ({\\n  props: args,\\n});\\n\\nexport const Default = Template.bind({});\\nDefault.args = {};\\n","properties":[],"methods":[{"name":"login","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"MockUserService-1"},{"name":"MockUserService","id":"class-MockUserService-1ffac2ac4a05d829295ab19df2d9120f297b78cb082f4f48c30b963fdc0d2bb7697ba79a88ab5cadca4d3ec2b5a085167d1748c0dd978f30dbe5f0b8707df09e-2","file":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Story, Meta } from \'@storybook/angular/types-6-0\';\\nimport { moduleMetadata } from \'@storybook/angular\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterTestingModule } from \'@angular/router/testing\';\\nimport { RegisterComponent } from \'./register.component\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\nimport { UserService } from \'@lenne.tech/ng-base/shared\';\\nimport { of } from \'rxjs\';\\n\\nclass MockUserService {\\n  register() {\\n    return of(false);\\n  }\\n}\\n\\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\\nexport default {\\n  title: \'Prototype/Pages/Register\',\\n  component: RegisterComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        CommonModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        BaseComponentsModule,\\n        RouterTestingModule.withRoutes([]),\\n      ],\\n      providers: [\\n        {\\n          provide: UserService,\\n          useClass: MockUserService,\\n        },\\n      ],\\n    }),\\n  ],\\n  parameters: {\\n    // More on Story layout: https://storybook.js.org/docs/angular/configure/story-layout\\n    layout: \'fullscreen\',\\n  },\\n} as Meta;\\n\\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\\nconst Template: Story<RegisterComponent> = (args: RegisterComponent) => ({\\n  props: args,\\n});\\n\\nexport const Default = Template.bind({});\\nDefault.args = {};\\n","properties":[],"methods":[{"name":"register","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":2,"duplicateName":"MockUserService-2"},{"name":"Sort","id":"class-Sort-1d38ce2d70e4fcea66e0fe52a23a146c60d4cf1ffd5ab3fe41ac42b5a8a86cfa07b7d00798005e0356d14e6b28c4697637a139805db263fa580b087730ba1300","file":"projects/ng-base/shared/classes/sort.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class Sort {\\n  private sortOrder = 1;\\n  collator = new Intl.Collator(undefined, { numeric: true, sensitivity: \'base\' });\\n\\n  /**\\n   * Sorts clicked column\\n   *\\n   * @param property\\n   * @param order\\n   * @param type\\n   */\\n  public startSort(property: string, order: string, type = \'\') {\\n    if (order === \'desc\') {\\n      this.sortOrder = -1;\\n    }\\n    return (a, b) => {\\n      if (type === \'date\') {\\n        return this.sortDate(new Date(a.latestStep[property]), new Date(b.latestStep[property]));\\n      } else if (type === \'position\') {\\n        return this.collator.compare(a.position.Value[property], b.position.Value[property]) * this.sortOrder;\\n      } else {\\n        return this.collator.compare(a[property], b[property]) * this.sortOrder;\\n      }\\n    };\\n  }\\n\\n  /**\\n   * Sorts dates\\n   *\\n   * @param a\\n   * @param b\\n   */\\n  private sortDate(a: Date, b: Date) {\\n    if (a < b) {\\n      return -1 * this.sortOrder;\\n    } else if (a > b) {\\n      return 1 * this.sortOrder;\\n    } else {\\n      return 0 * this.sortOrder;\\n    }\\n  }\\n}\\n","properties":[{"name":"collator","defaultValue":"new Intl.Collator(undefined, { numeric: true, sensitivity: \'base\' })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":3},{"name":"sortOrder","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2,"modifierKind":[121]}],"methods":[{"name":"sortDate","args":[{"name":"a","type":"Date","deprecated":false,"deprecationMessage":""},{"name":"b","type":"Date","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSorts dates\\n\\n","description":"<p>Sorts dates</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":811,"end":812,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"a"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":805,"end":810,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":825,"end":826,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"b"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":819,"end":824,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"startSort","args":[{"name":"property","type":"string","deprecated":false,"deprecationMessage":""},{"name":"order","type":"string","deprecated":false,"deprecationMessage":""},{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"}],"optional":false,"returnType":"(a: any, b: any) => number","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSorts clicked column\\n\\n","description":"<p>Sorts clicked column</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":178,"end":186,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"property"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":172,"end":177,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":199,"end":204,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"order"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":193,"end":198,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":217,"end":221,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"pos":211,"end":216,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Standard","id":"class-Standard-97aed838beceb4664325fd4e01ae97871dfc47282f74857427f9d8bd0d35bba9c8e377e85522c5fa96cf8372e10dab0959b2693d495f753aafc794c39eaf7f6f","file":"projects/ng-base/shared/classes/standard.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Helper } from \'./helper.class\';\\n\\n/**\\n * Standard class\\n * Other classes should extend the Standard class, if they offer own functions\\n * If the extended class uses object properties with own map functions, it should implement its own map function\\n */\\nexport class Standard {\\n  /**\\n   * Static map method\\n   */\\n  public static map<T extends Standard>(\\n    this: new (...args: any[]) => T,\\n    data: Partial<T> | { [key: string]: any },\\n    item: T = new this()\\n  ): T {\\n    return (item as any).map(data);\\n  }\\n\\n  /**\\n   * Map data into an object\\n   */\\n  public map(data: Partial<this> | { [key: string]: any }): this {\\n    return Helper.map(data, this);\\n  }\\n\\n  /**\\n   * Clone object (and map additional data)\\n   */\\n  public clone(mapData?: Partial<this> | { [key: string]: any }): this {\\n    const current = JSON.parse(JSON.stringify(this));\\n    if (mapData) {\\n      Object.assign(current, mapData);\\n    }\\n    return new (this as any).constructor().map(current);\\n  }\\n\\n  /**\\n   * Compare this with another object\\n   * Hint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n   *\\n   * @return Record<string, any> with properties of this object which are different\\n   */\\n  public getDiff(compare: Record<string, any>, clone: boolean = true) {\\n    return Helper.getDiff(this, compare, clone);\\n  }\\n}\\n","properties":[],"description":"<p>Standard class\\nOther classes should extend the Standard class, if they offer own functions\\nIf the extended class uses object properties with own map functions, it should implement its own map function</p>\\n","rawdescription":"\\n\\nStandard class\\nOther classes should extend the Standard class, if they offer own functions\\nIf the extended class uses object properties with own map functions, it should implement its own map function\\n","methods":[{"name":"clone","args":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClone object (and map additional data)\\n","description":"<p>Clone object (and map additional data)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"mapData","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getDiff","args":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":""},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"any","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value\\n\\n","description":"<p>Compare this with another object\\nHint: functions will be ignored and when an array or an object is different the hole array or object will used as property value</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"compare","type":"Record<string | any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"clone","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}},{"tagName":{"pos":1165,"end":1171,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":105,"escapedText":"return"},"comment":"<p>Record&lt;string, any&gt; with properties of this object which are different</p>\\n"}]},{"name":"map","args":[{"name":"this","type":"","deprecated":false,"deprecationMessage":""},{"name":"data","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":""},{"name":"item","type":"T","deprecated":false,"deprecationMessage":"","defaultValue":"new this()"}],"optional":false,"returnType":"T","typeParameters":["T"],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStatic map method\\n","description":"<p>Static map method</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"this","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"Partial<T> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"T","deprecated":false,"deprecationMessage":"","defaultValue":"new this()","tagName":{"text":"param"}}]},{"name":"map","args":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMap data into an object\\n","description":"<p>Map data into an object</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"data","type":"Partial<> | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Validation","id":"class-Validation-36dbf4dcca26a3f9cd04050f2f6b40db1e1d67b06df15e7b2d2823774af1cc3c8737532de54d1c70312908a281dc7c6fc4243e4dfef13f51d8cea32fe9e19a99","file":"projects/ng-base/shared/validators/match.validator.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AbstractControl, ValidatorFn } from \'@angular/forms\';\\n\\nexport class Validation {\\n  static match(controlName: string, checkControlName: string): ValidatorFn {\\n    return (controls: AbstractControl) => {\\n      const control = controls.get(controlName);\\n      const checkControl = controls.get(checkControlName);\\n      if (checkControl?.errors && !checkControl.errors?.matching) {\\n        return null;\\n      }\\n      if (control?.value !== checkControl?.value) {\\n        controls.get(checkControlName)?.setErrors({ matching: true });\\n        return { matching: true };\\n      } else {\\n        return null;\\n      }\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"match","args":[{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"checkControlName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"checkControlName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"ContextMenuDirective","id":"directive-ContextMenuDirective-0eae99dcef8e62ae82ff1097b8868daaa741e8a26ab56fd14135531e7bc9f47fc63829c53b7da798cf8888a7332f1bf78ccdcedc474f158a1faf6d923c6dfd27","file":"projects/ng-base/src/directives/context-menu.directive.ts","type":"directive","description":"<p>Directive vor context menu\\nSee <a href=\\"https://stackblitz.com/edit/angular-custom-context-menu\\">https://stackblitz.com/edit/angular-custom-context-menu</a></p>\\n","rawdescription":"\\n\\nDirective vor context menu\\nSee https://stackblitz.com/edit/angular-custom-context-menu\\n","sourceCode":"import { Directive, ElementRef, Input, OnInit, Output } from \'@angular/core\';\\n\\n/**\\n * Directive vor context menu\\n * See https://stackblitz.com/edit/angular-custom-context-menu\\n */\\n@Directive({\\n  selector: \'[ltContextMenu]\',\\n  exportAs: \'contextMenuData\',\\n})\\nexport class ContextMenuDirective implements OnInit {\\n  @Input() contextMenuData?: any;\\n  @Input() ltContextMenu: HTMLElement;\\n  @Input() xGap = 0;\\n  @Input() yGap = 0;\\n  @Input() overflowSpace = 10;\\n  @Input() selectors = \'*\';\\n  @Output() clickedElement: Element = null;\\n  previousDisplayStatus: string = null;\\n\\n  constructor(private el: ElementRef) {}\\n\\n  ngOnInit() {\\n    if (this.ltContextMenu) {\\n      this.previousDisplayStatus = this.ltContextMenu.style.display;\\n    }\\n\\n    // Add a click listener to the window,\\n    // so that we can close the context menu on left click\\n    window.addEventListener(\'click\', () => {\\n      this.showContextMenu(null, false);\\n    });\\n\\n    // Close context menu when escape is pressed\\n    window.addEventListener(\'keydown\', (e) => {\\n      if (e.code === \'Escape\') {\\n        this.showContextMenu(null, false);\\n      }\\n    });\\n\\n    // Add an event listener to listen to the \'contextmenu\' event\\n    this.el.nativeElement.addEventListener(\'contextmenu\', (e) => {\\n      // Prevent the default context menu to popup\\n      if (e.preventDefault) {\\n        e.preventDefault();\\n      }\\n      // Shows our own context menu\\n      this.showContextMenu(e, true);\\n    });\\n  }\\n\\n  // Shows or hides our custom context menu, which is specified as a input\\n  showContextMenu(event, show: boolean) {\\n    const cm = this.ltContextMenu;\\n    if (cm) {\\n      // Try to open context menu\\n      if (show && event && event instanceof MouseEvent) {\\n        // Get valid clicked structureElement\\n        const clickedElement = (event?.target as HTMLElement)?.closest(this.selectors);\\n        if (clickedElement) {\\n          // Set clicked structureElement\\n          this.clickedElement = clickedElement;\\n\\n          setTimeout(() => {\\n            // Set display status\\n            cm.style.display = \'block\';\\n\\n            // Calculate top position\\n            let top = event.y + this.yGap;\\n            if (top + cm.offsetHeight + 10 > document.documentElement.clientHeight) {\\n              top = document.documentElement.clientHeight - cm.offsetHeight - this.overflowSpace;\\n            }\\n\\n            // Calculate left position\\n            let left = event.x + this.xGap;\\n            if (left + cm.offsetWidth + 10 > document.documentElement.clientWidth) {\\n              left = document.documentElement.clientWidth - cm.offsetWidth - this.overflowSpace;\\n            }\\n\\n            // Set position\\n            cm.style.top = top + \'px\';\\n            cm.style.left = left + \'px\';\\n\\n            // Show\\n            cm.style.opacity = \'1.0\';\\n            cm.style[\'pointer-events\'] = \'auto\';\\n          }, 1);\\n\\n          return;\\n        }\\n      }\\n\\n      // Close context menu\\n      this.clickedElement = null;\\n      if (this.previousDisplayStatus) {\\n        cm.style.display = this.previousDisplayStatus;\\n      }\\n      cm.style.opacity = \'0.01\';\\n      cm.style[\'pointer-events\'] = \'none\';\\n    }\\n  }\\n}\\n","selector":"[ltContextMenu]","providers":[],"inputsClass":[{"name":"contextMenuData","deprecated":false,"deprecationMessage":"","line":12,"type":"any","decorators":[]},{"name":"ltContextMenu","deprecated":false,"deprecationMessage":"","line":13,"type":"HTMLElement","decorators":[]},{"name":"overflowSpace","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":16,"type":"number","decorators":[]},{"name":"selectors","defaultValue":"\'*\'","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"xGap","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":14,"type":"number","decorators":[]},{"name":"yGap","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":15,"type":"number","decorators":[]}],"outputsClass":[{"name":"clickedElement","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":18,"type":"Element"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"previousDisplayStatus","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"showContextMenu","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""},{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"LazyLoadDirective","id":"directive-LazyLoadDirective-3eea61299002a4e993bcfbeec6c98a0ff146d860386ddb9d277ae42b25bf5d984028c8b1e2e9de29953ff4272fe410185f7d5db54ee553136babec9951b51949","file":"projects/ng-base/src/directives/lazy-load.directive.ts","type":"directive","description":"<p>Directive for lazy loading images</p>\\n","rawdescription":"\\n\\nDirective for lazy loading images\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, HostBinding, Input } from \'@angular/core\';\\n\\n/**\\n * Directive for lazy loading images\\n */\\n@Directive({\\n  selector: \'img[ltLazyLoad]\',\\n})\\nexport class LazyLoadDirective implements AfterViewInit {\\n  @HostBinding(\'attr.src\') srcAttr = null;\\n  @Input() src: string;\\n\\n  constructor(private el: ElementRef) {}\\n\\n  ngAfterViewInit() {\\n    this.canLazyLoad() ? this.lazyLoadImage() : this.loadImage();\\n  }\\n\\n  private canLazyLoad() {\\n    return window && \'IntersectionObserver\' in window;\\n  }\\n\\n  private lazyLoadImage() {\\n    const obs = new IntersectionObserver((entries) => {\\n      entries.forEach(({ isIntersecting }) => {\\n        if (isIntersecting) {\\n          this.loadImage();\\n          obs.unobserve(this.el.nativeElement);\\n        }\\n      });\\n    });\\n    obs.observe(this.el.nativeElement);\\n  }\\n\\n  private loadImage() {\\n    this.srcAttr = this.src;\\n  }\\n}\\n","selector":"img[ltLazyLoad]","providers":[],"inputsClass":[{"name":"src","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"attr.src","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":10,"type":"any","decorators":[]}],"hostListeners":[],"propertiesClass":[{"name":"srcAttr","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"null","optional":false,"description":"","line":10,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'attr.src\'"}]}],"methodsClass":[{"name":"canLazyLoad","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"lazyLoadImage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"loadImage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"implements":["AfterViewInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"MatchHeightDirective","id":"directive-MatchHeightDirective-16fe36b11bb19777a609b37f3a172e47cbdbab9a139b82593a84fe8ae538c7d9cb94e049a6b0c25e709806f0caf16538036008c841473a6b4bfe2975987b810b","file":"projects/ng-base/src/directives/match-height.directive.ts","type":"directive","description":"<p>Set same height (maximum) to different elements</p>\\n","rawdescription":"\\n\\nSet same height (maximum) to different elements\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, HostListener, Inject, Input, PLATFORM_ID } from \'@angular/core\';\\nimport { ImageService } from \'@lenne.tech/ng-base/shared\';\\nimport { isPlatformBrowser } from \'@angular/common\';\\n\\n/**\\n * Set same height (maximum) to different elements\\n */\\n@Directive({\\n  selector: \'[ltMatchHeight]\',\\n})\\nexport class MatchHeightDirective implements AfterViewInit {\\n  // class name to match height\\n  @Input()\\n  ltMatchHeight: string | string[];\\n\\n  // Replace lazy loading images with immediate loading images\\n  @Input()\\n  loadImages = true;\\n\\n  // Wether current platform is a browser\\n  readonly isBrowser: boolean;\\n\\n  constructor(protected el: ElementRef, protected imageService: ImageService, @Inject(PLATFORM_ID) platformId: string) {\\n    this.isBrowser = isPlatformBrowser(platformId);\\n  }\\n\\n  @HostListener(\'window:resize\')\\n  onResize() {\\n    this.matchHeight(this.el.nativeElement, this.ltMatchHeight);\\n  }\\n\\n  ngAfterViewInit() {\\n    this.matchHeight(this.el.nativeElement, this.ltMatchHeight);\\n  }\\n\\n  async matchHeight(parent: HTMLElement, target: string | string[]) {\\n    if (!parent) {\\n      return;\\n    }\\n\\n    let classNames;\\n    if (!Array.isArray(target)) {\\n      classNames = [target];\\n    } else {\\n      classNames = target;\\n    }\\n\\n    for (const className of classNames) {\\n      // find all child structureElements with the selected class name\\n      const children = parent.getElementsByClassName(className);\\n\\n      if (!children || children.length < 2) {\\n        continue;\\n      }\\n\\n      // Load images of children\\n      if (this.loadImages) {\\n        await this.imageService.preLoadImages({ elements: children });\\n      }\\n\\n      // reset all children height\\n      Array.from(children).forEach((element: HTMLElement) => {\\n        element.style.height = \'initial\';\\n      });\\n\\n      // get all the child structureElements heights\\n      const itemHeights = Array.from(children).map((element) => {\\n        if (element.getBoundingClientRect) {\\n          return element.getBoundingClientRect().height;\\n        }\\n        return 0;\\n      });\\n\\n      // find out the tallest one\\n      const maxHeight = itemHeights.reduce((prev, curr) => (curr > prev ? curr : prev), 0);\\n\\n      // update the child structureElements height to the tallest one\\n      Array.from(children).forEach((element: HTMLElement) => (element.style.height = `${maxHeight}px`));\\n    }\\n  }\\n}\\n","selector":"[ltMatchHeight]","providers":[],"inputsClass":[{"name":"loadImages","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":18,"type":"boolean","decorators":[]},{"name":"ltMatchHeight","deprecated":false,"deprecationMessage":"","line":14,"type":"string | string[]","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":28}],"propertiesClass":[{"name":"isBrowser","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21,"modifierKind":[144]}],"methodsClass":[{"name":"matchHeight","args":[{"name":"parent","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"target","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[131],"jsdoctags":[{"name":"parent","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"target","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}]}],"implements":["AfterViewInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"imageService","type":"ImageService","deprecated":false,"deprecationMessage":""},{"name":"platformId","type":"string","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"imageService","type":"ImageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"platformId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"ResizableDirective","id":"directive-ResizableDirective-04eee594711067f66cc43b6634b882dcdd23353af61aec96760ebeb87ee9ea00831228d7d45aa1d8ec5408da276f059aa26040697f4e3bdcbc9580ea5f89aecc","file":"projects/ng-base/src/directives/resizable.directive.ts","type":"directive","description":"<p>Reszise detection\\n(inpsired by: <a href=\\"https://stackblitz.com/edit/angular-resizable\\">https://stackblitz.com/edit/angular-resizable</a>)</p>\\n","rawdescription":"\\n\\nReszise detection\\n(inpsired by: https://stackblitz.com/edit/angular-resizable)\\n","sourceCode":"import { Directive, ElementRef, Input, OnInit } from \'@angular/core\';\\n\\n/**\\n * Reszise detection\\n * (inpsired by: https://stackblitz.com/edit/angular-resizable)\\n */\\n@Directive({\\n  selector: \'[ltResizable]\',\\n})\\nexport class ResizableDirective implements OnInit {\\n  @Input() resizableGrabWidth = 8;\\n  @Input() resizableMinWidth = 10;\\n\\n  dragging = false;\\n\\n  constructor(private el: ElementRef) {}\\n\\n  ngOnInit(): void {\\n    this.addListenerToDocument();\\n    this.addListenerToElement();\\n  }\\n\\n  mouseMoveG(evt) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n    this.newWidth(evt.clientX - this.el.nativeElement.offsetLeft);\\n    evt.stopPropagation();\\n  }\\n\\n  newWidth(wid) {\\n    const result = Math.max(this.resizableMinWidth, wid);\\n    this.el.nativeElement.style.width = result + \'px\';\\n  }\\n\\n  mouseDown(evt) {\\n    if (this.inDragRegion(evt)) {\\n      this.dragging = true;\\n      this.preventGlobalMouseEvents();\\n      evt.stopPropagation();\\n    }\\n  }\\n\\n  restoreGlobalMouseEvents() {\\n    document.body.style[\'pointer-events\'] = \'auto\';\\n  }\\n\\n  mouseUpG(evt: Event) {\\n    if (!this.dragging) {\\n      return;\\n    }\\n    this.restoreGlobalMouseEvents();\\n    this.dragging = false;\\n    evt.stopPropagation();\\n  }\\n\\n  mouseMove(evt) {\\n    if (this.inDragRegion(evt) || this.dragging) {\\n      this.el.nativeElement.style.cursor = \'col-resize\';\\n    } else {\\n      this.el.nativeElement.style.cursor = \'default\';\\n    }\\n  }\\n\\n  preventGlobalMouseEvents() {\\n    document.body.style[\'pointer-events\'] = \'none\';\\n  }\\n\\n  inDragRegion(evt) {\\n    return this.el.nativeElement.clientWidth - evt.clientX + this.el.nativeElement.offsetLeft < this.resizableGrabWidth;\\n  }\\n\\n  private addListenerToDocument() {\\n    document.addEventListener(\\n      \'mousemove\',\\n      (e) => {\\n        this.mouseMoveG(e);\\n      },\\n      true\\n    );\\n\\n    document.addEventListener(\\n      \'mouseup\',\\n      (e) => {\\n        this.mouseUpG(e);\\n      },\\n      true\\n    );\\n  }\\n\\n  private addListenerToElement() {\\n    this.el.nativeElement.addEventListener(\\n      \'mousedown\',\\n      (e) => {\\n        this.mouseDown(e);\\n      },\\n      true\\n    );\\n\\n    this.el.nativeElement.addEventListener(\\n      \'mousemove\',\\n      (e) => {\\n        this.mouseMove(e);\\n      },\\n      true\\n    );\\n  }\\n}\\n","selector":"[ltResizable]","providers":[],"inputsClass":[{"name":"resizableGrabWidth","defaultValue":"8","deprecated":false,"deprecationMessage":"","line":11,"type":"number","decorators":[]},{"name":"resizableMinWidth","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"dragging","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14}],"methodsClass":[{"name":"addListenerToDocument","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"addListenerToElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"inDragRegion","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mouseDown","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mouseMove","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mouseMoveG","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mouseUpG","args":[{"name":"evt","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"evt","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"newWidth","args":[{"name":"wid","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"wid","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"preventGlobalMouseEvents","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":""},{"name":"restoreGlobalMouseEvents","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"SortDirective","id":"directive-SortDirective-e96426526a9b8e072b48aacb37785d089f0914e2bbfea93765548c7957cec11d1087b3aff0315272317e2a8351c54eefe8f13a9dad88657882f9b98199afb4a7","file":"projects/ng-base/shared/directives/sort.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ElementRef, HostListener, Inject, Input, Renderer2 } from \'@angular/core\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { Sort } from \'../classes/sort.class\';\\n\\n@Directive({\\n  selector: \'[baseSort]\',\\n})\\nexport class SortDirective {\\n  @Input() lcSort: Array<any>;\\n  constructor(private renderer: Renderer2, private targetElem: ElementRef, @Inject(DOCUMENT) document: Document) {}\\n\\n  /**\\n   * Sorts columns on click\\n   */\\n  @HostListener(\'click\')\\n  sortColumn(): void {\\n    const items = document.getElementsByTagName(\'th\');\\n    for (let i = 0; i < items.length; i++) {\\n      items[i].classList.remove(\'asc\');\\n      items[i].classList.remove(\'desc\');\\n    }\\n\\n    const sort = new Sort();\\n\\n    const elem = this.targetElem.nativeElement;\\n\\n    const order = elem.getAttribute(\'data-order\');\\n\\n    const type = elem.getAttribute(\'data-type\');\\n\\n    const property = elem.getAttribute(\'data-name\');\\n\\n    if (order === \'desc\') {\\n      this.lcSort.sort(sort.startSort(property, order, type));\\n      elem.setAttribute(\'data-order\', \'asc\');\\n      elem.classList.remove(\'desc\');\\n      elem.classList.add(\'asc\');\\n    } else {\\n      this.lcSort.sort(sort.startSort(property, order, type));\\n      elem.setAttribute(\'data-order\', \'desc\');\\n      elem.classList.remove(\'asc\');\\n      elem.classList.add(\'desc\');\\n    }\\n  }\\n}\\n","selector":"[baseSort]","providers":[],"inputsClass":[{"name":"lcSort","deprecated":false,"deprecationMessage":"","line":9,"type":"Array<any>","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSorts columns on click\\n","description":"<p>Sorts columns on click</p>\\n","line":16}],"propertiesClass":[],"methodsClass":[{"name":"sortColumn","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSorts columns on click\\n","description":"<p>Sorts columns on click</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'click\'"}]}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":""},{"name":"targetElem","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"targetElem","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}],"components":[{"name":"BaseCmsComponent","id":"component-BaseCmsComponent-6f008e919b45f8c21a6e65b761b1d589ac46c3baf2ba344884e7e49f026cada18c8dd0bbabd99502708053cda505225a19816fb65ac85d60685ac0b1f1896785","file":"projects/ng-base/base-cms/pages/base-cms/base-cms.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-base-cms","styleUrls":["./base-cms.component.scss"],"styles":[],"templateUrl":["./base-cms.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"meta","deprecated":false,"deprecationMessage":"","type":"GraphQLMeta","optional":false,"description":"","line":12},{"name":"modelName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"moduleConfig","deprecated":false,"deprecationMessage":"","type":"BaseCMSModuleConfig","optional":false,"description":"","line":18,"decorators":[{"name":"Inject","stringifiedArguments":"BASE_CMS_MODULE_CONFIG"}],"modifierKind":[123]},{"name":"types","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"GraphqlCrudType[]","optional":false,"description":"","line":15}],"methodsClass":[{"name":"getTypeByModelName","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the model name is set and the types are set, then return the type that matches the model name\\n\\n","description":"<p>If the model name is set and the types are set, then return the type that matches the model name</p>\\n","jsdoctags":[{"tagName":{"pos":3372,"end":3379,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The type object that matches the model name.</p>\\n"}]},{"name":"idSelected","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the id is truthy, navigate to the id, otherwise navigate to the parent route\\n\\n","description":"<p>If the id is truthy, navigate to the id, otherwise navigate to the parent route</p>\\n","jsdoctags":[{"name":{"pos":4911,"end":4913,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4905,"end":4910,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The id of the selected item.</li>\\n</ul>\\n"}]},{"name":"init","args":[],"optional":false,"returnType":"Promise<GraphqlCrudType[]>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt returns a promise that resolves to an array of GraphqlCrudType objects\\n\\n","description":"<p>It returns a promise that resolves to an array of GraphqlCrudType objects</p>\\n","jsdoctags":[{"tagName":{"pos":1693,"end":1700,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The types that are available to the user.</p>\\n"}]},{"name":"isCreatePossible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the type exists, return the create property of the type, otherwise return false.\\n\\n","description":"<p>If the type exists, return the create property of the type, otherwise return false.</p>\\n","jsdoctags":[{"tagName":{"pos":4129,"end":4136,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A boolean value.</p>\\n"}]},{"name":"isDeletePossible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the type is defined, return the delete property of the type, otherwise return false\\n\\n","description":"<p>If the type is defined, return the delete property of the type, otherwise return false</p>\\n","jsdoctags":[{"tagName":{"pos":4652,"end":4659,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A boolean value.</p>\\n"}]},{"name":"isUpdatePossible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the model name is found in the type map, return the update property of the type object\\n\\n","description":"<p>If the model name is found in the type map, return the update property of the type object</p>\\n","jsdoctags":[{"tagName":{"pos":4392,"end":4399,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A boolean value.</p>\\n"}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[131]},{"name":"onCreateModeChanged","args":[{"name":"createMode","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen the createModeChanged event is emitted, if the createMode is true, navigate to the new route\\n\\nnot.\\n","description":"<p>When the createModeChanged event is emitted, if the createMode is true, navigate to the new route</p>\\n<p>not.</p>\\n","jsdoctags":[{"name":{"pos":3757,"end":3767,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"createMode"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":3751,"end":3756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>boolean - This is a boolean value that indicates whether the user is in create mode or\\nnot.</li>\\n</ul>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject, OnInit } from \'@angular/core\';\\nimport { AuthService, BasicUser, GraphqlCrudType, GraphQLMeta, GraphQLMetaService } from \'@lenne.tech/ng-base/shared\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { BASE_CMS_MODULE_CONFIG, BaseCMSModuleConfig } from \'../../interfaces/base-cms-module-config.interface\';\\n\\n@Component({\\n  selector: \'app-base-cms\',\\n  templateUrl: \'./base-cms.component.html\',\\n  styleUrls: [\'./base-cms.component.scss\'],\\n})\\nexport class BaseCmsComponent implements OnInit {\\n  meta: GraphQLMeta;\\n  modelName: string;\\n  id: string;\\n  types: GraphqlCrudType[] = [];\\n\\n  constructor(\\n    @Inject(BASE_CMS_MODULE_CONFIG) public moduleConfig: BaseCMSModuleConfig,\\n    private graphQLMetaService: GraphQLMetaService,\\n    private route: ActivatedRoute,\\n    private router: Router,\\n    private authService: AuthService\\n  ) {\\n    this.route.params.subscribe((value) => {\\n      if (value[\'modelName\']) {\\n        const restricted = this.moduleConfig.modelConfig[value[\'modelName\']]?.restricted;\\n        const excluded = this.moduleConfig.modelConfig[value[\'modelName\']]?.excluded;\\n        if ((restricted !== null && !restricted) || (excluded !== null && !excluded)) {\\n          this.modelName = value[\'modelName\'];\\n        } else {\\n          this.init().then((types: GraphqlCrudType[]) => {\\n            this.router.navigate([\'../\' + types[0].name.toLowerCase()], { relativeTo: this.route });\\n          });\\n        }\\n      }\\n\\n      if (value[\'id\']) {\\n        this.id = value[\'id\'];\\n      }\\n    });\\n  }\\n\\n  async ngOnInit() {\\n    await this.init();\\n  }\\n\\n  /**\\n   * It returns a promise that resolves to an array of GraphqlCrudType objects\\n   *\\n   * @returns The types that are available to the user.\\n   */\\n  init(): Promise<GraphqlCrudType[]> {\\n    return new Promise((resolve, reject) => {\\n      this.graphQLMetaService.getMeta().subscribe((meta) => {\\n        this.meta = meta;\\n\\n        if (this.route.snapshot?.params?.[\'modelName\']) {\\n          this.modelName = this.route.snapshot?.params?.[\'modelName\'];\\n        }\\n\\n        if (this.route.snapshot?.params?.[\'id\']) {\\n          this.id = this.route.snapshot?.params?.[\'id\'];\\n        }\\n\\n        const types = meta.getTypes();\\n\\n        // Check for excluded types\\n        const filteredTypes = types.filter((e) => !this.moduleConfig?.modelConfig[e.name.toLowerCase()]?.excluded);\\n\\n        // Check for restricted types\\n        this.types = filteredTypes.filter((e) => {\\n          if (this.moduleConfig?.modelConfig[e.name.toLowerCase()]?.restricted) {\\n            if (!this.authService?.currentUser) {\\n              return false;\\n            }\\n            const user = this.authService?.currentUser;\\n            const mappedUser = BasicUser.map(user);\\n\\n            return mappedUser?.hasAllRoles(this.moduleConfig?.modelConfig[e.name.toLowerCase()]?.roles);\\n          } else {\\n            return true;\\n          }\\n        });\\n\\n        if (this.moduleConfig?.logging) {\\n          console.log(\'BaseCmsComponent::init->types\', this.types);\\n        }\\n\\n        resolve(this.types);\\n\\n        if (!this.modelName && this.types) {\\n          this.router.navigate([\'./\' + this.types[0].name.toLowerCase()], { relativeTo: this.route });\\n        }\\n      });\\n    });\\n  }\\n\\n  /**\\n   * If the model name is set and the types are set, then return the type that matches the model name\\n   *\\n   * @returns The type object that matches the model name.\\n   */\\n  getTypeByModelName() {\\n    if (this.modelName && this.types) {\\n      return this.types.find((e) => e.name.toLowerCase() === this.modelName.toLowerCase());\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  /**\\n   * When the createModeChanged event is emitted, if the createMode is true, navigate to the new route\\n   *\\n   * @param createMode - boolean - This is a boolean value that indicates whether the user is in create mode or\\n   * not.\\n   */\\n  onCreateModeChanged(createMode: boolean) {\\n    if (createMode) {\\n      this.router.navigate([\'./\' + \'neu\'], { relativeTo: this.route });\\n    }\\n  }\\n\\n  /**\\n   * If the type exists, return the create property of the type, otherwise return false.\\n   *\\n   * @returns A boolean value.\\n   */\\n  isCreatePossible(): boolean {\\n    const type = this.getTypeByModelName();\\n    return type ? type.create : false;\\n  }\\n\\n  /**\\n   * If the model name is found in the type map, return the update property of the type object\\n   *\\n   * @returns A boolean value.\\n   */\\n  isUpdatePossible(): boolean {\\n    const type = this.getTypeByModelName();\\n    return type ? type.update : false;\\n  }\\n\\n  /**\\n   * If the type is defined, return the delete property of the type, otherwise return false\\n   *\\n   * @returns A boolean value.\\n   */\\n  isDeletePossible(): boolean {\\n    const type = this.getTypeByModelName();\\n    return type ? type.delete : false;\\n  }\\n\\n  /**\\n   * If the id is truthy, navigate to the id, otherwise navigate to the parent route\\n   *\\n   * @param id - The id of the selected item.\\n   */\\n  idSelected(id: string) {\\n    if (id) {\\n      this.router.navigate([\'./\' + id], { relativeTo: this.route });\\n    } else {\\n      this.router.navigate([\'..\'], { relativeTo: this.route });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".active {\\n  color: var(--bs-primary) !important;\\n  background-color: rgba(var(--bs-primary-rgb), 0.2) !important;\\n  font-weight: 700;\\n}\\n\\n.nav-link {\\n  color: var(--bs-body-color);\\n}\\n\\n.sidebar {\\n  box-shadow: rgb(112 144 176 / 8%) 14px 17px 40px 4px;\\n  transition: all 0.2s linear 0s;\\n  z-index: 99;\\n}\\n\\n.main {\\n  display: flex;\\n  flex-direction: row;\\n  overflow: hidden;\\n  height: 100%;\\n\\n  .sidebar {\\n    flex: 1 0 22%;\\n    max-width: 300px;\\n  }\\n\\n  .sidebar-content {\\n    flex-grow: 999;\\n    overflow-y: auto;\\n    background-color: #f5f7fe;\\n  }\\n}\\n\\n.nav-flush .nav-link {\\n  border-radius: 0;\\n}\\n","styleUrl":"./base-cms.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"moduleConfig","type":"BaseCMSModuleConfig","deprecated":false,"deprecationMessage":""},{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"moduleConfig","type":"BaseCMSModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"main\\">\\n  <div class=\\"sidebar\\">\\n    <div class=\\"d-flex flex-column flex-shrink-0 p-3 h-100\\">\\n      <ng-container *ngIf=\\"moduleConfig.branding\\">\\n        <a href=\\"/\\" class=\\"d-flex flex-column align-items-start mb-3 mt-3 me-md-auto link-dark text-decoration-none\\">\\n          <span class=\\"d-block fs-4\\"><b class=\\"text-primary\\">Base</b>CMS</span>\\n          <small class=\\"fw-lighter\\">The auto generated GraphQL CMS</small>\\n        </a>\\n        <hr />\\n      </ng-container>\\n      <ul class=\\"nav nav-pills flex-column mb-auto\\" *ngIf=\\"types\\">\\n        <li class=\\"nav-item\\" *ngFor=\\"let type of types\\">\\n          <a\\n            class=\\"nav-link\\"\\n            aria-current=\\"page\\"\\n            [routerLink]=\\"(id ? \'../../\' : \'../\') + type?.name?.toLowerCase()\\"\\n            [ngClass]=\\"{ active: type?.name?.toLowerCase() === this.modelName?.toLowerCase() }\\"\\n          >\\n            {{\\n              moduleConfig?.modelConfig[type?.name?.toLowerCase()]?.plural\\n                ? moduleConfig?.modelConfig[type?.name?.toLowerCase()]?.plural\\n                : moduleConfig?.modelConfig[type?.name?.toLowerCase()]?.label\\n                ? moduleConfig?.modelConfig[type?.name?.toLowerCase()]?.label\\n                : type.name + \'s\'\\n            }}\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\"sidebar-content\\">\\n    <div class=\\"p-5\\">\\n      <base-model-table\\n        [config]=\\"moduleConfig?.modelConfig[modelName?.toLowerCase()]\\"\\n        [fieldConfig]=\\"moduleConfig?.fieldConfig[modelName?.toLowerCase()] || {}\\"\\n        [modelName]=\\"modelName\\"\\n        [objectId]=\\"id !== \'neu\' ? id : \'\'\\"\\n        [createMode]=\\"id === \'neu\'\\"\\n        (createModeChanged)=\\"onCreateModeChanged($event)\\"\\n        (idSelected)=\\"idSelected($event)\\"\\n        [create]=\\"isCreatePossible()\\"\\n        [update]=\\"isUpdatePossible()\\"\\n        [delete]=\\"isDeletePossible()\\"\\n      ></base-model-table>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"BreadcrumbComponent","id":"component-BreadcrumbComponent-b75269357311de02af1df762c5058fb532cfa2c403018958d8e25aba054f9775e0dac78ff0bb15fb4ee3f0a6b16539ba551eff8c4628f472c13d033ec633cb5e","file":"projects/ng-base/base-components/components/breadcrumb/breadcrumb.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-breadcrumb","styleUrls":["./breadcrumb.component.scss"],"styles":[],"templateUrl":["./breadcrumb.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"breadcrumbs$","deprecated":false,"deprecationMessage":"","type":"Observable<Breadcrumb[]>","optional":false,"description":"","line":12}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { Breadcrumb, BreadcrumbService } from \'@lenne.tech/ng-base/shared\';\\n\\nimport { Observable } from \'rxjs\';\\n\\n@Component({\\n  selector: \'base-breadcrumb\',\\n  templateUrl: \'./breadcrumb.component.html\',\\n  styleUrls: [\'./breadcrumb.component.scss\'],\\n})\\nexport class BreadcrumbComponent {\\n  breadcrumbs$: Observable<Breadcrumb[]>;\\n\\n  constructor(private readonly breadcrumbService: BreadcrumbService) {\\n    this.breadcrumbs$ = breadcrumbService.breadcrumbsObservable;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"ul {\\n  & {\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n  }\\n\\n  li {\\n    & {\\n      display: inline;\\n    }\\n\\n    &:before {\\n      content: \'>\';\\n      margin: 0 6px;\\n    }\\n\\n    &:first-child:before {\\n      content: \'\';\\n      margin: 0;\\n    }\\n  }\\n}\\n","styleUrl":"./breadcrumb.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"breadcrumbService","type":"BreadcrumbService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"breadcrumbService","type":"BreadcrumbService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<ul class=\\"pt-3\\">\\n  <li *ngFor=\\"let breadcrumb of breadcrumbs$ | async\\">\\n    <a [routerLink]=\\"breadcrumb.url\\">{{ breadcrumb.label }}</a>\\n  </li>\\n</ul>\\n"},{"name":"CheckboxComponent","id":"component-CheckboxComponent-43f9e29e43f094e463f87834dbbdc1b355d72e66b67431992bd696f2e05ee0c0171cbb504b1979f0d555b6a2e5f70481545c2160e880c3250dd4029684c70622","file":"projects/ng-base/base-components/components/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"control","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","line":12,"type":"string | number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'base-checkbox\',\\n  templateUrl: \'./checkbox.component.html\',\\n  styleUrls: [\'./checkbox.component.scss\'],\\n})\\nexport class CheckboxComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() value: string | number;\\n  @Input() control: any;\\n  @Input() required = false;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n","styleUrl":"./checkbox.component.scss"}],"stylesData":"","templateData":"<div class=\\"form-check\\">\\n  <input\\n    class=\\"form-check-input\\"\\n    type=\\"checkbox\\"\\n    [formControl]=\\"control\\"\\n    [required]=\\"required\\"\\n    [value]=\\"value\\"\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n  />\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\">\\n    <ng-container *ngIf=\\"label\\">\\n      {{ label }}\\n    </ng-container>\\n    <ng-content></ng-content>\\n  </label>\\n\\n  <div class=\\"invalid-feedback ms-0 m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n  </div>\\n</div>\\n"},{"name":"ForgotPasswordComponent","id":"component-ForgotPasswordComponent-df5ae2e984882ecef6cb1e3fa7ce4534a3537cc0096a7a91a524230860fde6178de010750401ba03bea59bfb9680dfe6f7aa4d1dfb54e71019f95a3f194cc3b0","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-forgot-password","styleUrls":["./forgot-password.component.scss"],"styles":[],"templateUrl":["./forgot-password.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":12},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14}],"methodsClass":[{"name":"createForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate login form\\n","description":"<p>Create login form</p>\\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit form\\n","description":"<p>Submit form</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { FormsService, UserService } from \'@lenne.tech/ng-base/shared\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'base-forgot-password\',\\n  templateUrl: \'./forgot-password.component.html\',\\n  styleUrls: [\'./forgot-password.component.scss\'],\\n})\\nexport class ForgotPasswordComponent implements OnInit {\\n  form: FormGroup;\\n  error: string;\\n  loading: boolean;\\n\\n  constructor(private formsService: FormsService, private userService: UserService, private router: Router) {}\\n\\n  ngOnInit(): void {\\n    this.createForm();\\n  }\\n\\n  /**\\n   * Create login form\\n   */\\n  createForm() {\\n    this.form = new FormGroup({\\n      email: new FormControl(\'\', [Validators.required, Validators.email]),\\n    });\\n  }\\n\\n  /**\\n   * Submit form\\n   */\\n  submit() {\\n    this.loading = true;\\n\\n    if (this.form.invalid) {\\n      this.formsService.validateAllFormFields(this.form);\\n      this.loading = false;\\n      return;\\n    }\\n\\n    this.userService.requestPasswordResetMail(this.form.get(\'email\').value).subscribe({\\n      next: (response) => {\\n        if (response) {\\n          this.router.navigate([\'/\']);\\n        } else {\\n          this.error = \'Etwas ist schiefgelaufen. Bitte probiere es später erneut.\';\\n        }\\n        this.loading = false;\\n      },\\n      error: () => {\\n        this.error = \'Etwas ist schiefgelaufen. Bitte probiere es später erneut.\';\\n        this.loading = false;\\n      },\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../node_modules/bootstrap/scss/functions\';\\n@import \'../../../../../node_modules/bootstrap/scss/mixins\';\\n@import \'../../../../../node_modules/bootstrap/scss/variables\';\\n\\n.forgot-container {\\n  width: 100%;\\n  padding: 20px 0;\\n\\n  @include media-breakpoint-up(md) {\\n    max-width: 400px;\\n  }\\n}\\n","styleUrl":"./forgot-password.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"d-flex justify-content-center align-items-center h-100 py-5\\">\\n  <div class=\\"d-flex flex-column forgot-container\\">\\n    <div class=\\"container\\">\\n      <form [formGroup]=\\"form\\">\\n        <div class=\\"alert alert-danger\\" role=\\"alert\\" *ngIf=\\"error\\">\\n          {{ error }}\\n        </div>\\n        <base-input\\n          [id]=\\"\'email\'\\"\\n          [name]=\\"\'email\'\\"\\n          [label]=\\"\'E-Mail Adresse\'\\"\\n          [type]=\\"\'email\'\\"\\n          [autocomplete]=\\"\'email\'\\"\\n          [control]=\\"form.get(\'email\')\\"\\n        ></base-input>\\n        <div class=\\"d-grid gap-2 text-center\\">\\n          <button class=\\"btn btn-primary\\" (click)=\\"submit()\\" *ngIf=\\"!loading\\">E-Mail senden</button>\\n          <button class=\\"btn btn-primary\\" type=\\"button\\" disabled *ngIf=\\"loading\\">\\n            <span class=\\"spinner-border spinner-border-sm\\" role=\\"status\\" aria-hidden=\\"true\\"></span>\\n            Loading...\\n          </button>\\n          <hr />\\n          <a routerLink=\\"../login\\">Bereits ein Konto? Dann logge Dich hier ein!</a>\\n          <a routerLink=\\"../registrieren\\">Noch kein Konto? Dann registiere Dich jetzt!</a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"InputComponent","id":"component-InputComponent-704873cff6977ab34e676e4b00856202509974efcd117a78ad8fe2783317344e0f66168d8380621e3818208820ea03638f98d50d9bd3c8cc662e569a82ac0228","file":"projects/ng-base/base-components/components/input/input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-input","styleUrls":["./input.component.scss"],"styles":[],"templateUrl":["./input.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"control","deprecated":false,"deprecationMessage":"","line":15,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"tabIndex","deprecated":false,"deprecationMessage":"","line":14,"type":"number","decorators":[]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'base-input\',\\n  templateUrl: \'./input.component.html\',\\n  styleUrls: [\'./input.component.scss\'],\\n})\\nexport class InputComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() placeholder?: string = \'\';\\n  @Input() autocomplete?: string;\\n  @Input() tabIndex?: number;\\n  @Input() control: any;\\n  @Input() type = \'text\';\\n  @Input() required = false;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n","styleUrl":"./input.component.scss"}],"stylesData":"","templateData":"<div class=\\"form-group mb-3\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n  <input\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    class=\\"form-control\\"\\n    [type]=\\"type\\"\\n    [formControl]=\\"control\\"\\n    [required]=\\"required\\"\\n    [placeholder]=\\"placeholder\\"\\n    [autocomplete]=\\"autocomplete ?? null\\"\\n    [tabIndex]=\\"tabIndex ?? null\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n  />\\n\\n  <div class=\\"invalid-feedback m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n    <div *ngIf=\\"control?.errors?.[\'minlength\']\\">\\n      Die Mindestlänge für dieses Feld beträgt\\n      {{control.errors?.[\'minlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'maxlength\']\\">\\n      Die maximale Länge für dieses Feld beträgt\\n      {{control.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'email\']\\">Bitte eine gültige E-Mail Adresse angeben.</div>\\n    <div *ngIf=\\"control?.errors?.[\'matching\']\\">Die Passwörter müssen überein stimmen.</div>\\n  </div>\\n</div>\\n"},{"name":"LoadingBarComponent","id":"component-LoadingBarComponent-33b910d79e66606b4d7b8595599cb7fde988caa04b6e0a1a0dc55c9dcd7a5d9231cf937ec403b180d56295a836f8a76fd4f173637505b39d76b26f13dbe89069","file":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-loading-bar","styleUrls":["./loading-bar.component.scss"],"styles":[],"templateUrl":["./loading-bar.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'base-loading-bar\',\\n  templateUrl: \'./loading-bar.component.html\',\\n  styleUrls: [\'./loading-bar.component.scss\'],\\n})\\nexport class LoadingBarComponent {}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  --base-loading-bar-color: #f28c18;\\n  --base-loading-bar-height: 5px;\\n  --base-loading-bar-z-index: 999999999;\\n}\\n\\n.slider {\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  height: var(--base-loading-bar-height);\\n  overflow-x: hidden;\\n  z-index: var(--base-loading-bar-z-index);\\n  background-color: white;\\n}\\n\\n.line {\\n  position: absolute;\\n  opacity: 0.6;\\n  background: var(--base-loading-bar-color);\\n  width: 150%;\\n  height: var(--base-loading-bar-height);\\n}\\n\\n.subline {\\n  position: absolute;\\n  background: var(--base-loading-bar-color);\\n  height: var(--base-loading-bar-height);\\n}\\n\\n.inc {\\n  animation: increase 2s infinite;\\n}\\n\\n.dec {\\n  animation: decrease 2s 0.5s infinite;\\n}\\n\\n@keyframes increase {\\n  from {\\n    left: -5%;\\n    width: 5%;\\n  }\\n  to {\\n    left: 130%;\\n    width: 100%;\\n  }\\n}\\n\\n@keyframes decrease {\\n  from {\\n    left: -80%;\\n    width: 80%;\\n  }\\n  to {\\n    left: 110%;\\n    width: 10%;\\n  }\\n}\\n","styleUrl":"./loading-bar.component.scss"}],"stylesData":"","templateData":"<div class=\\"slider\\">\\n  <div class=\\"line\\"></div>\\n  <div class=\\"subline inc\\"></div>\\n  <div class=\\"subline dec\\"></div>\\n</div>\\n"},{"name":"LoginComponent","id":"component-LoginComponent-7c4f4ca7d31166e120cc9377fc866f3d633292882d654917eb024d700e9a79d4a99fb09acf01aaac8433000b1ac0e9a43d9bc457fd42db470327d8f9f60e70c2","file":"projects/ng-base/base-prototype/pages/login/login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-login","styleUrls":["./login.component.scss"],"styles":[],"templateUrl":["./login.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":12},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14}],"methodsClass":[{"name":"createForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate login form\\n","description":"<p>Create login form</p>\\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"scrollToTop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit login form\\n","description":"<p>Submit login form</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { FormsService, UserService } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-login\',\\n  templateUrl: \'./login.component.html\',\\n  styleUrls: [\'./login.component.scss\'],\\n})\\nexport class LoginComponent implements OnInit {\\n  form: FormGroup;\\n  error: string;\\n  loading: boolean;\\n\\n  constructor(private formsService: FormsService, private userService: UserService, private router: Router) {}\\n\\n  ngOnInit(): void {\\n    this.createForm();\\n  }\\n\\n  /**\\n   * Create login form\\n   */\\n  createForm() {\\n    this.form = new FormGroup({\\n      email: new FormControl(\'\', [Validators.required, Validators.email]),\\n      password: new FormControl(\'\', Validators.required),\\n    });\\n  }\\n\\n  /**\\n   * Submit login form\\n   */\\n  submit() {\\n    this.error = \'\';\\n    this.loading = true;\\n\\n    if (this.form.invalid) {\\n      this.formsService.validateAllFormFields(this.form);\\n      this.scrollToTop();\\n      this.loading = false;\\n      return;\\n    }\\n\\n    this.userService.login(this.form.value).subscribe({\\n      next: (response) => {\\n        if (response) {\\n          this.router.navigate([\'/main\']);\\n          this.form.reset();\\n        } else {\\n          this.error = \'Etwas ist schiefgelaufen. Bitte probiere es später erneut.\';\\n          this.scrollToTop();\\n        }\\n        this.loading = false;\\n      },\\n      error: (error) => {\\n        this.error = \'Etwas ist schiefgelaufen. Bitte probiere es später erneut.\';\\n\\n        // Wrong password\\n        if (error?.message?.includes(\'Unauthorized\')) {\\n          this.error = \'Dein Passwort ist leider falsch. Bitte überprüfe deine Eingabe!\';\\n        }\\n\\n        // User not found\\n        if (error?.message?.includes(\'Not user found\')) {\\n          this.error = \'Es konnte kein Konto mit der E-Mail gefunden werden. Bitte gib eine gültige E-Mail ein!\';\\n        }\\n\\n        this.scrollToTop();\\n        this.loading = false;\\n      },\\n    });\\n  }\\n\\n  scrollToTop() {\\n    window.scrollTo({ top: 0, behavior: \'smooth\' });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../node_modules/bootstrap/scss/functions\';\\n@import \'../../../../../node_modules/bootstrap/scss/mixins\';\\n@import \'../../../../../node_modules/bootstrap/scss/variables\';\\n\\n.login-container {\\n  width: 100%;\\n  padding: 20px 0;\\n\\n  @include media-breakpoint-up(md) {\\n    max-width: 400px;\\n  }\\n}\\n","styleUrl":"./login.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"d-flex justify-content-center align-items-center h-100 py-5\\">\\n  <div class=\\"d-flex flex-column login-container\\">\\n    <div class=\\"container\\">\\n      <form [formGroup]=\\"form\\">\\n        <div class=\\"alert alert-danger\\" role=\\"alert\\" *ngIf=\\"error\\">\\n          {{ error }}\\n        </div>\\n        <base-input\\n          [id]=\\"\'email\'\\"\\n          [name]=\\"\'email\'\\"\\n          [label]=\\"\'E-Mail Adresse\'\\"\\n          [type]=\\"\'email\'\\"\\n          [control]=\\"form.get(\'email\')\\"\\n          [autocomplete]=\\"\'email\'\\"\\n        ></base-input>\\n        <base-input\\n          [id]=\\"\'password\'\\"\\n          [name]=\\"\'password\'\\"\\n          [label]=\\"\'Passwort\'\\"\\n          [type]=\\"\'password\'\\"\\n          [autocomplete]=\\"\'current-password\'\\"\\n          [control]=\\"form.get(\'password\')\\"\\n        ></base-input>\\n        <div class=\\"d-grid gap-2 text-center\\">\\n          <button class=\\"btn btn-primary\\" (click)=\\"submit()\\" *ngIf=\\"!loading\\">Einloggen</button>\\n          <button class=\\"btn btn-primary\\" type=\\"button\\" disabled *ngIf=\\"loading\\">\\n            <span class=\\"spinner-border spinner-border-sm\\" role=\\"status\\" aria-hidden=\\"true\\"></span>\\n            Loading...\\n          </button>\\n          <hr />\\n          <a routerLink=\\"../passwort-vergessen\\">Passwort vergessen</a>\\n          <a routerLink=\\"../registrieren\\">Noch kein Konto? Dann registiere Dich jetzt!</a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"ModelFormComponent","id":"component-ModelFormComponent-518cdcdbdbb95468a0cf983e51f1c3627fac476a8747c6b698ff4b92ee91a5ca8cbafcdff99757b10b7c95076718b021e973d5ef1d13664b823de7b2fd41247c","file":"projects/ng-base/base-components/components/model-form/model-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-model-form","styleUrls":["./model-form.component.scss"],"styles":[],"templateUrl":["./model-form.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":23,"type":"any","decorators":[]},{"name":"delete","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":20,"type":"string | null","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"logging","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]},{"name":"modelName","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]}],"outputsClass":[{"name":"finished","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter"}],"propertiesClass":[{"name":"fields","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":30},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":28},{"name":"keys","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":32},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"meta","deprecated":false,"deprecationMessage":"","type":"GraphQLMeta","optional":false,"description":"","line":27},{"name":"operation","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31}],"methodsClass":[{"name":"capitalizeFirstLetter","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":192,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a string, capitalizes the first letter, and returns the modified string\\n\\n","description":"<p>It takes a string, capitalizes the first letter, and returns the modified string</p>\\n","jsdoctags":[{"name":{"pos":5447,"end":5452,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5441,"end":5446,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The string to capitalize.</li>\\n</ul>\\n"},{"tagName":{"pos":5487,"end":5494,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The first letter of the string is being capitalized and the rest of the string is being returned.</p>\\n"}]},{"name":"createForm","args":[{"name":"fields","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a collection of GraphQL types and creates a form group with a form control for each type\\n\\n","description":"<p>It takes a collection of GraphQL types and creates a form group with a form control for each type</p>\\n","jsdoctags":[{"name":{"pos":4191,"end":4197,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fields"},"type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":"","tagName":{"pos":4185,"end":4190,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>IGraphQLTypeCollection</li>\\n</ul>\\n"}]},{"name":"createRequestObject","args":[{"name":"fields","type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a GraphQL type collection and returns an array of strings and objects\\n\\nintrospection query.\\n","description":"<p>It takes a GraphQL type collection and returns an array of strings and objects</p>\\n<p>introspection query.</p>\\n","jsdoctags":[{"name":{"pos":3432,"end":3438,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fields"},"type":"IGraphQLTypeCollection","deprecated":false,"deprecationMessage":"","tagName":{"pos":3426,"end":3431,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>IGraphQLTypeCollection - This is the object that is returned from the\\nintrospection query.</li>\\n</ul>\\n"},{"tagName":{"pos":3543,"end":3550,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of strings and objects.</p>\\n"}]},{"name":"deleteObject","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt calls the graphQLService to delete the object with the id of the object that is currently being edited\\n","description":"<p>It calls the graphQLService to delete the object with the id of the object that is currently being edited</p>\\n"},{"name":"getKeysFromSubObject","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getObjectById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes an id, and then calls the graphQLService to get the object from the database\\n\\n","description":"<p>It takes an id, and then calls the graphQLService to get the object from the database</p>\\n","jsdoctags":[{"name":{"pos":2459,"end":2461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2453,"end":2458,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The id of the object to be loaded</li>\\n</ul>\\n"}]},{"name":"init","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n> If the model name and meta data are present, set the operation to update or create, get the fields from the meta\\ndata, create the form, and if the value is present, patch the form with the value\\n","description":"<blockquote>\\n<p>If the model name and meta data are present, set the operation to update or create, get the fields from the meta\\ndata, create the form, and if the value is present, patch the form with the value</p>\\n</blockquote>\\n"},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":211,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes the form, validates it, and then sends it to the GraphQL server\\n\\n","description":"<p>It takes the form, validates it, and then sends it to the GraphQL server</p>\\n","jsdoctags":[{"tagName":{"pos":6068,"end":6075,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The id of the newly created or updated object.</p>\\n"}]},{"name":"transformToControl","args":[{"name":"control","type":"AbstractControl | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormControl","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes an AbstractControl and returns a FormControl\\n\\n","description":"<p>It takes an AbstractControl and returns a FormControl</p>\\n","jsdoctags":[{"name":{"pos":5786,"end":5793,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"type":"AbstractControl | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":5780,"end":5785,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>AbstractControl | null | undefined</li>\\n</ul>\\n"},{"tagName":{"pos":5837,"end":5844,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A FormControl</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from \'@angular/core\';\\nimport {\\n  FormsService,\\n  GraphQLMeta,\\n  GraphQLMetaService,\\n  GraphQLRequestType,\\n  GraphQLService,\\n} from \'@lenne.tech/ng-base/shared\';\\nimport { AbstractControl, FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { IGraphQLTypeCollection } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-model-form\',\\n  templateUrl: \'./model-form.component.html\',\\n  styleUrls: [\'./model-form.component.scss\'],\\n})\\nexport class ModelFormComponent implements OnInit, OnChanges {\\n  @Input() modelName: string;\\n  @Input() label: string;\\n  @Input() id: string | null;\\n  @Input() delete = true;\\n  @Input() logging = false;\\n  @Input() config: any = {};\\n\\n  @Output() finished = new EventEmitter();\\n\\n  meta: GraphQLMeta;\\n  form: FormGroup;\\n  loading = false;\\n  fields: any;\\n  operation: string;\\n  keys: string[] = [];\\n\\n  constructor(\\n    private graphQLMetaService: GraphQLMetaService,\\n    private graphQLService: GraphQLService,\\n    private formsService: FormsService\\n  ) {}\\n\\n  ngOnInit(): void {\\n    this.graphQLMetaService.getMeta().subscribe((meta) => {\\n      this.meta = meta;\\n\\n      if (this.modelName) {\\n        this.init();\\n      }\\n    });\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes[\'modelName\'] || changes[\'value\']) {\\n      this.init();\\n    }\\n  }\\n\\n  /**\\n   * > If the model name and meta data are present, set the operation to update or create, get the fields from the meta\\n   * data, create the form, and if the value is present, patch the form with the value\\n   */\\n  init() {\\n    if (this.modelName && this.meta) {\\n      this.operation = this.id ? \'update\' : \'create\';\\n      this.fields = this.meta.getArgs(this.operation + this.capitalizeFirstLetter(this.modelName), {\\n        type: GraphQLRequestType.MUTATION,\\n      });\\n      this.fields = this.fields[\'input\'] as any;\\n      this.keys = Object.keys(this.fields);\\n\\n      if (this.logging) {\\n        console.log(\'ModelFormComponent::init->fields\', this.fields);\\n        console.log(\'ModelFormComponent::init->keys\', this.keys);\\n      }\\n\\n      this.form = this.createForm(this.fields);\\n\\n      if (this.id) {\\n        this.getObjectById(this.id);\\n      }\\n    }\\n  }\\n\\n  getKeysFromSubObject(key: string) {\\n    return Object.keys(this.fields[key]);\\n  }\\n\\n  /**\\n   * It takes an id, and then calls the graphQLService to get the object from the database\\n   *\\n   * @param id - The id of the object to be loaded\\n   */\\n  getObjectById(id: string) {\\n    if (this.logging) {\\n      console.log(\'ModelFormComponent::getObjectById->id\', id);\\n      console.log(\'ModelFormComponent::getObjectById->requestFields\', this.createRequestObject(this.fields));\\n    }\\n\\n    this.graphQLService\\n      .graphQl(\'get\' + this.capitalizeFirstLetter(this.modelName), {\\n        arguments: { id },\\n        fields: this.createRequestObject(this.fields),\\n        type: GraphQLRequestType.QUERY,\\n      })\\n      .subscribe({\\n        next: (value) => {\\n          if (this.logging) {\\n            console.log(\'ModelFormComponent::get->value\', value);\\n          }\\n\\n          this.form.patchValue({ ...{}, ...value });\\n        },\\n        error: (err) => {\\n          console.error(\'Error on load object\', err);\\n          this.finished.emit(false);\\n        },\\n      });\\n  }\\n\\n  /**\\n   * It takes a GraphQL type collection and returns an array of strings and objects\\n   *\\n   * @param fields - IGraphQLTypeCollection - This is the object that is returned from the\\n   * introspection query.\\n   * @returns An array of strings and objects.\\n   */\\n  createRequestObject(fields: IGraphQLTypeCollection) {\\n    const requestFields: any = [];\\n\\n    for (const [key, value] of Object.entries(fields)) {\\n      if (fields[key]?.type) {\\n        requestFields.push(key);\\n      } else {\\n        const subkeys = this.createRequestObject(fields[key] as IGraphQLTypeCollection);\\n        const resultObject = {};\\n        resultObject[key] = subkeys;\\n        requestFields.push(resultObject);\\n      }\\n    }\\n\\n    return requestFields;\\n  }\\n\\n  /**\\n   * It takes a collection of GraphQL types and creates a form group with a form control for each type\\n   *\\n   * @param fields - IGraphQLTypeCollection\\n   */\\n  createForm(fields: IGraphQLTypeCollection) {\\n    const group: any = {};\\n\\n    for (const [key, value] of Object.entries(fields)) {\\n      if (fields[key]?.type) {\\n        group[key] = new FormControl(\\n          fields[key]?.type === \'Float\' ? 0 : \'\',\\n          value.isRequired ? Validators.required : []\\n        );\\n      } else {\\n        group[key] = this.createForm(fields[key] as IGraphQLTypeCollection);\\n      }\\n    }\\n\\n    return new FormGroup(group);\\n  }\\n\\n  /**\\n   * It calls the graphQLService to delete the object with the id of the object that is currently being edited\\n   */\\n  deleteObject() {\\n    if (confirm(\'Möchtest du das Objekt wirklich löschen?\')) {\\n      this.graphQLService\\n        .graphQl(\'delete\' + this.capitalizeFirstLetter(this.modelName), {\\n          arguments: { id: this.id },\\n          fields: [\'id\'],\\n          type: GraphQLRequestType.MUTATION,\\n        })\\n        .subscribe({\\n          next: (value) => {\\n            this.finished.emit(true);\\n          },\\n          error: (err) => {\\n            console.error(\'Error on delete object\', err);\\n          },\\n        });\\n    }\\n  }\\n\\n  /**\\n   * It takes a string, capitalizes the first letter, and returns the modified string\\n   *\\n   * @param value - The string to capitalize.\\n   * @returns The first letter of the string is being capitalized and the rest of the string is being returned.\\n   */\\n  capitalizeFirstLetter(value: string) {\\n    return value.charAt(0).toUpperCase() + value.slice(1);\\n  }\\n\\n  /**\\n   * It takes an AbstractControl and returns a FormControl\\n   *\\n   * @param control - AbstractControl | null | undefined\\n   * @returns A FormControl\\n   */\\n  transformToControl(control: AbstractControl | null | undefined) {\\n    return control as FormControl;\\n  }\\n\\n  /**\\n   * It takes the form, validates it, and then sends it to the GraphQL server\\n   *\\n   * @returns The id of the newly created or updated object.\\n   */\\n  submit() {\\n    this.loading = true;\\n    if (this.form.invalid) {\\n      this.formsService.validateAllFormFields(this.form as any);\\n      this.loading = false;\\n      return;\\n    }\\n\\n    if (this.operation === \'update\' && !this.id) {\\n      console.error(\'ID is missing for update!\');\\n      this.loading = false;\\n      return;\\n    }\\n\\n    if (this.logging) {\\n      console.log(\'ModelFormComponent::submit->formValue\', this.form.value);\\n    }\\n\\n    this.graphQLService\\n      .graphQl(this.operation + this.capitalizeFirstLetter(this.modelName), {\\n        arguments: this.operation === \'update\' ? { id: this.id, input: this.form.value } : { input: this.form.value },\\n        fields: [\'id\'],\\n        type: GraphQLRequestType.MUTATION,\\n      })\\n      .subscribe({\\n        next: (value) => {\\n          this.loading = false;\\n          this.finished.emit(true);\\n        },\\n        error: (err) => {\\n          console.error(\'Failed on \' + this.operation, err);\\n          this.loading = false;\\n        },\\n      });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./model-form.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""},{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":""},{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":""}],"line":32,"jsdoctags":[{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges"],"templateData":"<div class=\\"w-100\\" *ngIf=\\"form\\">\\n  <h2>\\n    {{ label ? label : capitalizeFirstLetter(modelName) }} {{ operation === \'update\' ? \'bearbeiten\' : \'erstellen\' }}\\n  </h2>\\n\\n  <form [formGroup]=\\"form\\">\\n    <base-model-form-sub [fields]=\\"fields\\" [config]=\\"config\\" [form]=\\"form\\"></base-model-form-sub>\\n\\n    <div class=\\"d-flex mt-4\\" [ngClass]=\\"id && delete ? \'justify-content-between\' : \'justify-content-end\'\\">\\n      <div *ngIf=\\"id && delete\\">\\n        <button class=\\"btn btn-danger\\" type=\\"button\\" (click)=\\"deleteObject()\\">Löschen</button>\\n      </div>\\n      <div>\\n        <button class=\\"btn btn-primary\\" type=\\"button\\" (click)=\\"submit()\\" *ngIf=\\"!loading\\">\\n          {{ operation === \'create\' ? \'Erstellen\' : \'Speichern\' }}\\n        </button>\\n        <button class=\\"btn btn-primary\\" type=\\"button\\" disabled *ngIf=\\"loading\\">\\n          <span class=\\"spinner-border spinner-border-sm\\" role=\\"status\\" aria-hidden=\\"true\\"></span>\\n          {{ operation === \'create\' ? \'Erstellen\' : \'Speichern\' }}...\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n"},{"name":"ModelFormSubComponent","id":"component-ModelFormSubComponent-6bfe6eb057a4f13108b34c2e85f11423448baabcfc7842d5eaf69178e1bced2c1dd54a7d477299df14e36f7aaf365bab19f122852b7c259b645ac02fbf108397","file":"projects/ng-base/base-components/components/model-form-sub/model-form-sub.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-model-form-sub","styleUrls":["./model-form-sub.component.scss"],"styles":[],"templateUrl":["./model-form-sub.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]},{"name":"fields","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":12,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"keys","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":15},{"name":"user","deprecated":false,"deprecationMessage":"","type":"BasicUser","optional":false,"description":"","line":16}],"methodsClass":[{"name":"capitalizeFirstLetter","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a string, capitalizes the first letter, and returns the new string\\n\\n","description":"<p>It takes a string, capitalizes the first letter, and returns the new string</p>\\n","jsdoctags":[{"name":{"pos":786,"end":791,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":780,"end":785,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The string that you want to capitalize the first letter of.</li>\\n</ul>\\n"},{"tagName":{"pos":860,"end":867,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The first letter of the string is being capitalized and the rest of the string is being returned.</p>\\n"}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"transformToControl","args":[{"name":"control","type":"AbstractControl | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormControl","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes an AbstractControl and returns a FormControl\\n\\n","description":"<p>It takes an AbstractControl and returns a FormControl</p>\\n","jsdoctags":[{"name":{"pos":1159,"end":1166,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"type":"AbstractControl | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":1153,"end":1158,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>AbstractControl | null | undefined</li>\\n</ul>\\n"},{"tagName":{"pos":1210,"end":1217,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A FormControl</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormControl } from \'@angular/forms\';\\nimport { AuthService, BasicUser } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-model-form-sub\',\\n  templateUrl: \'./model-form-sub.component.html\',\\n  styleUrls: [\'./model-form-sub.component.scss\'],\\n})\\nexport class ModelFormSubComponent implements OnInit {\\n  @Input() fields: any;\\n  @Input() form: any;\\n  @Input() config: any = {};\\n\\n  keys: string[] = [];\\n  user: BasicUser;\\n\\n  constructor(private authService: AuthService) {}\\n\\n  ngOnInit(): void {\\n    this.keys = Object.keys(this.fields);\\n    this.user = this.authService.currentUser;\\n  }\\n\\n  /**\\n   * It takes a string, capitalizes the first letter, and returns the new string\\n   *\\n   * @param value - The string that you want to capitalize the first letter of.\\n   * @returns The first letter of the string is being capitalized and the rest of the string is being returned.\\n   */\\n  capitalizeFirstLetter(value: string) {\\n    return value.charAt(0).toUpperCase() + value.slice(1);\\n  }\\n\\n  /**\\n   * It takes an AbstractControl and returns a FormControl\\n   *\\n   * @param control - AbstractControl | null | undefined\\n   * @returns A FormControl\\n   */\\n  transformToControl(control: AbstractControl | null | undefined) {\\n    return control as FormControl;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./model-form-sub.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"mt-3\\" *ngFor=\\"let key of keys\\">\\n  <ng-container *ngIf=\\"!fields[key]?.type && (fields[key]?.roles ? user?.hasAllRoles(fields[key]?.roles) : true)\\">\\n    <fieldset class=\\"border rounded-3 p-3\\">\\n      <legend class=\\"float-none w-auto px-3\\">\\n        {{ config[key]?.label ? config[key].label : capitalizeFirstLetter(key) }}\\n      </legend>\\n      <base-model-form-sub\\n        [fields]=\\"fields[key]\\"\\n        [config]=\\"config[key]?.fields || {}\\"\\n        [form]=\\"form.get(key)\\"\\n      ></base-model-form-sub>\\n    </fieldset>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\"fields[key]?.type && (fields[key]?.roles ? user?.hasAllRoles(fields[key]?.roles) : true)\\">\\n    <ng-container [ngSwitch]=\\"config[key]?.type ? config[key]?.type : fields[key]?.type\\">\\n      <ng-container *ngSwitchCase=\\"\'String\'\\">\\n        <ng-container *ngIf=\\"fields[key]?.isList && !config[key]?.exclude\\">\\n          <base-tags\\n            [id]=\\"key\\"\\n            [name]=\\"key\\"\\n            [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n            [placeholder]=\\"config[key]?.placeholder || \'\'\\"\\n            [control]=\\"transformToControl(form?.get(key))\\"\\n            [required]=\\"fields[key].isRequired\\"\\n          ></base-tags>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\"!fields[key]?.isList && !config[key]?.exclude\\">\\n          <base-input\\n            [id]=\\"key\\"\\n            [name]=\\"key\\"\\n            [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n            [placeholder]=\\"config[key]?.placeholder || \'\'\\"\\n            [type]=\\"\'text\'\\"\\n            [control]=\\"transformToControl(form?.get(key))\\"\\n            [required]=\\"fields[key].isRequired\\"\\n          ></base-input>\\n        </ng-container>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\"\'Image\'\\">\\n        <base-upload-image\\n          [id]=\\"key\\"\\n          [name]=\\"key\\"\\n          [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n          [control]=\\"transformToControl(form?.get(key))\\"\\n          [url]=\\"config[key]?.url\\"\\n          [path]=\\"config[key]?.path || \'/files/\'\\"\\n          [uploadPath]=\\"config[key]?.uploadPath || \'/files/upload\'\\"\\n          [deletePath]=\\"config[key]?.deletePath || \'/files/\'\\"\\n          [supportText]=\\"config[key]?.supportText || \'Unterstützte Formate: JPEG, JPG, PNG\'\\"\\n          [dragText]=\\"config[key]?.dragText || \'Drag & Drop\'\\"\\n          [validExtensions]=\\"config[key]?.validExtensions || [\'image/jpeg\', \'image/jpg\', \'image/png\']\\"\\n          [required]=\\"fields[key].isRequired\\"\\n        ></base-upload-image>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\"\'Reference\'\\">\\n        <base-refence-input\\n          [id]=\\"key\\"\\n          [name]=\\"key\\"\\n          [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n          [control]=\\"transformToControl(form?.get(key))\\"\\n          [method]=\\"config[key]?.method || \'find\'\\"\\n          [fields]=\\"config[key]?.fields || [\'id\', \'name\']\\"\\n          [valueField]=\\"config[key]?.valueField || \'id\'\\"\\n          [nameField]=\\"config[key]?.nameField || \'name\'\\"\\n          [required]=\\"fields[key].isRequired\\"\\n        ></base-refence-input>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\"\'Boolean\'\\">\\n        <base-checkbox\\n          [id]=\\"key\\"\\n          [name]=\\"key\\"\\n          [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n          [control]=\\"transformToControl(form?.get(key))\\"\\n          [required]=\\"fields[key].isRequired\\"\\n        ></base-checkbox>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\"\'Float\'\\">\\n        <base-input\\n          [id]=\\"key\\"\\n          [name]=\\"key\\"\\n          [type]=\\"\'number\'\\"\\n          [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n          [placeholder]=\\"config[key]?.placeholder || \'\'\\"\\n          [control]=\\"transformToControl(form?.get(key))\\"\\n          [required]=\\"fields[key].isRequired\\"\\n        ></base-input>\\n      </ng-container>\\n\\n      <ng-container *ngSwitchCase=\\"\'DateTime\'\\">\\n        <base-input\\n          [id]=\\"key\\"\\n          [name]=\\"key\\"\\n          [label]=\\"config[key]?.label ? config[key].label : capitalizeFirstLetter(key)\\"\\n          [placeholder]=\\"config[key]?.placeholder || \'\'\\"\\n          [type]=\\"\'datetime-local\'\\"\\n          [control]=\\"transformToControl(form?.get(key))\\"\\n          [required]=\\"fields[key].isRequired\\"\\n        ></base-input>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n</div>\\n"},{"name":"ModelTableComponent","id":"component-ModelTableComponent-9a3d2c211714146b356b07fe6c3407b79931fed9fbce8c9fa5699cb713c62be742e986185b71fb740cad5a5811776526bf0f9b6c436c014b856f64d54fe95e1c","file":"projects/ng-base/base-components/components/model-table/model-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-model-table","styleUrls":["./model-table.component.scss"],"styles":[],"templateUrl":["./model-table.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":16,"type":"any","decorators":[]},{"name":"create","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"createMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"delete","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"fieldConfig","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"modelName","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"objectId","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"update","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"createModeChanged","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":20,"type":"EventEmitter"},{"name":"idSelected","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","line":19,"type":"EventEmitter"}],"propertiesClass":[{"name":"availableFields","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":33},{"name":"meta","deprecated":false,"deprecationMessage":"","type":"GraphQLMeta","optional":false,"description":"","line":31},{"name":"objects","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":32},{"name":"selectedId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"tableFields","defaultValue":"{\\n    id: { label: \'ID\' },\\n    name: { label: \'Name\' },\\n    title: { label: \'Titel\' },\\n    description: { label: \'Beschreibung\' },\\n    email: { label: \'E-Mail\' },\\n    createdAt: { label: \'Erstellt am\' },\\n    updatedAt: { label: \'Bearbeitet am\' },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":22}],"methodsClass":[{"name":"capitalizeFirstLetter","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a string, capitalizes the first letter, and returns the modified string\\n\\n","description":"<p>It takes a string, capitalizes the first letter, and returns the modified string</p>\\n","jsdoctags":[{"name":{"pos":4486,"end":4491,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4480,"end":4485,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The string to capitalize.</li>\\n</ul>\\n"},{"tagName":{"pos":4526,"end":4533,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The first letter of the string is being capitalized and the rest of the string is being returned.</p>\\n"}]},{"name":"createNewObject","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen the user clicks the \\"Create New\\" button, the createModeChanged event is emitted, which is then handled by the\\nparent component\\n","description":"<p>When the user clicks the &quot;Create New&quot; button, the createModeChanged event is emitted, which is then handled by the\\nparent component</p>\\n"},{"name":"init","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWe\'re using the `meta` service to get the fields that are available for the `find` query for the model we\'re working\\nwith. We\'re then using that information to populate the `availableFields` array\\n","description":"<p>We&#39;re using the <code>meta</code> service to get the fields that are available for the <code>find</code> query for the model we&#39;re working\\nwith. We&#39;re then using that information to populate the <code>availableFields</code> array</p>\\n"},{"name":"loadObjects","args":[{"name":"fields","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt loads the objects from the database and stores them in the objects variable\\n\\n","description":"<p>It loads the objects from the database and stores them in the objects variable</p>\\n","jsdoctags":[{"name":{"pos":3267,"end":3273,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fields"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":3261,"end":3266,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>string[] - The fields you want to load from the database.</li>\\n</ul>\\n"}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":""},{"name":"selectId","args":[{"name":"object","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the update property is true, then set the selectedId property to the id of the object passed in, and emit the\\nselectedId property\\n\\n","description":"<p>If the update property is true, then set the selectedId property to the id of the object passed in, and emit the\\nselectedId property</p>\\n","jsdoctags":[{"name":{"pos":4051,"end":4057,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":147,"escapedText":"object"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4045,"end":4050,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>any - this is the object that is passed in from the child component.</li>\\n</ul>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from \'@angular/core\';\\nimport { GraphQLMeta, GraphQLMetaService, GraphQLRequestType, GraphQLService } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-model-table\',\\n  templateUrl: \'./model-table.component.html\',\\n  styleUrls: [\'./model-table.component.scss\'],\\n})\\nexport class ModelTableComponent implements OnInit, OnChanges {\\n  @Input() modelName: string;\\n  @Input() objectId: string;\\n  @Input() createMode = false;\\n  @Input() create = true;\\n  @Input() update = true;\\n  @Input() delete = true;\\n  @Input() config: any = {};\\n  @Input() fieldConfig: any = {};\\n\\n  @Output() idSelected = new EventEmitter<string>();\\n  @Output() createModeChanged = new EventEmitter<boolean>();\\n\\n  tableFields = {\\n    id: { label: \'ID\' },\\n    name: { label: \'Name\' },\\n    title: { label: \'Titel\' },\\n    description: { label: \'Beschreibung\' },\\n    email: { label: \'E-Mail\' },\\n    createdAt: { label: \'Erstellt am\' },\\n    updatedAt: { label: \'Bearbeitet am\' },\\n  };\\n  meta!: GraphQLMeta;\\n  objects: any[] = [];\\n  availableFields: string[] = [];\\n  selectedId = \'\';\\n\\n  constructor(private graphQLMetaService: GraphQLMetaService, private graphQLService: GraphQLService) {}\\n\\n  ngOnInit(): void {\\n    this.graphQLMetaService.getMeta().subscribe((meta) => {\\n      this.meta = meta;\\n\\n      if (this.modelName) {\\n        this.init();\\n      }\\n\\n      if (this.objectId) {\\n        this.selectedId = this.objectId;\\n      }\\n    });\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes[\'modelName\'] && this.meta) {\\n      this.init();\\n    }\\n\\n    if (changes[\'objectId\'] && this.meta) {\\n      if (this.selectedId !== this.objectId) {\\n        if (this.config?.logging) {\\n          console.log(\'ModelTableComponent::ngOnChanges->selectedId\', this.selectedId);\\n        }\\n\\n        this.selectedId = this.objectId;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * We\'re using the `meta` service to get the fields that are available for the `find` query for the model we\'re working\\n   * with. We\'re then using that information to populate the `availableFields` array\\n   */\\n  init() {\\n    this.availableFields = [];\\n\\n    if (this.config?.tableFields) {\\n      this.tableFields = this.config.tableFields;\\n    }\\n\\n    const possibleFields = this.meta.getFields(\'find\' + this.capitalizeFirstLetter(this.modelName) + \'s\');\\n    const keys = Object.keys(possibleFields);\\n    const tableFieldKeys = Object.keys(this.tableFields);\\n    tableFieldKeys?.forEach((field) => {\\n      if (keys.includes(field)) {\\n        this.availableFields.push(field);\\n      }\\n    });\\n\\n    if (this.config?.logging) {\\n      console.log(\'ModelTableComponent::init->possibleFields\', possibleFields);\\n      console.log(\'ModelTableComponent::init->keys\', keys);\\n      console.log(\'ModelTableComponent::init->availableFields\', this.availableFields);\\n    }\\n\\n    this.loadObjects(this.availableFields);\\n  }\\n\\n  /**\\n   * When the user clicks the \\"Create New\\" button, the createModeChanged event is emitted, which is then handled by the\\n   * parent component\\n   */\\n  createNewObject() {\\n    this.createMode = true;\\n    this.createModeChanged.emit(true);\\n  }\\n\\n  /**\\n   * It loads the objects from the database and stores them in the objects variable\\n   *\\n   * @param fields - string[] - The fields you want to load from the database.\\n   */\\n  loadObjects(fields: string[]) {\\n    this.objects = [];\\n    this.graphQLService\\n      .graphQl(\'find\' + this.capitalizeFirstLetter(this.modelName) + \'s\', {\\n        fields,\\n        type: GraphQLRequestType.QUERY,\\n      })\\n      .subscribe({\\n        next: (value) => {\\n          if (this.config?.logging) {\\n            console.log(\'ModelTableComponent::loadObjects->value\', value);\\n          }\\n\\n          this.objects = value;\\n        },\\n        error: (err) => {\\n          console.log(\'Error on loading objects\', err);\\n        },\\n      });\\n  }\\n\\n  /**\\n   * If the update property is true, then set the selectedId property to the id of the object passed in, and emit the\\n   * selectedId property\\n   *\\n   * @param object - any - this is the object that is passed in from the child component.\\n   */\\n  selectId(object: any) {\\n    if (!object) {\\n      this.createMode = false;\\n      this.createModeChanged.emit(false);\\n    }\\n\\n    if (this.update) {\\n      this.selectedId = object[\'id\'];\\n      this.idSelected.emit(this.selectedId);\\n    }\\n  }\\n\\n  /**\\n   * It takes a string, capitalizes the first letter, and returns the modified string\\n   *\\n   * @param value - The string to capitalize.\\n   * @returns The first letter of the string is being capitalized and the rest of the string is being returned.\\n   */\\n  capitalizeFirstLetter(value: string) {\\n    return value.charAt(0).toUpperCase() + value.slice(1);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".cursor-pointer {\\n  cursor: pointer;\\n}\\n\\n.table > :not(:first-child) {\\n  border-top: 0;\\n}\\n\\ntable {\\n  border-radius: 0.25rem;\\n  border-color: #e2e8f0 !important;\\n\\n  thead {\\n    text-transform: uppercase;\\n    font-size: 12px;\\n\\n    th {\\n      padding: 12px 24px;\\n    }\\n  }\\n\\n  tbody tr td {\\n    font-weight: normal !important;\\n    font-size: 16px;\\n    padding: 16px 24px;\\n  }\\n}\\n","styleUrl":"./model-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":""},{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":""}],"line":34,"jsdoctags":[{"name":"graphQLMetaService","type":"GraphQLMetaService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges"],"templateData":"<div *ngIf=\\"!selectedId && !createMode\\">\\n  <div class=\\"w-100 d-flex flex-row justify-content-between mb-4\\">\\n    <h2 *ngIf=\\"modelName\\">\\n      {{ config?.plural ? config?.plural : config?.label ? config?.label : capitalizeFirstLetter(modelName) + \'s\' }}\\n    </h2>\\n    <div class=\\"d-flex align-items-center\\">\\n      <button class=\\"btn btn-primary\\" (click)=\\"createNewObject()\\" *ngIf=\\"create\\">Erstellen</button>\\n    </div>\\n  </div>\\n  <table class=\\"table table-hover table-responsive bg-white\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\"col\\" *ngFor=\\"let field of availableFields\\">\\n          {{ tableFields[field]?.label ? tableFields[field]?.label : capitalizeFirstLetter(field) }}\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\"let object of objects\\">\\n        <td class=\\"cursor-pointer\\" *ngFor=\\"let field of availableFields\\" (click)=\\"selectId(object)\\">\\n          {{ object[field] }}\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div class=\\"w-100\\" *ngIf=\\"selectedId || createMode\\">\\n  <button class=\\"btn btn-outline-primary mb-3\\" (click)=\\"selectId(\'\')\\">Zurück</button>\\n  <base-model-form\\n    [modelName]=\\"modelName\\"\\n    [label]=\\"config?.label\\"\\n    [config]=\\"fieldConfig\\"\\n    [logging]=\\"config?.logging\\"\\n    [id]=\\"selectedId\\"\\n    (finished)=\\"selectId(\'\')\\"\\n    [delete]=\\"delete\\"\\n  ></base-model-form>\\n</div>\\n"},{"name":"ProfileComponent","id":"component-ProfileComponent-c8e68d2cc0ad3604ca83a055f216f68328aac2f9374f4d45015dc02ae99ecadad88728e5d308165c2c85a884cc36e799f85525dfb6c03572460e8e8e8a86b263","file":"projects/ng-base/base-prototype/pages/profile/profile.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-profile","styleUrls":["./profile.component.scss"],"styles":[],"templateUrl":["./profile.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"currentUser","deprecated":false,"deprecationMessage":"","type":"BasicUser","optional":false,"description":"","line":42},{"name":"profileConfig","defaultValue":"{\\n    avatar: {\\n      label: \'E-Mail\',\\n      placeholder: \'\',\\n    },\\n    email: {\\n      label: \'E-Mail\',\\n      placeholder: \'\',\\n    },\\n    firstName: {\\n      label: \'Vorname\',\\n      placeholder: \'\',\\n    },\\n    lastName: {\\n      label: \'Nachname\',\\n      placeholder: \'\',\\n    },\\n    roles: {\\n      exclude: true,\\n      roles: [\'admin\'],\\n    },\\n    username: {\\n      label: \'Benutzername\',\\n      placeholder: \'\',\\n    },\\n    password: {\\n      exclude: true,\\n    },\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":12}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { AuthService, BasicUser } from \'@lenne.tech/ng-base/shared\';\\nimport { ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'base-profile\',\\n  templateUrl: \'./profile.component.html\',\\n  styleUrls: [\'./profile.component.scss\'],\\n})\\nexport class ProfileComponent implements OnInit {\\n  @Input() config: any = {};\\n  profileConfig = {\\n    avatar: {\\n      label: \'E-Mail\',\\n      placeholder: \'\',\\n    },\\n    email: {\\n      label: \'E-Mail\',\\n      placeholder: \'\',\\n    },\\n    firstName: {\\n      label: \'Vorname\',\\n      placeholder: \'\',\\n    },\\n    lastName: {\\n      label: \'Nachname\',\\n      placeholder: \'\',\\n    },\\n    roles: {\\n      exclude: true,\\n      roles: [\'admin\'],\\n    },\\n    username: {\\n      label: \'Benutzername\',\\n      placeholder: \'\',\\n    },\\n    password: {\\n      exclude: true,\\n    },\\n  };\\n\\n  currentUser: BasicUser;\\n\\n  constructor(private authService: AuthService, private route: ActivatedRoute) {\\n    this.currentUser = authService.currentUser;\\n    this.profileConfig = { ...this.profileConfig, ...this.config };\\n  }\\n\\n  ngOnInit() {\\n    this.route.data.subscribe((data) => {\\n      // Merge config from route to component\\n      if (data) {\\n        this.profileConfig = { ...this.profileConfig, ...data };\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./profile.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":42,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"container\\">\\n  <div class=\\"py-5\\">\\n    <base-model-form\\n      [id]=\\"currentUser?.id\\"\\n      [modelName]=\\"\'user\'\\"\\n      [label]=\\"\'Mein Profil\'\\"\\n      [config]=\\"profileConfig || {}\\"\\n      [delete]=\\"false\\"\\n    ></base-model-form>\\n  </div>\\n</div>\\n"},{"name":"RefenceInputComponent","id":"component-RefenceInputComponent-29762fe57d923b5a3e24406d05100774c854227ea50c0f9433cec969dfe0b258b0c343c014d64f5a9a6d3d4198b80746efacf52087af718a9cfcaf53075a1316","file":"projects/ng-base/base-components/components/refence-input/refence-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-refence-input","styleUrls":["./refence-input.component.scss"],"styles":[],"templateUrl":["./refence-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"control","deprecated":false,"deprecationMessage":"","line":16,"type":"any","decorators":[]},{"name":"fields","defaultValue":"[\'id\', \'name\']","deprecated":false,"deprecationMessage":"","line":19,"type":"{}","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"method","defaultValue":"\'find\'","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"nameField","defaultValue":"\'name\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"tabIndex","deprecated":false,"deprecationMessage":"","line":15,"type":"number","decorators":[]},{"name":"valueField","defaultValue":"\'id\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"objects","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":22}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { GraphQLRequestType, GraphQLService } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-refence-input\',\\n  templateUrl: \'./refence-input.component.html\',\\n  styleUrls: [\'./refence-input.component.scss\'],\\n})\\nexport class RefenceInputComponent implements OnInit {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() placeholder?: string = \'\';\\n  @Input() autocomplete?: string;\\n  @Input() tabIndex?: number;\\n  @Input() control: any;\\n  @Input() required = false;\\n  @Input() method = \'find\';\\n  @Input() fields = [\'id\', \'name\'];\\n  @Input() valueField = \'id\';\\n  @Input() nameField = \'name\';\\n  objects: any[] = [];\\n\\n  constructor(private graphQLService: GraphQLService) {}\\n\\n  ngOnInit(): void {\\n    this.graphQLService\\n      .graphQl(this.method, {\\n        fields: this.fields,\\n        type: GraphQLRequestType.QUERY,\\n      })\\n      .subscribe((result) => {\\n        if (result) {\\n          this.objects = result;\\n        }\\n      });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./refence-input.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"graphQLService","type":"GraphQLService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"form-group mb-3\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n  <input\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    class=\\"form-control\\"\\n    [formControl]=\\"control\\"\\n    [required]=\\"required\\"\\n    [placeholder]=\\"placeholder\\"\\n    [autocomplete]=\\"autocomplete ?? null\\"\\n    [tabIndex]=\\"tabIndex ?? null\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n    [attr.list]=\\"id + \'-datalistOptions\'\\"\\n  />\\n  <datalist [id]=\\"id + \'-datalistOptions\'\\">\\n    <option *ngFor=\\"let object of objects\\" [value]=\\"object[valueField]\\">{{ object[nameField] }}</option>\\n  </datalist>\\n\\n  <div class=\\"invalid-feedback m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n    <div *ngIf=\\"control?.errors?.[\'minlength\']\\">\\n      Die Mindestlänge für dieses Feld beträgt\\n      {{control.errors?.[\'minlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'maxlength\']\\">\\n      Die maximale Länge für dieses Feld beträgt\\n      {{control.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'email\']\\">Bitte eine gültige E-Mail Adresse angeben.</div>\\n    <div *ngIf=\\"control?.errors?.[\'matching\']\\">Die Passwörter müssen überein stimmen.</div>\\n  </div>\\n</div>\\n"},{"name":"RegisterComponent","id":"component-RegisterComponent-98d157c0667cd9b16dad7e76c1dbaf5d289efb32fa087608e79847d103155366beb7c0705f2ab78c13d994feac487e6f13e2ea556ce76dee50d471aee71a651b","file":"projects/ng-base/base-prototype/pages/register/register.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-register","styleUrls":["./register.component.scss"],"styles":[],"templateUrl":["./register.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":12},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14}],"methodsClass":[{"name":"createForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate login form\\n","description":"<p>Create login form</p>\\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"scrollToTop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":""},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit login form\\n","description":"<p>Submit login form</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { FormsService, UserService, Validation } from \'@lenne.tech/ng-base/shared\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'base-register\',\\n  templateUrl: \'./register.component.html\',\\n  styleUrls: [\'./register.component.scss\'],\\n})\\nexport class RegisterComponent implements OnInit {\\n  form: FormGroup;\\n  error: string;\\n  loading: boolean;\\n\\n  constructor(private formsService: FormsService, private userService: UserService, private router: Router) {}\\n\\n  ngOnInit(): void {\\n    this.createForm();\\n  }\\n\\n  /**\\n   * Create login form\\n   */\\n  createForm() {\\n    this.form = new FormGroup(\\n      {\\n        firstName: new FormControl(\'\', [Validators.required]),\\n        lastName: new FormControl(\'\', [Validators.required]),\\n        email: new FormControl(\'\', [Validators.required, Validators.email]),\\n        password: new FormControl(\'\', Validators.required),\\n        passwordConfirm: new FormControl(\'\', Validators.required),\\n        privacy: new FormControl(false, Validators.requiredTrue),\\n      },\\n      {\\n        validators: [Validation.match(\'password\', \'passwordConfirm\')],\\n      }\\n    );\\n  }\\n\\n  /**\\n   * Submit login form\\n   */\\n  submit() {\\n    this.error = \'\';\\n    this.loading = true;\\n\\n    if (this.form.invalid) {\\n      this.formsService.validateAllFormFields(this.form);\\n      this.scrollToTop();\\n      this.loading = false;\\n      return;\\n    }\\n\\n    const input = this.form.value;\\n    delete input.privacy;\\n\\n    this.userService.register(input).subscribe({\\n      next: (auth) => {\\n        if (auth) {\\n          this.router.navigate([\'/main\']);\\n        } else {\\n          this.error = \'Etwas ist schiefgelaufen. Bitte probiere es später erneut.\';\\n          this.scrollToTop();\\n        }\\n        this.loading = false;\\n      },\\n      error: (err) => {\\n        if (err?.message?.includes(\'already exists\')) {\\n          this.error =\\n            \'Mit dieser E-Mail gibt es bereits ein Konto. Bitte wähle eine andere E-Mail Adresse oder logge dich mit deinem Passwort ein.\';\\n          this.scrollToTop();\\n        }\\n\\n        this.loading = false;\\n      },\\n    });\\n  }\\n\\n  scrollToTop() {\\n    window.scrollTo({ top: 0, behavior: \'smooth\' });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../node_modules/bootstrap/scss/functions\';\\n@import \'../../../../../node_modules/bootstrap/scss/mixins\';\\n@import \'../../../../../node_modules/bootstrap/scss/variables\';\\n\\n.register-container {\\n  width: 100%;\\n  padding: 20px 0;\\n\\n  @include media-breakpoint-up(md) {\\n    max-width: 400px;\\n  }\\n}\\n","styleUrl":"./register.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"formsService","type":"FormsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"d-flex justify-content-center align-items-center h-100 py-5\\">\\n  <div class=\\"d-flex flex-column register-container\\">\\n    <div class=\\"container\\">\\n      <form [formGroup]=\\"form\\">\\n        <div id=\\"register-error\\" class=\\"alert alert-danger\\" role=\\"alert\\" *ngIf=\\"error\\">\\n          {{ error }}\\n        </div>\\n        <base-input\\n          [id]=\\"\'firstName\'\\"\\n          [name]=\\"\'firstName\'\\"\\n          [label]=\\"\'Vorname\'\\"\\n          [type]=\\"\'text\'\\"\\n          [control]=\\"form.get(\'firstName\')\\"\\n          [autocomplete]=\\"\'given-name\'\\"\\n        ></base-input>\\n        <base-input\\n          [id]=\\"\'lastName\'\\"\\n          [name]=\\"\'lastName\'\\"\\n          [label]=\\"\'Nachname\'\\"\\n          [type]=\\"\'text\'\\"\\n          [control]=\\"form.get(\'lastName\')\\"\\n          [autocomplete]=\\"\'family-name\'\\"\\n        ></base-input>\\n        <base-input\\n          [id]=\\"\'email\'\\"\\n          [name]=\\"\'email\'\\"\\n          [label]=\\"\'E-Mail Adresse\'\\"\\n          [type]=\\"\'email\'\\"\\n          [control]=\\"form.get(\'email\')\\"\\n          [autocomplete]=\\"\'email\'\\"\\n        ></base-input>\\n        <base-input\\n          [id]=\\"\'password\'\\"\\n          [name]=\\"\'password\'\\"\\n          [label]=\\"\'Passwort\'\\"\\n          [type]=\\"\'password\'\\"\\n          [autocomplete]=\\"\'new-password\'\\"\\n          [control]=\\"form.get(\'password\')\\"\\n        ></base-input>\\n        <base-input\\n          [id]=\\"\'password-confirm\'\\"\\n          [name]=\\"\'password-confirm\'\\"\\n          [label]=\\"\'Passwort bestätigen\'\\"\\n          [autocomplete]=\\"\'new-password\'\\"\\n          [type]=\\"\'password\'\\"\\n          [control]=\\"form.get(\'passwordConfirm\')\\"\\n        ></base-input>\\n        <base-checkbox [id]=\\"\'privacy\'\\" [control]=\\"form.get(\'privacy\')\\">\\n          Hiermit bestätige ich, dass ich die <a routerLink=\\"/datenschutz\\">Datenschutzerklärung</a> gelesen habe und\\n          akzeptiere.\\n        </base-checkbox>\\n        <div class=\\"d-grid gap-2 text-center\\">\\n          <button class=\\"btn btn-primary\\" (click)=\\"submit()\\" *ngIf=\\"!loading\\">Registrieren</button>\\n          <button class=\\"btn btn-primary\\" type=\\"button\\" disabled *ngIf=\\"loading\\">\\n            <span class=\\"spinner-border spinner-border-sm\\" role=\\"status\\" aria-hidden=\\"true\\"></span>\\n            Loading...\\n          </button>\\n          <hr />\\n          <a routerLink=\\"../login\\">Bereits ein Konto? Dann logge Dich hier ein!</a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"SelectComponent","id":"component-SelectComponent-f12a691c69d8bdfd36f188a85a1a406399000435765792775dfdcbb8c8123a7f702c6cd805168e350a7d64e74e38976669116e16a67511521cce48cb0b76c10f","file":"projects/ng-base/base-components/components/select/select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-select","styleUrls":["./select.component.scss"],"styles":[],"templateUrl":["./select.component.html"],"viewProviders":[],"inputsClass":[{"name":"control","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"multiple","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":23,"type":"Option[]","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"search","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]},{"name":"tabIndex","deprecated":false,"deprecationMessage":"","line":19,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\ninterface Option {\\n  text: string;\\n  value: string | number;\\n}\\n\\n@Component({\\n  selector: \'base-select\',\\n  templateUrl: \'./select.component.html\',\\n  styleUrls: [\'./select.component.scss\'],\\n})\\nexport class SelectComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() placeholder?: string = \'\';\\n  @Input() control: any;\\n  @Input() tabIndex?: number;\\n  @Input() required = false;\\n  @Input() multiple = false;\\n  @Input() search = false;\\n  @Input() options: Option[] = [];\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n","styleUrl":"./select.component.scss"}],"stylesData":"","templateData":"<div class=\\"form-group mb-3\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n  <select\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    class=\\"form-select\\"\\n    [attr.aria-label]=\\"placeholder\\"\\n    [attr.data-live-search]=\\"search\\"\\n    [formControl]=\\"control\\"\\n    [required]=\\"required\\"\\n    [tabIndex]=\\"tabIndex ?? null\\"\\n    [multiple]=\\"multiple\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n  >\\n    <option [ngValue]=\\"null\\" selected>{{ placeholder }}</option>\\n    <option *ngFor=\\"let option of options\\" [ngValue]=\\"option.value\\">\\n      {{ option.text }}\\n    </option>\\n  </select>\\n\\n  <div class=\\"invalid-feedback m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n    <div *ngIf=\\"control?.errors?.[\'minlength\']\\">\\n      Die Mindestlänge für dieses Feld beträgt\\n      {{control?.errors?.[\'minlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'maxlength\']\\">\\n      Die maximale Länge für dieses Feld beträgt\\n      {{control?.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'email\']\\">Bitte eine gültige E-Mail Adresse angeben.</div>\\n  </div>\\n</div>\\n"},{"name":"SkeletonLoaderComponent","id":"component-SkeletonLoaderComponent-c9dc37353d13d6123078adce647e2ff45ac7b4870460c871b4c8c7e92d2c077ec843c5f681fd1b3f48acf5f9da62a42fb27f71f5238cade57d1d5f19a54be18b","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-skeleton-loader","styleUrls":["./skeleton-loader.component.scss"],"styles":[],"templateUrl":["./skeleton-loader.component.html"],"viewProviders":[],"inputsClass":[{"name":"count","defaultValue":"1","deprecated":false,"deprecationMessage":"","line":11,"type":"number","decorators":[]},{"name":"size","defaultValue":"18","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":10,"type":"SkeletonType","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"convertToArray","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { SkeletonType } from \'@lenne.tech/ng-base/shared\';\\n\\n@Component({\\n  selector: \'base-skeleton-loader\',\\n  templateUrl: \'./skeleton-loader.component.html\',\\n  styleUrls: [\'./skeleton-loader.component.scss\'],\\n})\\nexport class SkeletonLoaderComponent {\\n  @Input() type!: SkeletonType;\\n  @Input() count = 1;\\n  @Input() size = 18;\\n\\n  convertToArray(value): any {\\n    if (!value) {\\n      return [];\\n    }\\n    const res = [];\\n\\n    for (let i = 0; i < value; i++) {\\n      res.push(i);\\n    }\\n    console.log(res);\\n\\n    return res;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@keyframes shine {\\n  to {\\n    background-position-x: -200%;\\n  }\\n}\\n\\n@mixin loading {\\n  background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);\\n  background-size: 200% 100%;\\n  animation: 1.5s shine linear infinite;\\n}\\n\\n.line-loader-wrapper {\\n  > :not(:first-of-type) {\\n    margin-top: 10px;\\n  }\\n\\n  .line-loader {\\n    @include loading;\\n    height: 18px;\\n    border-radius: 5px;\\n  }\\n}\\n\\n.line-rectangle {\\n  @include loading;\\n  border-radius: 5px;\\n}\\n\\n.line-avatar {\\n  @include loading;\\n  border-radius: 50%;\\n}\\n","styleUrl":"./skeleton-loader.component.scss"}],"stylesData":"","templateData":"<ng-container *ngIf=\\"type\\" [ngSwitch]=\\"type\\">\\n  <div *ngSwitchCase=\\"\'LINE\'\\">\\n    <div class=\\"line-loader-wrapper\\">\\n      <div class=\\"line-loader\\" *ngFor=\\"let key of convertToArray(count)\\"></div>\\n    </div>\\n  </div>\\n\\n  <div *ngSwitchCase=\\"\'RECTANGLE\'\\">\\n    <div class=\\"line-rectangle\\" [ngStyle]=\\"{ height: size + \'px\' }\\"></div>\\n  </div>\\n\\n  <div *ngSwitchCase=\\"\'AVATAR\'\\">\\n    <div class=\\"line-avatar\\" [ngStyle]=\\"{ height: size + \'px\', width: size + \'px\' }\\"></div>\\n  </div>\\n</ng-container>\\n"},{"name":"TagsComponent","id":"component-TagsComponent-9a015111520a69c104b86ae4ce45a623e864b120f0bd6045bc46bea534be66e3b93980fab6b2eec04d339cbb963bab8e75450cfb7349dc412a819e92041c46f2","file":"projects/ng-base/base-components/components/tags/tags.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-tags","styleUrls":["./tags.component.scss"],"styles":[],"templateUrl":["./tags.component.html"],"viewProviders":[],"inputsClass":[{"name":"autocomplete","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"control","deprecated":false,"deprecationMessage":"","line":16,"type":"FormControl | AbstractControl","decorators":[]},{"name":"custom","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":18,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":17,"type":"string[]","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"removeByKey","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"tabIndex","deprecated":false,"deprecationMessage":"","line":15,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"inputValue","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21},{"name":"selectedElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":22}],"methodsClass":[{"name":"addTag","args":[{"name":"tag","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd new tag\\n\\n","description":"<p>Add new tag</p>\\n","jsdoctags":[{"name":{"pos":1087,"end":1090,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"tag"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1081,"end":1086,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"enterKey","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nListen to enter keys\\n\\n","description":"<p>Listen to enter keys</p>\\n","jsdoctags":[{"name":{"pos":720,"end":725,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":714,"end":719,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"filterOptions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFilter options for drop down\\n","description":"<p>Filter options for drop down</p>\\n"},{"name":"onFocus","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow dropdown focus\\n\\n","description":"<p>Show dropdown focus</p>\\n","jsdoctags":[{"name":{"pos":2445,"end":2450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2439,"end":2444,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"removeTag","args":[{"name":"tag","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemove tag\\n\\n","description":"<p>Remove tag</p>\\n","jsdoctags":[{"name":{"pos":1849,"end":1852,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"tag"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1843,"end":1848,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { AbstractControl, FormControl } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'base-tags\',\\n  templateUrl: \'./tags.component.html\',\\n  styleUrls: [\'./tags.component.scss\'],\\n})\\nexport class TagsComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string = \'\';\\n  @Input() placeholder?: string = \'\';\\n  @Input() autocomplete?: string;\\n  @Input() tabIndex?: number;\\n  @Input() control: FormControl | AbstractControl;\\n  @Input() options?: string[] = [];\\n  @Input() custom = true;\\n  @Input() removeByKey = true;\\n  @Input() required = false;\\n  inputValue = \'\';\\n  selectedElement: HTMLElement;\\n\\n  /**\\n   * Listen to enter keys\\n   *\\n   * @param event\\n   */\\n  enterKey(event: KeyboardEvent): void {\\n    if (this.removeByKey && event.code === \'Backspace\' && !this.inputValue) {\\n      this.removeTag();\\n      return;\\n    } else {\\n      if (event.code === \'Comma\' || event.code === \'Space\' || event.code === \'Enter\') {\\n        this.addTag(this.inputValue);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Add new tag\\n   *\\n   * @param tag\\n   */\\n  addTag(tag: string): void {\\n    if (!this.control.value) {\\n      this.control.setValue([]);\\n    }\\n    this.selectedElement = null;\\n\\n    if (tag.endsWith(\',\') || tag.endsWith(\' \')) {\\n      tag = tag.slice(0, -1);\\n    }\\n\\n    if (!this.custom && !this.options.find((e) => e === tag)) {\\n      return;\\n    }\\n\\n    if (this.control.value?.length === 0) {\\n      this.control.setValue([tag]);\\n      this.inputValue = \'\';\\n      this.control.setErrors(null);\\n      return;\\n    }\\n\\n    if (tag.length > 0 && this.control.value && !this.control.value.some((item: string) => item === tag)) {\\n      this.control.setValue([...this.control.value, tag]);\\n      this.inputValue = \'\';\\n      this.control.setErrors(null);\\n    }\\n  }\\n\\n  /**\\n   * Remove tag\\n   *\\n   * @param tag\\n   */\\n  removeTag(tag?: string): void {\\n    this.selectedElement = null;\\n    if (tag) {\\n      this.control.setValue(this.control.value.filter((item: string) => item !== tag));\\n    } else {\\n      this.control.value.splice(-1);\\n    }\\n\\n    if (this.control.value.length === 0) {\\n      this.control.setErrors({ required: true });\\n    }\\n  }\\n\\n  /**\\n   * Filter options for drop down\\n   */\\n  filterOptions() {\\n    return this.options\\n      ? this.options.filter((e) => e?.includes(this.inputValue) && !this.control.value.includes(e))\\n      : [];\\n  }\\n\\n  /**\\n   * Show dropdown focus\\n   *\\n   * @param event\\n   */\\n  onFocus(event?) {\\n    if (event) {\\n      this.selectedElement = event.target;\\n    } else {\\n      setTimeout(() => {\\n        this.selectedElement = null;\\n      }, 250);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n\\n.tag-options {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  border-top: 0;\\n  background-color: #fff;\\n  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);\\n  transition: all 0.5s;\\n  z-index: 999;\\n\\n  .tag-option-item {\\n    padding: 10px;\\n    cursor: pointer;\\n\\n    &:hover {\\n      color: var(--bs-primary);\\n    }\\n  }\\n}\\n\\n.tag-wrapper {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  column-gap: 10px;\\n  row-gap: 10px;\\n  flex-wrap: wrap;\\n  margin-bottom: 10px;\\n  position: relative;\\n\\n  .tag {\\n    background-color: var(--bs-light);\\n    color: var(--bs-dark);\\n    padding: 10px 15px;\\n    font-style: normal;\\n    font-weight: 300;\\n    font-size: 14px;\\n    line-height: 140%;\\n\\n    span {\\n      margin-left: 20px;\\n      cursor: pointer;\\n\\n      .bi {\\n        color: var(--bs-black);\\n\\n        &:before {\\n          vertical-align: -0.175em;\\n        }\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./tags.component.scss"}],"stylesData":"","templateData":"<div class=\\"form-group position-relative\\" *ngIf=\\"control\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n\\n  <div class=\\"tag-wrapper\\" *ngIf=\\"control?.value\\">\\n    <div class=\\"tag\\" *ngFor=\\"let tag of control?.value\\">\\n      {{ tag }}\\n      <span (click)=\\"removeTag(tag)\\"><i class=\\"bi bi-x-circle\\"></i></span>\\n    </div>\\n  </div>\\n  <input\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    [placeholder]=\\"placeholder\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n    [(ngModel)]=\\"inputValue\\"\\n    [autocomplete]=\\"autocomplete ?? null\\"\\n    [tabIndex]=\\"tabIndex ?? null\\"\\n    (focus)=\\"onFocus($event)\\"\\n    (blur)=\\"onFocus()\\"\\n    type=\\"text\\"\\n    class=\\"form-control\\"\\n    (keyup)=\\"enterKey($event)\\"\\n  />\\n\\n  <div class=\\"tag-options\\" *ngIf=\\"options && selectedElement\\">\\n    <div class=\\"tag-option-item\\" *ngFor=\\"let option of filterOptions()\\" (click)=\\"addTag(option)\\">{{ option }}</div>\\n  </div>\\n\\n  <div class=\\"invalid-feedback m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n  </div>\\n</div>\\n"},{"name":"TextareaComponent","id":"component-TextareaComponent-5dc5d628e5278a2278d16ad950c826cf805ec22354a6034c06f5edd7871a87783c9dca5072da07139c37440deb0a4db1df528fb5ca656f82789e4be8f6e5eecc","file":"projects/ng-base/base-components/components/textarea/textarea.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-textarea","styleUrls":["./textarea.component.scss"],"styles":[],"templateUrl":["./textarea.component.html"],"viewProviders":[],"inputsClass":[{"name":"control","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"rows","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":14,"type":"number","decorators":[]},{"name":"tabIndex","deprecated":false,"deprecationMessage":"","line":16,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'base-textarea\',\\n  templateUrl: \'./textarea.component.html\',\\n  styleUrls: [\'./textarea.component.scss\'],\\n})\\nexport class TextareaComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string = \'\';\\n  @Input() placeholder?: string = \'\';\\n  @Input() control: any;\\n  @Input() rows = 5;\\n  @Input() required = false;\\n  @Input() tabIndex?: number;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n","styleUrl":"./textarea.component.scss"}],"stylesData":"","templateData":"<div class=\\"form-group mb-3\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n  <textarea\\n    class=\\"form-control\\"\\n    [id]=\\"id\\"\\n    [name]=\\"name\\"\\n    [rows]=\\"rows\\"\\n    [placeholder]=\\"placeholder\\"\\n    [formControl]=\\"control\\"\\n    [tabIndex]=\\"tabIndex ?? null\\"\\n    [ngClass]=\\"{ \'is-invalid\': control?.invalid && control?.touched }\\"\\n  ></textarea>\\n\\n  <div class=\\"invalid-feedback m-2\\" *ngIf=\\"control?.invalid && (control?.dirty || control?.touched)\\">\\n    <div *ngIf=\\"control?.errors?.[\'required\']\\">Dieses Feld ist ein Pflichtfeld.</div>\\n    <div *ngIf=\\"control?.errors?.[\'minlength\']\\">\\n      Die Mindestlänge für dieses Feld beträgt\\n      {{control?.errors?.[\'minlength\']?.requiredLength}} Zeichen.\\n    </div>\\n    <div *ngIf=\\"control?.errors?.[\'maxlength\']\\">\\n      Die maximale Länge für dieses Feld beträgt\\n      {{control?.errors?.[\'maxlength\']?.requiredLength}} Zeichen.\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"ToastComponent","id":"component-ToastComponent-3b6cfd4b02f1c304d0b76620c9eea2aea1db5239c331e8ed642aa4d24d18a9976e0dfddacc99cb5f37a44311183da7125b2aa0804720496203bc6c160f90551b","file":"projects/ng-base/base-components/components/toast/toast.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-toast","styleUrls":["./toast.component.scss"],"styles":[],"templateUrl":["./toast.component.html"],"viewProviders":[],"inputsClass":[{"name":"position","defaultValue":"\'bottom-right\'","deprecated":false,"deprecationMessage":"","line":27,"type":"\\"top-right\\" | \\"bottom-right\\"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"toasts","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Toast[]","optional":false,"description":"","line":24},{"name":"ToastType","defaultValue":"ToastType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25}],"methodsClass":[{"name":"getDefaultDescription","args":[{"name":"toast","type":"Toast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"toast","type":"Toast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDefaultTitle","args":[{"name":"toast","type":"Toast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"toast","type":"Toast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""},{"name":"reload","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnDestroy, OnInit } from \'@angular/core\';\\nimport { animate, query, style, transition, trigger } from \'@angular/animations\';\\nimport { Subscription } from \'rxjs\';\\nimport { Toast, ToastService, ToastType } from \'@lenne.tech/ng-base/shared\';\\n\\nconst toastAnimation = trigger(\'toastAnimation\', [\\n  transition(\'* <=> *\', [\\n    query(\\n      \':enter\',\\n      [style({ transform: \'translateX(100%)\' }), animate(\'200ms ease-in\', style({ transform: \'translateX(0%)\' }))],\\n      { optional: true }\\n    ),\\n    query(\':leave\', animate(\'200ms ease-in\', style({ transform: \'translateX(100%)\' })), { optional: true }),\\n  ]),\\n]);\\n\\n@Component({\\n  selector: \'base-toast\',\\n  templateUrl: \'./toast.component.html\',\\n  styleUrls: [\'./toast.component.scss\'],\\n  animations: [toastAnimation],\\n})\\nexport class ToastComponent implements OnInit, OnDestroy {\\n  toasts: Toast[] = [];\\n  ToastType = ToastType;\\n  subscriptions = new Subscription();\\n  @Input() position: \'top-right\' | \'bottom-right\' = \'bottom-right\';\\n\\n  constructor(private toastService: ToastService) {}\\n\\n  ngOnInit(): void {\\n    this.subscriptions.add(\\n      this.toastService.toastsAsObservable.subscribe({\\n        next: (value) => {\\n          this.toasts = value;\\n        },\\n      })\\n    );\\n  }\\n\\n  ngOnDestroy() {\\n    this.subscriptions.unsubscribe();\\n  }\\n\\n  getDefaultTitle(toast: Toast): string {\\n    switch (toast.type) {\\n      case ToastType.ERROR:\\n        return \'Irgendetwas ist schiefgelaufen\';\\n      case ToastType.INFO:\\n        return \'Info\';\\n      case ToastType.WARNING:\\n        return \'Achtung\';\\n      case ToastType.SUCCESS:\\n        return \'Erfolgreich\';\\n    }\\n  }\\n\\n  getDefaultDescription(toast: Toast): string {\\n    switch (toast.type) {\\n      case ToastType.ERROR:\\n        return \'Sollte das Problem länger bestehen bleiben, dann wenden Sie sich bitte\\\\n\' + \'        an den Support.\';\\n      case ToastType.INFO:\\n        return \'Info\';\\n      case ToastType.WARNING:\\n        return \'Warning\';\\n      case ToastType.SUCCESS:\\n        return \'Die Änderungen wurden erfolgreich gespeichert.\';\\n    }\\n  }\\n\\n  reload() {\\n    location.reload();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  --base-toast-z-index: 999;\\n}\\n\\n.toast-wrapper {\\n  position: fixed;\\n  padding: 10px;\\n  z-index: var(--base-toast-z-index);\\n}\\n\\n.bottom-right {\\n  bottom: 0;\\n  right: 0;\\n}\\n\\n.top-right {\\n  top: 0;\\n  right: 0;\\n}\\n\\n.toast {\\n  border-radius: 0;\\n  border: 0;\\n\\n  a {\\n    text-decoration: none;\\n    font-weight: 600;\\n  }\\n\\n  .toast-header {\\n    border-radius: 0;\\n  }\\n}\\n\\n.error {\\n  .toast-header {\\n    background-color: var(--bs-danger);\\n    color: var(--bs-white);\\n  }\\n}\\n\\n.warning {\\n  .toast-header {\\n    background-color: var(--bs-warning);\\n    color: var(--bs-white);\\n  }\\n}\\n\\n.info {\\n  .toast-header {\\n    background-color: var(--bs-info);\\n    color: var(--bs-white);\\n  }\\n}\\n\\n.success {\\n  .toast-header {\\n    background-color: var(--bs-success);\\n    color: var(--bs-white);\\n  }\\n}\\n","styleUrl":"./toast.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"toastService","type":"ToastService","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"toastService","type":"ToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div class=\\"toast-wrapper\\" [ngClass]=\\"position\\">\\n  <div class=\\"toast-container\\" [@toastAnimation]=\\"toasts.length\\">\\n    <div\\n      class=\\"toast show\\"\\n      role=\\"alert\\"\\n      aria-live=\\"assertive\\"\\n      aria-atomic=\\"true\\"\\n      *ngFor=\\"let toast of toasts\\"\\n      [ngClass]=\\"toast.type\\"\\n    >\\n      <div class=\\"toast-header\\">\\n        <strong class=\\"me-auto\\">{{ toast?.title ?? getDefaultTitle(toast) }}</strong>\\n        <button type=\\"button\\" class=\\"btn-close btn-close-white\\" data-bs-dismiss=\\"toast\\" aria-label=\\"Close\\"></button>\\n      </div>\\n      <div class=\\"toast-body\\">\\n        {{ toast?.description ?? getDefaultDescription(toast) }}\\n\\n        <div class=\\"mt-2\\" *ngIf=\\"toast?.errorCode\\">\\n          <code>ERROR: {{ toast.errorCode }}</code>\\n        </div>\\n\\n        <div class=\\"mt-2\\" *ngIf=\\"toast.type === ToastType.ERROR\\">\\n          <a class=\\"color-secondary\\" href=\\"#\\" (click)=\\"reload()\\">Seite neu laden</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"ToastWrapperComponent","id":"component-ToastWrapperComponent-623025f395f530cc507645e73d20360d46c6ed84253a005c0a3b4834a969c919014f359a2bcff4aaf3dd022064d805ab9b619e37a9f136b70c8ff587bbd9e5a2","file":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<div class=\\"w-100\\">\\n  <base-toast [position]=\\"position\\"></base-toast>\\n\\n  <div style=\\"display: flex; flex-direction: row; justify-content: space-around;\\">\\n    <button class=\\"btn btn-danger\\" (click)=\\"addError()\\">Show Error Toast</button>\\n    <button class=\\"btn btn-warning\\" (click)=\\"addWarning()\\">Show Warning Toast</button>\\n    <button class=\\"btn btn-info\\" (click)=\\"addInfo()\\">Show Info Toast</button>\\n    <button class=\\"btn btn-success\\" (click)=\\"addSuccess()\\">Show Success Toast</button>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"position","defaultValue":"\'bottom-right\'","deprecated":false,"deprecationMessage":"","type":"\\"top-right\\" | \\"bottom-right\\"","optional":false,"description":"","line":24}],"methodsClass":[{"name":"addError","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""},{"name":"addInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"addSuccess","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""},{"name":"addWarning","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Meta, Story } from \'@storybook/angular/types-6-0\';\\nimport { componentWrapperDecorator, moduleMetadata } from \'@storybook/angular\';\\nimport { Component } from \'@angular/core\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { ToastService, ToastType } from \'@lenne.tech/ng-base/shared\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\n\\n@Component({\\n  template: `\\n    <div class=\\"w-100\\">\\n      <base-toast [position]=\\"position\\"></base-toast>\\n\\n      <div style=\\"display: flex; flex-direction: row; justify-content: space-around;\\">\\n        <button class=\\"btn btn-danger\\" (click)=\\"addError()\\">Show Error Toast</button>\\n        <button class=\\"btn btn-warning\\" (click)=\\"addWarning()\\">Show Warning Toast</button>\\n        <button class=\\"btn btn-info\\" (click)=\\"addInfo()\\">Show Info Toast</button>\\n        <button class=\\"btn btn-success\\" (click)=\\"addSuccess()\\">Show Success Toast</button>\\n      </div>\\n    </div>\\n  `,\\n})\\nclass ToastWrapperComponent {\\n  position: \'top-right\' | \'bottom-right\' = \'bottom-right\';\\n  constructor(private toastService: ToastService) {}\\n\\n  addInfo() {\\n    this.toastService.show(\\n      {\\n        id: \'info\',\\n        type: ToastType.INFO,\\n      },\\n      5000\\n    );\\n  }\\n\\n  addSuccess() {\\n    this.toastService.show(\\n      {\\n        id: \'success\',\\n        type: ToastType.SUCCESS,\\n      },\\n      5000\\n    );\\n  }\\n\\n  addWarning() {\\n    this.toastService.show(\\n      {\\n        id: \'info\',\\n        type: ToastType.WARNING,\\n      },\\n      5000\\n    );\\n  }\\n\\n  addError() {\\n    this.toastService.show(\\n      {\\n        id: \'info\',\\n        type: ToastType.ERROR,\\n        errorCode: \'ER007\',\\n      },\\n      5000\\n    );\\n  }\\n}\\n\\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\\nexport default {\\n  title: \'Services/ToastService\',\\n  component: ToastWrapperComponent,\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ToastWrapperComponent],\\n      imports: [BaseComponentsModule, BrowserAnimationsModule],\\n      providers: [ToastService],\\n    }),\\n    componentWrapperDecorator(\\n      (story) =>\\n        `<div style=\\"display: flex; justify-content:center; align-items: center; height: 100vh; margin: 0 auto; width: 90vw;\\">\\n            <div style=\\"width: 100%\\">\\n                ${story}\\n            </div>\\n        </div>`\\n    ),\\n  ],\\n  parameters: {\\n    // More on Story layout: https://storybook.js.org/docs/angular/configure/story-layout\\n    layout: \'fullscreen\',\\n  },\\n} as Meta;\\n\\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\\nconst Template: Story<ToastWrapperComponent> = (args: ToastWrapperComponent) => ({\\n  props: args,\\n});\\n\\nexport const Default = Template.bind({});\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"toastService","type":"ToastService","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"toastService","type":"ToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"UploadImageComponent","id":"component-UploadImageComponent-a9f289019d04236f42fb9eb1a98037540a780e630cadcce317998a9f8785dc97ae0ec544ff486db6b2106eb210b0dcd8038fe0513c5b558ce72a2f4075919462","file":"projects/ng-base/base-components/components/upload-image/upload-image.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"base-upload-image","styleUrls":["./upload-image.component.scss"],"styles":[],"templateUrl":["./upload-image.component.html"],"viewProviders":[],"inputsClass":[{"name":"control","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"deletePath","defaultValue":"\'/files/\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"dragText","defaultValue":"\'Drag & Drop\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"path","defaultValue":"\'/files/\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"supportText","defaultValue":"\'Supports: JPEG, JPG, PNG\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"uploadPath","defaultValue":"\'/files/upload\'","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"url","defaultValue":"\'http://localhost:3000\'","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"validExtensions","defaultValue":"[\'image/jpeg\', \'image/jpg\', \'image/png\']","deprecated":false,"deprecationMessage":"","line":16,"type":"{}","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"dragActive","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"fileUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"selectedFile","deprecated":false,"deprecationMessage":"","type":"File","optional":false,"description":"","line":23}],"methodsClass":[{"name":"deleteFile","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt deletes the file from the server and sets the selectedFile and fileUrl to null\\n\\n","description":"<p>It deletes the file from the server and sets the selectedFile and fileUrl to null</p>\\n","jsdoctags":[{"name":{"pos":3667,"end":3669,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3660,"end":3665,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The id of the file to delete.</li>\\n</ul>\\n"}]},{"name":"dragLeave","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen the user drags a file over the drop zone, the dragActive variable is set to true, which will change the color of\\nthe drop zone to green\\n\\n","description":"<p>When the user drags a file over the drop zone, the dragActive variable is set to true, which will change the color of\\nthe drop zone to green</p>\\n","jsdoctags":[{"name":{"pos":1465,"end":1470,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1459,"end":1464,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The event object that is passed to the dragLeave event.</li>\\n</ul>\\n"}]},{"name":"dragOver","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe dragOver function is called when the user drags a file over the dropzone. It prevents the default action of the\\nevent, and sets the dragText to \'Release to Upload\' and the dragActive to true\\n\\n","description":"<p>The dragOver function is called when the user drags a file over the dropzone. It prevents the default action of the\\nevent, and sets the dragText to &#39;Release to Upload&#39; and the dragActive to true</p>\\n","jsdoctags":[{"name":{"pos":1062,"end":1067,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1056,"end":1061,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>any - This is the event that is triggered when the user drags a file over the dropzone.</li>\\n</ul>\\n"}]},{"name":"drop","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe function takes an event as a parameter, prevents the default action of the event, sets the URL of the image to the\\nfile that was dragged and dropped, sets the text of the drag and drop area to the default text, and sets the\\ndragActive variable to false\\n\\n","description":"<p>The function takes an event as a parameter, prevents the default action of the event, sets the URL of the image to the\\nfile that was dragged and dropped, sets the text of the drag and drop area to the default text, and sets the\\ndragActive variable to false</p>\\n","jsdoctags":[{"name":{"pos":1925,"end":1930,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1919,"end":1924,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>any - This is the event that is triggered when the user drags and drops a file.</li>\\n</ul>\\n"}]},{"name":"selectFile","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe function takes an event as an argument, and then sets the url of the file to the first file in the event\'s\\ntarget\'s files array\\n\\n","description":"<p>The function takes an event as an argument, and then sets the url of the file to the first file in the event&#39;s\\ntarget&#39;s files array</p>\\n","jsdoctags":[{"name":{"pos":3028,"end":3033,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":3022,"end":3027,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>any - The event that is triggered when the user selects a file.</li>\\n</ul>\\n"}]},{"name":"setUrl","args":[{"name":"file","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIt takes a file as an argument, checks if the file type is valid, and if it is, it creates a new FileReader object,\\nsets the onload function to set the fileUrl to the result of the fileReader, sets the selectedFile to the file, and\\ncalls the upload function\\n\\n","description":"<p>It takes a file as an argument, checks if the file type is valid, and if it is, it creates a new FileReader object,\\nsets the onload function to set the fileUrl to the result of the fileReader, sets the selectedFile to the file, and\\ncalls the upload function</p>\\n","jsdoctags":[{"name":{"pos":2479,"end":2483,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"file"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2473,"end":2478,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>any - this is the file that is selected by the user.</li>\\n</ul>\\n"}]},{"name":"upload","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWe create a new FormData object, append the selected file to it, and then send it to the server\\n","description":"<p>We create a new FormData object, append the selected file to it, and then send it to the server</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\n\\n@Component({\\n  selector: \'base-upload-image\',\\n  templateUrl: \'./upload-image.component.html\',\\n  styleUrls: [\'./upload-image.component.scss\'],\\n})\\nexport class UploadImageComponent {\\n  @Input() id: string;\\n  @Input() name: string;\\n  @Input() label?: string;\\n  @Input() supportText = \'Supports: JPEG, JPG, PNG\';\\n  @Input() required = false;\\n  @Input() dragText = \'Drag & Drop\';\\n  @Input() validExtensions = [\'image/jpeg\', \'image/jpg\', \'image/png\'];\\n  @Input() control: any;\\n  @Input() url = \'http://localhost:3000\';\\n  @Input() uploadPath = \'/files/upload\';\\n  @Input() deletePath = \'/files/\';\\n  @Input() path = \'/files/\';\\n  dragActive = false;\\n  selectedFile: File;\\n  fileUrl: string;\\n\\n  constructor(private httpClient: HttpClient) {}\\n\\n  /**\\n   * The dragOver function is called when the user drags a file over the dropzone. It prevents the default action of the\\n   * event, and sets the dragText to \'Release to Upload\' and the dragActive to true\\n   *\\n   * @param event - any - This is the event that is triggered when the user drags a file over the dropzone.\\n   */\\n  dragOver(event: any) {\\n    event.preventDefault();\\n    this.dragText = \'Release to Upload\';\\n    this.dragActive = true;\\n  }\\n\\n  /**\\n   * When the user drags a file over the drop zone, the dragActive variable is set to true, which will change the color of\\n   * the drop zone to green\\n   *\\n   * @param event - The event object that is passed to the dragLeave event.\\n   */\\n  dragLeave(event: any) {\\n    this.dragText = \'Drag & Drop\';\\n    this.dragActive = false;\\n  }\\n\\n  /**\\n   * The function takes an event as a parameter, prevents the default action of the event, sets the URL of the image to the\\n   * file that was dragged and dropped, sets the text of the drag and drop area to the default text, and sets the\\n   * dragActive variable to false\\n   *\\n   * @param event - any - This is the event that is triggered when the user drags and drops a file.\\n   */\\n  drop(event: any) {\\n    event.preventDefault();\\n    this.setUrl(event.dataTransfer.files[0]);\\n    this.dragText = \'Drag & Drop\';\\n    this.dragActive = false;\\n  }\\n\\n  /**\\n   * It takes a file as an argument, checks if the file type is valid, and if it is, it creates a new FileReader object,\\n   * sets the onload function to set the fileUrl to the result of the fileReader, sets the selectedFile to the file, and\\n   * calls the upload function\\n   *\\n   * @param file - any - this is the file that is selected by the user.\\n   */\\n  setUrl(file: any) {\\n    if (this.validExtensions.includes(file.type)) {\\n      const fileReader = new FileReader();\\n      fileReader.onload = () => {\\n        this.fileUrl = fileReader.result as string;\\n        this.selectedFile = file;\\n        this.upload();\\n      };\\n      fileReader.readAsDataURL(file);\\n    }\\n  }\\n\\n  /**\\n   * The function takes an event as an argument, and then sets the url of the file to the first file in the event\'s\\n   * target\'s files array\\n   *\\n   * @param event - any - The event that is triggered when the user selects a file.\\n   */\\n  selectFile(event: any) {\\n    this.setUrl(event.target.files[0]);\\n  }\\n\\n  /**\\n   * We create a new FormData object, append the selected file to it, and then send it to the server\\n   */\\n  upload() {\\n    const data = new FormData();\\n    data.append(\'file\', this.selectedFile);\\n    this.httpClient.post(this.url + this.uploadPath, data).subscribe((result: any) => {\\n      if (result?.id) {\\n        this.control.setValue(result.id);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * It deletes the file from the server and sets the selectedFile and fileUrl to null\\n   *\\n   * @param [id] - The id of the file to delete.\\n   */\\n  deleteFile(id?: string) {\\n    this.selectedFile = null;\\n    this.fileUrl = null;\\n\\n    if (id) {\\n      this.httpClient.delete(this.url + this.deletePath + id).subscribe((result) => {\\n        this.selectedFile = null;\\n        this.fileUrl = null;\\n        this.control.setValue(\'\');\\n      });\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".required:after {\\n  content: \' *\';\\n}\\n\\n.drag-area {\\n  height: 400px;\\n  border: 2px dashed #e1e1e1;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 10px auto;\\n  padding: 20px;\\n\\n  img {\\n    height: 100%;\\n    max-height: 300px;\\n    max-width: 100%;\\n  }\\n\\n  .btn-danger {\\n    margin-top: auto;\\n  }\\n\\n  .icon {\\n    font-size: 50px;\\n    color: var(--bs-primary);\\n  }\\n\\n  .header {\\n    font-size: 20px;\\n    font-weight: 500;\\n  }\\n\\n  .support {\\n    font-size: 12px;\\n    color: #e1e1e1;\\n    margin: 10px 0 15px 0;\\n  }\\n\\n  .button {\\n    font-size: 20px;\\n    font-weight: 500;\\n    color: var(--bs-primary);\\n    cursor: pointer;\\n  }\\n}\\n\\n.active {\\n  border: 2px solid var(--bs-primary);\\n}\\n","styleUrl":"./upload-image.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"mt-3\\">\\n  <label [for]=\\"id\\" class=\\"form-label\\" [ngClass]=\\"{ required: required }\\" *ngIf=\\"label\\">{{ label }}</label>\\n  <div\\n    class=\\"drag-area\\"\\n    (dragover)=\\"dragOver($event)\\"\\n    (dragleave)=\\"dragLeave($event)\\"\\n    (drop)=\\"drop($event)\\"\\n    [ngClass]=\\"{ active: dragActive }\\"\\n  >\\n    <ng-container *ngIf=\\"selectedFile && !control?.value\\">\\n      <img [src]=\\"fileUrl\\" *ngIf=\\"selectedFile\\" />\\n      <button class=\\"btn btn-danger\\" (click)=\\"deleteFile()\\">Löschen</button>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\"control?.value\\">\\n      <img [src]=\\"url + path + control?.value\\" />\\n      <button class=\\"btn btn-danger\\" (click)=\\"deleteFile(control?.value)\\">Löschen</button>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\"!selectedFile && !control?.value\\">\\n      <div class=\\"icon\\">\\n        <i class=\\"bi bi-images\\"></i>\\n      </div>\\n\\n      <span class=\\"header\\">{{ dragText }}</span>\\n      <span class=\\"header\\">or <span class=\\"button\\" (click)=\\"fileInput.click()\\">browse</span></span>\\n      <input type=\\"file\\" (change)=\\"selectFile($event)\\" hidden #fileInput />\\n      <span class=\\"support\\">{{ supportText }}</span>\\n    </ng-container>\\n  </div>\\n</div>\\n"}],"modules":[{"name":"BaseCMSModule","id":"module-BaseCMSModule-3a8ba18bfbea4906f82b5466b54e402d5e7d19a6a32f762f1909c7841c7f9ed8eb25fcd08d198b077eea04a5c604b2069fedb2a28bef167343651b5effddcfe6","description":"","deprecationMessage":"","deprecated":false,"file":"projects/ng-base/base-cms/base-cms.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { BaseCmsComponent } from \'./pages/base-cms/base-cms.component\';\\nimport { BaseCMSRoutingModule } from \'./base-cms-routing.module\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\nimport { BASE_CMS_MODULE_CONFIG, BaseCMSModuleConfig } from \'./interfaces/base-cms-module-config.interface\';\\n\\nexport function CMSConfigFactory() {\\n  return {\\n    modelConfig: {},\\n    fieldConfig: {},\\n    branding: true,\\n    logging: false,\\n    ...BaseCMSModule.config,\\n  };\\n}\\n\\n@NgModule({\\n  imports: [\\n    // Modules\\n    CommonModule,\\n    ReactiveFormsModule,\\n    BaseCMSRoutingModule,\\n    BaseComponentsModule,\\n  ],\\n  declarations: [BaseCmsComponent],\\n  exports: [],\\n  providers: [\\n    {\\n      provide: BASE_CMS_MODULE_CONFIG,\\n      useFactory: CMSConfigFactory,\\n    },\\n  ],\\n})\\nexport class BaseCMSModule {\\n  static config: BaseCMSModuleConfig;\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BaseCmsComponent"}]},{"type":"imports","elements":[{"name":"BaseCMSRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BaseCMSRoutingModule","id":"module-BaseCMSRoutingModule-eef728caa76e1444d7f4e4f61a7386b591d306b63b97db8609b9c92acb71239303b626b715f8e7274003fb034ecff0891358a1c136aa57c03d0679be1e090cf1","description":"","deprecationMessage":"","deprecated":false,"file":"projects/ng-base/base-cms/base-cms-routing.module.ts","methods":[],"sourceCode":"import { RouterModule, Routes } from \'@angular/router\';\\nimport { NgModule } from \'@angular/core\';\\nimport { BaseCmsComponent } from \'./pages/base-cms/base-cms.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BaseCmsComponent,\\n  },\\n  {\\n    path: \':modelName\',\\n    component: BaseCmsComponent,\\n  },\\n  {\\n    path: \':modelName/:id\',\\n    component: BaseCmsComponent,\\n  },\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule],\\n})\\nexport class BaseCMSRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BaseComponentsModule","id":"module-BaseComponentsModule-b4a9ba87c140fe7e38ef829fb76d8ce12e9b8aeca2b0e3aaa760ccc5f492f4e2e43095acc7389616bc75e16d8dfa0991af9723356202ada7a226a0c24e609d1d","description":"","deprecationMessage":"","deprecated":false,"file":"projects/ng-base/base-components/base-components.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { InputComponent } from \'./components/input/input.component\';\\nimport { SelectComponent } from \'./components/select/select.component\';\\nimport { CheckboxComponent } from \'./components/checkbox/checkbox.component\';\\nimport { TextareaComponent } from \'./components/textarea/textarea.component\';\\nimport { ToastComponent } from \'./components/toast/toast.component\';\\nimport { TagsComponent } from \'./components/tags/tags.component\';\\nimport { LoadingBarComponent } from \'./components/loading-bar/loading-bar.component\';\\nimport { SkeletonLoaderComponent } from \'./components/skeleton-loader/skeleton-loader.component\';\\nimport { BreadcrumbComponent } from \'./components/breadcrumb/breadcrumb.component\';\\nimport { ModelTableComponent } from \'./components/model-table/model-table.component\';\\nimport { ModelFormComponent } from \'./components/model-form/model-form.component\';\\nimport { ModelFormSubComponent } from \'./components/model-form-sub/model-form-sub.component\';\\nimport { UploadImageComponent } from \'./components/upload-image/upload-image.component\';\\nimport { RefenceInputComponent } from \'./components/refence-input/refence-input.component\';\\n\\n// Modules\\nconst imports = [FormsModule, ReactiveFormsModule, CommonModule];\\n\\n// Imported and exported elements\\nconst elements = [\\n  // Components\\n  InputComponent,\\n  SelectComponent,\\n  CheckboxComponent,\\n  TextareaComponent,\\n  ToastComponent,\\n  TagsComponent,\\n  LoadingBarComponent,\\n  SkeletonLoaderComponent,\\n  BreadcrumbComponent,\\n  ModelFormComponent,\\n  ModelTableComponent,\\n  ModelFormSubComponent,\\n  UploadImageComponent,\\n  RefenceInputComponent,\\n];\\n\\n@NgModule({\\n  declarations: elements,\\n  imports,\\n  exports: elements,\\n})\\nexport class BaseComponentsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BaseModule","id":"module-BaseModule-3db54c1f5af27a6b008074dc2b00f425ad0882e9e996a801dfc38a42c1e6262665a8016abf82f748ed10d94eecf97e59e190bcc703845a7343ca20d75285d8b4","description":"<p>Base module</p>\\n","deprecationMessage":"","deprecated":false,"file":"projects/ng-base/src/base.module.ts","methods":[{"name":"forRoot","args":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","defaultValue":"{}"},{"name":"AppAuthService","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"ModuleWithProviders<BaseModule>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet configuration of base module in root module of the app\\n","description":"<p>Set configuration of base module in root module of the app</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}},{"name":"AppAuthService","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"sourceCode":"import { APOLLO_OPTIONS, ApolloModule } from \'apollo-angular\';\\nimport { HttpLink } from \'apollo-angular/http\';\\nimport { ModuleWithProviders, NgModule, Provider } from \'@angular/core\';\\n\\nimport { apolloOptionsFactory } from \'./factories/apollo-options.factory\';\\nimport { ContextMenuDirective } from \'./directives/context-menu.directive\';\\nimport { LazyLoadDirective } from \'./directives/lazy-load.directive\';\\nimport { MatchHeightDirective } from \'./directives/match-height.directive\';\\nimport { ResizableDirective } from \'./directives/resizable.directive\';\\nimport { EllipsesPipe } from \'./pipes/ellipses.pipe\';\\nimport { SafeHtmlPipe } from \'./pipes/safe-html.pipe\';\\nimport { DateAgoPipe } from \'./pipes/date-ago.pipe\';\\nimport { AuthService, BaseModuleConfig, BASE_MODULE_CONFIG, WsService } from \'@lenne.tech/ng-base/shared\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\n\\n// Imported and exported elements\\nconst elements = [\\n  // Directives\\n  ContextMenuDirective,\\n  LazyLoadDirective,\\n  MatchHeightDirective,\\n  ResizableDirective,\\n\\n  // Pipes\\n  EllipsesPipe,\\n  SafeHtmlPipe,\\n  DateAgoPipe,\\n];\\n\\n/**\\n * Base module\\n */\\n@NgModule({\\n  imports: [ApolloModule, HttpClientModule],\\n  declarations: elements,\\n  exports: [...elements, ApolloModule, HttpClientModule],\\n})\\nexport class BaseModule {\\n  /**\\n   * Set configuration of base module in root module of the app\\n   */\\n  static forRoot(baseModuleConfig: BaseModuleConfig = {}, AppAuthService?): ModuleWithProviders<BaseModule> {\\n    // Default config\\n    const config = {\\n      apiUrl: \'\',\\n      authGuardRedirectUrl: \'/auth\',\\n      logging: false,\\n      version: null,\\n      prefix: null,\\n      scrollDetectionOffset: 200,\\n      scrollOffset: 100,\\n      storageType: \'local\',\\n      ...baseModuleConfig,\\n    };\\n\\n    if (config.logging) {\\n      console.log(\'Config:\', config);\\n    }\\n\\n    // Prepare providers\\n    const providers: Provider[] = [\\n      {\\n        provide: BASE_MODULE_CONFIG,\\n        useValue: config,\\n      },\\n    ];\\n\\n    // Add apollo features if API URL is set\\n    if (baseModuleConfig.apiUrl) {\\n      providers.push({\\n        provide: APOLLO_OPTIONS,\\n        useFactory: apolloOptionsFactory,\\n        deps: [BASE_MODULE_CONFIG, HttpLink, AppAuthService ? AppAuthService : AuthService, WsService],\\n      });\\n    } else if (config.logging) {\\n      console.log(\'apiUrl is missing, ApolloLink is not initialized\');\\n    }\\n\\n    // Return root module\\n    return {\\n      ngModule: BaseModule,\\n      providers,\\n    };\\n  }\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BasePrototypeModule","id":"module-BasePrototypeModule-4ffae999c1605e3107a9f4bb3b1f49b582160fb97cf7cb763d7e9b7e985ac5f2cf0fb2f1e773fc1a079c8df6251defcdfeaab717b206f5f8ad8d2de31fb71af5","description":"","deprecationMessage":"","deprecated":false,"file":"projects/ng-base/base-prototype/base-prototype.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule } from \'@angular/router\';\\n\\nimport { BaseModule } from \'@lenne.tech/ng-base\';\\nimport { BaseComponentsModule } from \'@lenne.tech/ng-base/base-components\';\\n\\nimport { LoginComponent } from \'./pages/login/login.component\';\\nimport { RegisterComponent } from \'./pages/register/register.component\';\\nimport { ForgotPasswordComponent } from \'./pages/forgot-password/forgot-password.component\';\\nimport { ProfileComponent } from \'./pages/profile/profile.component\';\\n\\n// Modules\\nconst imports = [BaseModule, FormsModule, RouterModule, ReactiveFormsModule, CommonModule, BaseComponentsModule];\\n\\n// Imported and exported elements\\nconst elements = [\\n  // Components\\n  LoginComponent,\\n  RegisterComponent,\\n  ForgotPasswordComponent,\\n  ProfileComponent,\\n];\\n\\n@NgModule({\\n  declarations: elements,\\n  imports,\\n  exports: elements,\\n})\\nexport class BasePrototypeModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"imports","elements":[{"name":"BaseModule"}]},{"type":"exports","elements":[{"name":"BreadcrumbComponent"},{"name":"CheckboxComponent"},{"name":"InputComponent"},{"name":"LoadingBarComponent"},{"name":"ModelFormComponent"},{"name":"ModelFormSubComponent"},{"name":"ModelTableComponent"},{"name":"RefenceInputComponent"},{"name":"SelectComponent"},{"name":"SkeletonLoaderComponent"},{"name":"TagsComponent"},{"name":"TextareaComponent"},{"name":"ToastComponent"},{"name":"UploadImageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"Avatar","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"BASE_CMS_MODULE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken(\'BASE_CMS_MODULE_CONFIG\')"},{"name":"BASE_MODULE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/shared/interfaces/base-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken(\'BASE_MODULE_CONFIG\')"},{"name":"ColorInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"DateAndTimeInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DateInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/base-components.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Components\\n  InputComponent,\\n  SelectComponent,\\n  CheckboxComponent,\\n  TextareaComponent,\\n  ToastComponent,\\n  TagsComponent,\\n  LoadingBarComponent,\\n  SkeletonLoaderComponent,\\n  BreadcrumbComponent,\\n  ModelFormComponent,\\n  ModelTableComponent,\\n  ModelFormSubComponent,\\n  UploadImageComponent,\\n  RefenceInputComponent,\\n]"},{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/base-prototype.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Components\\n  LoginComponent,\\n  RegisterComponent,\\n  ForgotPasswordComponent,\\n  ProfileComponent,\\n]"},{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/src/base.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Directives\\n  ContextMenuDirective,\\n  LazyLoadDirective,\\n  MatchHeightDirective,\\n  ResizableDirective,\\n\\n  // Pipes\\n  EllipsesPipe,\\n  SafeHtmlPipe,\\n  DateAgoPipe,\\n]"},{"name":"EmailInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"FileInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"imports","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/base-components.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[FormsModule, ReactiveFormsModule, CommonModule]"},{"name":"imports","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/base-prototype.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[BaseModule, FormsModule, RouterModule, ReactiveFormsModule, CommonModule, BaseComponentsModule]"},{"name":"NumberInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"PasswordInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"PhoneInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Rectangle","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"SearchInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<CheckboxComponent>","defaultValue":"(args: CheckboxComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<InputComponent>","defaultValue":"(args: InputComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<LoadingBarComponent>","defaultValue":"(args: LoadingBarComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SelectComponent>","defaultValue":"(args: SelectComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SkeletonLoaderComponent>","defaultValue":"(args: SkeletonLoaderComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TagsComponent>","defaultValue":"(args: TagsComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TextareaComponent>","defaultValue":"(args: TextareaComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ToastWrapperComponent>","defaultValue":"(args: ToastWrapperComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ForgotPasswordComponent>","defaultValue":"(args: ForgotPasswordComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<LoginComponent>","defaultValue":"(args: LoginComponent) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<RegisterComponent>","defaultValue":"(args: RegisterComponent) => ({\\n  props: args,\\n})"},{"name":"TimeInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"toastAnimation","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"trigger(\'toastAnimation\', [\\n  transition(\'* <=> *\', [\\n    query(\\n      \':enter\',\\n      [style({ transform: \'translateX(100%)\' }), animate(\'200ms ease-in\', style({ transform: \'translateX(0%)\' }))],\\n      { optional: true }\\n    ),\\n    query(\':leave\', animate(\'200ms ease-in\', style({ transform: \'translateX(100%)\' })), { optional: true }),\\n  ]),\\n])"},{"name":"WithOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"functions":[{"name":"apolloOptionsFactory","file":"projects/ng-base/src/factories/apollo-options.factory.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Factory for apollo-angular options</p>\\n","args":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""},{"name":"httpLink","type":"HttpLink","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"httpLink","type":"HttpLink","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"calcDateDiff","file":"projects/ng-base/src/functions/datediff.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"endDay","type":"Date","deprecated":false,"deprecationMessage":"","defaultValue":"new Date(2021, 12, 1)"}],"returnType":"TimeComponents","jsdoctags":[{"name":"endDay","type":"Date","deprecated":false,"deprecationMessage":"","defaultValue":"new Date(2021, 12, 1)","tagName":{"text":"param"}}]},{"name":"CMSConfigFactory","file":"projects/ng-base/base-cms/base-cms.module.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"createRestartableClient","file":"projects/ng-base/shared/functions/ws-client.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"options","type":"ClientOptions","deprecated":false,"deprecationMessage":""}],"returnType":"RestartableClient","jsdoctags":[{"name":"options","type":"ClientOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"debounce","file":"projects/ng-base/src/decorators/debounce.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"delay","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"300"}],"returnType":"MethodDecorator","jsdoctags":[{"name":"delay","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"300","tagName":{"text":"param"}}]}],"typealiases":[{"name":"GraphQLFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | string[] | GraphQLFieldsObject","file":"projects/ng-base/shared/types/graphql-fields.type.ts","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL fields</p>\\n","kind":186},{"name":"IFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | string[] | IFieldObject","file":"projects/ng-base/shared/interfaces/field.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL fields</p>\\n","kind":186},{"name":"StorageType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"local\\" | \\"session\\"","file":"projects/ng-base/shared/types/storage.type.ts","deprecated":false,"deprecationMessage":"","description":"<p>Storage types</p>\\n","kind":186}],"enumerations":[{"name":"ComparisonOperatorEnum","childs":[{"name":"EQ","deprecated":false,"deprecationMessage":"","value":"EQ"},{"name":"GT","deprecated":false,"deprecationMessage":"","value":"GT"},{"name":"GTE","deprecated":false,"deprecationMessage":"","value":"GTE"},{"name":"IN","deprecated":false,"deprecationMessage":"","value":"IN"},{"name":"LT","deprecated":false,"deprecationMessage":"","value":"LT"},{"name":"LTE","deprecated":false,"deprecationMessage":"","value":"LTE"},{"name":"NE","deprecated":false,"deprecationMessage":"","value":"NE"},{"name":"NIN","deprecated":false,"deprecationMessage":"","value":"NIN"},{"name":"REGEX","deprecated":false,"deprecationMessage":"","value":"REGEX"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Comparison operator enum</p>\\n","file":"projects/ng-base/shared/enums/comparison-operator.enum.ts"},{"name":"GraphQLRequestType","childs":[{"name":"QUERY","deprecated":false,"deprecationMessage":"","value":"query"},{"name":"MUTATION","deprecated":false,"deprecationMessage":"","value":"mutation"},{"name":"SUBSCRIPTION","deprecated":false,"deprecationMessage":"","value":"subscription"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL request type enum</p>\\n","file":"projects/ng-base/shared/enums/graphql-request-type.enum.ts"},{"name":"LogicalOperatorEnum","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"NOR","deprecated":false,"deprecationMessage":"","value":"NOR"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Logical operator enum</p>\\n","file":"projects/ng-base/shared/enums/logical-operator.enum.ts"},{"name":"SkeletonType","childs":[{"name":"LINE","deprecated":false,"deprecationMessage":"","value":"LINE"},{"name":"RECTANGLE","deprecated":false,"deprecationMessage":"","value":"RECTANGLE"},{"name":"AVATAR","deprecated":false,"deprecationMessage":"","value":"AVATAR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/skeleton-type.enum.ts"},{"name":"SortOrderEnum","childs":[{"name":"ASC","deprecated":false,"deprecationMessage":"","value":"ASC"},{"name":"DESC","deprecated":false,"deprecationMessage":"","value":"DESC"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/sort-order.enum.ts"},{"name":"ToastType","childs":[{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"},{"name":"WARNING","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"INFO","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"success"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/toast-type.enum.ts"}],"groupedVariables":{"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts":[{"name":"Avatar","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Rectangle","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SkeletonLoaderComponent>","defaultValue":"(args: SkeletonLoaderComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts":[{"name":"BASE_CMS_MODULE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken(\'BASE_CMS_MODULE_CONFIG\')"}],"projects/ng-base/shared/interfaces/base-module-config.interface.ts":[{"name":"BASE_MODULE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/shared/interfaces/base-module-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken(\'BASE_MODULE_CONFIG\')"}],"projects/ng-base/base-components/components/input/input.component.stories.ts":[{"name":"ColorInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DateAndTimeInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DateInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"EmailInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"FileInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"NumberInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"PasswordInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"PhoneInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SearchInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<InputComponent>","defaultValue":"(args: InputComponent) => ({\\n  props: args,\\n})"},{"name":"TimeInput","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"projects/ng-base/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<CheckboxComponent>","defaultValue":"(args: CheckboxComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<LoadingBarComponent>","defaultValue":"(args: LoadingBarComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-components/components/select/select.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SelectComponent>","defaultValue":"(args: SelectComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-components/components/tags/tags.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TagsComponent>","defaultValue":"(args: TagsComponent) => ({\\n  props: args,\\n})"},{"name":"WithOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TextareaComponent>","defaultValue":"(args: TextareaComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-components/components/toast/toast.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ToastWrapperComponent>","defaultValue":"(args: ToastWrapperComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ForgotPasswordComponent>","defaultValue":"(args: ForgotPasswordComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-prototype/pages/login/login.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<LoginComponent>","defaultValue":"(args: LoginComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-prototype/pages/register/register.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<RegisterComponent>","defaultValue":"(args: RegisterComponent) => ({\\n  props: args,\\n})"}],"projects/ng-base/base-components/base-components.module.ts":[{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/base-components.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Components\\n  InputComponent,\\n  SelectComponent,\\n  CheckboxComponent,\\n  TextareaComponent,\\n  ToastComponent,\\n  TagsComponent,\\n  LoadingBarComponent,\\n  SkeletonLoaderComponent,\\n  BreadcrumbComponent,\\n  ModelFormComponent,\\n  ModelTableComponent,\\n  ModelFormSubComponent,\\n  UploadImageComponent,\\n  RefenceInputComponent,\\n]"},{"name":"imports","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/base-components.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[FormsModule, ReactiveFormsModule, CommonModule]"}],"projects/ng-base/base-prototype/base-prototype.module.ts":[{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/base-prototype.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Components\\n  LoginComponent,\\n  RegisterComponent,\\n  ForgotPasswordComponent,\\n  ProfileComponent,\\n]"},{"name":"imports","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-prototype/base-prototype.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[BaseModule, FormsModule, RouterModule, ReactiveFormsModule, CommonModule, BaseComponentsModule]"}],"projects/ng-base/src/base.module.ts":[{"name":"elements","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/src/base.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  // Directives\\n  ContextMenuDirective,\\n  LazyLoadDirective,\\n  MatchHeightDirective,\\n  ResizableDirective,\\n\\n  // Pipes\\n  EllipsesPipe,\\n  SafeHtmlPipe,\\n  DateAgoPipe,\\n]"}],"projects/ng-base/base-components/components/toast/toast.component.ts":[{"name":"toastAnimation","ctype":"miscellaneous","subtype":"variable","file":"projects/ng-base/base-components/components/toast/toast.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"trigger(\'toastAnimation\', [\\n  transition(\'* <=> *\', [\\n    query(\\n      \':enter\',\\n      [style({ transform: \'translateX(100%)\' }), animate(\'200ms ease-in\', style({ transform: \'translateX(0%)\' }))],\\n      { optional: true }\\n    ),\\n    query(\':leave\', animate(\'200ms ease-in\', style({ transform: \'translateX(100%)\' })), { optional: true }),\\n  ]),\\n])"}]},"groupedFunctions":{"projects/ng-base/src/factories/apollo-options.factory.ts":[{"name":"apolloOptionsFactory","file":"projects/ng-base/src/factories/apollo-options.factory.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>Factory for apollo-angular options</p>\\n","args":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":""},{"name":"httpLink","type":"HttpLink","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"baseModuleConfig","type":"BaseModuleConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"httpLink","type":"HttpLink","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"wsService","type":"WsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"projects/ng-base/src/functions/datediff.function.ts":[{"name":"calcDateDiff","file":"projects/ng-base/src/functions/datediff.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"endDay","type":"Date","deprecated":false,"deprecationMessage":"","defaultValue":"new Date(2021, 12, 1)"}],"returnType":"TimeComponents","jsdoctags":[{"name":"endDay","type":"Date","deprecated":false,"deprecationMessage":"","defaultValue":"new Date(2021, 12, 1)","tagName":{"text":"param"}}]}],"projects/ng-base/base-cms/base-cms.module.ts":[{"name":"CMSConfigFactory","file":"projects/ng-base/base-cms/base-cms.module.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}],"projects/ng-base/shared/functions/ws-client.function.ts":[{"name":"createRestartableClient","file":"projects/ng-base/shared/functions/ws-client.function.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"options","type":"ClientOptions","deprecated":false,"deprecationMessage":""}],"returnType":"RestartableClient","jsdoctags":[{"name":"options","type":"ClientOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"projects/ng-base/src/decorators/debounce.decorator.ts":[{"name":"debounce","file":"projects/ng-base/src/decorators/debounce.decorator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"delay","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"300"}],"returnType":"MethodDecorator","jsdoctags":[{"name":"delay","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"300","tagName":{"text":"param"}}]}]},"groupedEnumerations":{"projects/ng-base/shared/enums/comparison-operator.enum.ts":[{"name":"ComparisonOperatorEnum","childs":[{"name":"EQ","deprecated":false,"deprecationMessage":"","value":"EQ"},{"name":"GT","deprecated":false,"deprecationMessage":"","value":"GT"},{"name":"GTE","deprecated":false,"deprecationMessage":"","value":"GTE"},{"name":"IN","deprecated":false,"deprecationMessage":"","value":"IN"},{"name":"LT","deprecated":false,"deprecationMessage":"","value":"LT"},{"name":"LTE","deprecated":false,"deprecationMessage":"","value":"LTE"},{"name":"NE","deprecated":false,"deprecationMessage":"","value":"NE"},{"name":"NIN","deprecated":false,"deprecationMessage":"","value":"NIN"},{"name":"REGEX","deprecated":false,"deprecationMessage":"","value":"REGEX"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Comparison operator enum</p>\\n","file":"projects/ng-base/shared/enums/comparison-operator.enum.ts"}],"projects/ng-base/shared/enums/graphql-request-type.enum.ts":[{"name":"GraphQLRequestType","childs":[{"name":"QUERY","deprecated":false,"deprecationMessage":"","value":"query"},{"name":"MUTATION","deprecated":false,"deprecationMessage":"","value":"mutation"},{"name":"SUBSCRIPTION","deprecated":false,"deprecationMessage":"","value":"subscription"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL request type enum</p>\\n","file":"projects/ng-base/shared/enums/graphql-request-type.enum.ts"}],"projects/ng-base/shared/enums/logical-operator.enum.ts":[{"name":"LogicalOperatorEnum","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"NOR","deprecated":false,"deprecationMessage":"","value":"NOR"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>Logical operator enum</p>\\n","file":"projects/ng-base/shared/enums/logical-operator.enum.ts"}],"projects/ng-base/shared/enums/skeleton-type.enum.ts":[{"name":"SkeletonType","childs":[{"name":"LINE","deprecated":false,"deprecationMessage":"","value":"LINE"},{"name":"RECTANGLE","deprecated":false,"deprecationMessage":"","value":"RECTANGLE"},{"name":"AVATAR","deprecated":false,"deprecationMessage":"","value":"AVATAR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/skeleton-type.enum.ts"}],"projects/ng-base/shared/enums/sort-order.enum.ts":[{"name":"SortOrderEnum","childs":[{"name":"ASC","deprecated":false,"deprecationMessage":"","value":"ASC"},{"name":"DESC","deprecated":false,"deprecationMessage":"","value":"DESC"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/sort-order.enum.ts"}],"projects/ng-base/shared/enums/toast-type.enum.ts":[{"name":"ToastType","childs":[{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"},{"name":"WARNING","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"INFO","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"success"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"projects/ng-base/shared/enums/toast-type.enum.ts"}]},"groupedTypeAliases":{"projects/ng-base/shared/types/graphql-fields.type.ts":[{"name":"GraphQLFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | string[] | GraphQLFieldsObject","file":"projects/ng-base/shared/types/graphql-fields.type.ts","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL fields</p>\\n","kind":186}],"projects/ng-base/shared/interfaces/field.interface.ts":[{"name":"IFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | string[] | IFieldObject","file":"projects/ng-base/shared/interfaces/field.interface.ts","deprecated":false,"deprecationMessage":"","description":"<p>GraphQL fields</p>\\n","kind":186}],"projects/ng-base/shared/types/storage.type.ts":[{"name":"StorageType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"local\\" | \\"session\\"","file":"projects/ng-base/shared/types/storage.type.ts","deprecated":false,"deprecationMessage":"","description":"<p>Storage types</p>\\n","kind":186}]}},"routes":[],"coverage":{"count":20,"status":"low","files":[{"filePath":"projects/ng-base/base-cms/base-cms.module.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"CMSConfigFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts","type":"interface","linktype":"interface","name":"BaseCMSModuleConfig","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ng-base/base-cms/interfaces/base-cms-module-config.interface.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BASE_CMS_MODULE_CONFIG","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-cms/pages/base-cms/base-cms.component.ts","type":"component","linktype":"component","name":"BaseCmsComponent","coveragePercent":46,"coverageCount":"7/15","status":"medium"},{"filePath":"projects/ng-base/base-components/base-components.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"elements","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/base-components.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"imports","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/breadcrumb/breadcrumb.component.ts","type":"component","linktype":"component","name":"BreadcrumbComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"CheckboxComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ColorInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DateAndTimeInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DateInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EmailInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FileInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NumberInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PasswordInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PhoneInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SearchInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TimeInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/input/input.component.ts","type":"component","linktype":"component","name":"InputComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/loading-bar/loading-bar.component.ts","type":"component","linktype":"component","name":"LoadingBarComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/model-form-sub/model-form-sub.component.ts","type":"component","linktype":"component","name":"ModelFormSubComponent","coveragePercent":20,"coverageCount":"2/10","status":"low"},{"filePath":"projects/ng-base/base-components/components/model-form/model-form.component.ts","type":"component","linktype":"component","name":"ModelFormComponent","coveragePercent":30,"coverageCount":"8/26","status":"medium"},{"filePath":"projects/ng-base/base-components/components/model-table/model-table.component.ts","type":"component","linktype":"component","name":"ModelTableComponent","coveragePercent":20,"coverageCount":"5/24","status":"low"},{"filePath":"projects/ng-base/base-components/components/refence-input/refence-input.component.ts","type":"component","linktype":"component","name":"RefenceInputComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/ng-base/base-components/components/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/select/select.component.ts","type":"component","linktype":"component","name":"SelectComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/ng-base/base-components/components/select/select.component.ts","type":"interface","linktype":"interface","name":"Option","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Avatar","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Rectangle","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.ts","type":"component","linktype":"component","name":"SkeletonLoaderComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/tags/tags.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/tags/tags.component.ts","type":"component","linktype":"component","name":"TagsComponent","coveragePercent":26,"coverageCount":"5/19","status":"medium"},{"filePath":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/textarea/textarea.component.ts","type":"component","linktype":"component","name":"TextareaComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","type":"component","linktype":"component","name":"ToastWrapperComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/toast/toast.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/toast/toast.component.ts","type":"component","linktype":"component","name":"ToastComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/ng-base/base-components/components/toast/toast.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"toastAnimation","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-components/components/upload-image/upload-image.component.ts","type":"component","linktype":"component","name":"UploadImageComponent","coveragePercent":29,"coverageCount":"7/24","status":"medium"},{"filePath":"projects/ng-base/base-prototype/base-prototype.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"elements","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/base-prototype.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"imports","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","type":"class","linktype":"classe","name":"MockUserService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.ts","type":"component","linktype":"component","name":"ForgotPasswordComponent","coveragePercent":25,"coverageCount":"2/8","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","type":"class","linktype":"classe","name":"MockUserService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/login/login.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/login/login.component.ts","type":"component","linktype":"component","name":"LoginComponent","coveragePercent":22,"coverageCount":"2/9","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/profile/profile.component.ts","type":"component","linktype":"component","name":"ProfileComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","type":"class","linktype":"classe","name":"MockUserService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/register/register.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/base-prototype/pages/register/register.component.ts","type":"component","linktype":"component","name":"RegisterComponent","coveragePercent":22,"coverageCount":"2/9","status":"low"},{"filePath":"projects/ng-base/shared/classes/auth.class.ts","type":"class","linktype":"classe","name":"Auth","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"projects/ng-base/shared/classes/basic-user.class.ts","type":"class","linktype":"classe","name":"BasicUser","coveragePercent":50,"coverageCount":"6/12","status":"medium"},{"filePath":"projects/ng-base/shared/classes/graphql-enum.class.ts","type":"class","linktype":"classe","name":"GraphQLEnum","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/ng-base/shared/classes/graphql-meta.class.ts","type":"class","linktype":"classe","name":"GraphQLMeta","coveragePercent":80,"coverageCount":"8/10","status":"very-good"},{"filePath":"projects/ng-base/shared/classes/graphql-type.class.ts","type":"class","linktype":"classe","name":"GraphQLType","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"projects/ng-base/shared/classes/helper.class.ts","type":"class","linktype":"classe","name":"Helper","coveragePercent":94,"coverageCount":"16/17","status":"very-good"},{"filePath":"projects/ng-base/shared/classes/sort.class.ts","type":"class","linktype":"classe","name":"Sort","coveragePercent":40,"coverageCount":"2/5","status":"medium"},{"filePath":"projects/ng-base/shared/classes/standard.class.ts","type":"class","linktype":"classe","name":"Standard","coveragePercent":100,"coverageCount":"5/5","status":"very-good"},{"filePath":"projects/ng-base/shared/directives/sort.directive.ts","type":"directive","linktype":"directive","name":"SortDirective","coveragePercent":40,"coverageCount":"2/5","status":"medium"},{"filePath":"projects/ng-base/shared/functions/ws-client.function.ts","type":"interface","linktype":"interface","name":"RestartableClient","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/shared/functions/ws-client.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"createRestartableClient","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/base-module-config.interface.ts","type":"interface","linktype":"interface","name":"BaseModuleConfig","coveragePercent":100,"coverageCount":"11/11","status":"very-good"},{"filePath":"projects/ng-base/shared/interfaces/base-module-config.interface.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BASE_MODULE_CONFIG","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/breadcrumb.interface.ts","type":"interface","linktype":"interface","name":"Breadcrumb","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/can-component-deactivate.interface.ts","type":"interface","linktype":"interface","name":"ICanComponentDeactivate","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/ng-base/shared/interfaces/combined-filter-input.interface.ts","type":"interface","linktype":"interface","name":"CombinedFilterInput","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/ng-base/shared/interfaces/field-object.interface.ts","type":"interface","linktype":"interface","name":"IFieldObject","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/shared/interfaces/filter-input.interface.ts","type":"interface","linktype":"interface","name":"FilterInput","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/ng-base/shared/interfaces/find-args.interface.ts","type":"interface","linktype":"interface","name":"FindArgs","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/graphql-crud-type.interface.ts","type":"interface","linktype":"interface","name":"GraphqlCrudType","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/graphql-fields-object.interface.ts","type":"interface","linktype":"interface","name":"GraphQLFieldsObject","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/shared/interfaces/graphql-options.interface.ts","type":"interface","linktype":"interface","name":"IGraphQLOptions","coveragePercent":16,"coverageCount":"1/6","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/graphql-plus-options.interfacen.ts","type":"interface","linktype":"interface","name":"IGraphQLPlusOptions","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/graphql-type-collection.interface.ts","type":"interface","linktype":"interface","name":"IGraphQLTypeCollection","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/shared/interfaces/single-filter-input.interface.ts","type":"interface","linktype":"interface","name":"SingleFilterInput","coveragePercent":16,"coverageCount":"1/6","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/sort-input.interface.ts","type":"interface","linktype":"interface","name":"SortInput","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/time-components.interface.ts","type":"interface","linktype":"interface","name":"TimeComponents","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ng-base/shared/interfaces/toast.interface.ts","type":"interface","linktype":"interface","name":"Toast","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ng-base/shared/services/auth.service.ts","type":"injectable","linktype":"injectable","name":"AuthService","coveragePercent":60,"coverageCount":"3/5","status":"good"},{"filePath":"projects/ng-base/shared/services/breadcrumb.service.ts","type":"injectable","linktype":"injectable","name":"BreadcrumbService","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"projects/ng-base/shared/services/forms.service.ts","type":"injectable","linktype":"injectable","name":"FormsService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/shared/services/graphql-meta.service.ts","type":"injectable","linktype":"injectable","name":"GraphQLMetaService","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"projects/ng-base/shared/services/graphql-plus.service.ts","type":"injectable","linktype":"injectable","name":"GraphQLPlusService","coveragePercent":55,"coverageCount":"5/9","status":"good"},{"filePath":"projects/ng-base/shared/services/graphql.service.ts","type":"injectable","linktype":"injectable","name":"GraphQLService","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"projects/ng-base/shared/services/image.service.ts","type":"injectable","linktype":"injectable","name":"ImageService","coveragePercent":100,"coverageCount":"3/3","status":"very-good"},{"filePath":"projects/ng-base/shared/services/loader.service.ts","type":"injectable","linktype":"injectable","name":"LoaderService","coveragePercent":20,"coverageCount":"1/5","status":"low"},{"filePath":"projects/ng-base/shared/services/scroll.service.ts","type":"injectable","linktype":"injectable","name":"ScrollService","coveragePercent":100,"coverageCount":"14/14","status":"very-good"},{"filePath":"projects/ng-base/shared/services/storage.service.ts","type":"injectable","linktype":"injectable","name":"StorageService","coveragePercent":100,"coverageCount":"8/8","status":"very-good"},{"filePath":"projects/ng-base/shared/services/toast.service.ts","type":"injectable","linktype":"injectable","name":"ToastService","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/ng-base/shared/services/user.service.ts","type":"injectable","linktype":"injectable","name":"UserService","coveragePercent":50,"coverageCount":"6/12","status":"medium"},{"filePath":"projects/ng-base/shared/services/ws.service.ts","type":"injectable","linktype":"injectable","name":"WsService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ng-base/shared/validators/match.validator.ts","type":"class","linktype":"classe","name":"Validation","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ng-base/src/base.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"elements","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/src/decorators/debounce.decorator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"debounce","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/src/directives/context-menu.directive.ts","type":"directive","linktype":"directive","name":"ContextMenuDirective","coveragePercent":8,"coverageCount":"1/12","status":"low"},{"filePath":"projects/ng-base/src/directives/lazy-load.directive.ts","type":"directive","linktype":"directive","name":"LazyLoadDirective","coveragePercent":11,"coverageCount":"1/9","status":"low"},{"filePath":"projects/ng-base/src/directives/match-height.directive.ts","type":"directive","linktype":"directive","name":"MatchHeightDirective","coveragePercent":11,"coverageCount":"1/9","status":"low"},{"filePath":"projects/ng-base/src/directives/resizable.directive.ts","type":"directive","linktype":"directive","name":"ResizableDirective","coveragePercent":6,"coverageCount":"1/16","status":"low"},{"filePath":"projects/ng-base/src/factories/apollo-options.factory.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"apolloOptionsFactory","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/src/functions/datediff.function.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"calcDateDiff","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/src/guards/auth.guard.ts","type":"guard","linktype":"guard","name":"AuthGuard","coveragePercent":100,"coverageCount":"4/4","status":"very-good"},{"filePath":"projects/ng-base/src/guards/can-deactivate.guard.ts","type":"guard","linktype":"guard","name":"CanDeactivateGuard","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/ng-base/src/guards/logout.guard.ts","type":"guard","linktype":"guard","name":"LogoutGuard","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"projects/ng-base/src/pipes/date-ago.pipe.ts","type":"pipe","linktype":"pipe","name":"DateAgoPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/src/pipes/ellipses.pipe.ts","type":"pipe","linktype":"pipe","name":"EllipsesPipe","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/src/pipes/safe-html.pipe.ts","type":"pipe","linktype":"pipe","name":"SafeHtmlPipe","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ng-base/src/services/fullscreen.service.ts","type":"injectable","linktype":"injectable","name":"FullscreenService","coveragePercent":40,"coverageCount":"2/5","status":"medium"},{"filePath":"projects/ng-base/src/services/seo.service.ts","type":"injectable","linktype":"injectable","name":"SEOService","coveragePercent":71,"coverageCount":"5/7","status":"good"},{"filePath":"projects/ng-base/src/services/seo.service.ts","type":"interface","linktype":"interface","name":"SEOData","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ng-base/src/services/theme.service.ts","type":"injectable","linktype":"injectable","name":"ThemeService","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"projects/ng-base/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ng-base/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.setCompodocJson)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},layout:"centered",docs:{inlineStories:!0,transformSource:function transformSource(src,storyContext){try{return storyContext.storyFn(storyContext).template}catch(e){return null}}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__.h_,{title:"Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("h1",{id:"welcome-to-lennetechng-base"},"Welcome to @lenne.tech/ng-base"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"This is the base library of lenne.Tech for Angular."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("h2",{id:"description"},"Description"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"This library contains all the basics to start a new project in combination with the lenne.Tech Nest Server:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"GraphQL service and elements for easy communication with GraphQL API (via Models)"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"Standard Model with methods for mapping, cloning and comparing models"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"Basic User Model with basic rights handling"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"Loading Service for the subscription of loading processes"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"Storage Service for comfortable saving of data in local storage"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"GraphQL service and elements for easy communication with GraphQL API (via Models)"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"Authentication service for user registration"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("li",{parentName:"ul"},"and much more")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"For setting up a new project we recommend our Angular Starter, which already contains this library and also includes a few sample elements as templates."))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta},"./stories/getting-started.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Meta=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("div",props)}}("Meta"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(Meta,{title:"Getting Started",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("h1",{id:"integration-into-an-angular-project"},"Integration into an Angular project"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Installation"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"cd path/to/your/angular-project\nnpm i @lenne.tech/ng-base\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Include BaseModule into your AppModule"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"...\nBaseModule.forRoot(environment),\n...\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Extend your environment with following options:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"export const environment = {\n  production: false,\n  ...\n  apiUrl: 'http://localhost:3000/graphql',\n  wsUrl: 'ws://localhost:3000/graphql',\n  authGuardRedirectUrl: '/path/to/login', // optional (default: '/auth')\n  prefix: 'prefixForLocalStorageKeys', // optional (default: '')\n  scrollDetectionOffset: 200, // should be >= scrollOffset, optional (default: 200)\n  scrollOffset: 100, // optional (default: 100)\n  storageType: 'local' as StorageType, // optional (default: 'local')\n  version: '0.1', // to set version for storage keys, optional (default: '')\n};\n")))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Getting Started",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta},"./stories/graphql-service.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Meta=function makeShortcode(name){return function MDXDefaultShortcode(props){return console.warn("Component "+name+" was not imported, exported, or provided by MDXProvider as global scope"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("div",props)}}("Meta"),layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(Meta,{title:"Services/GraphQLService",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("h1",{id:"use-our-graphqlservice-and-love-him-️"},"Use our GraphQLService and love him ❤️"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Create new service and extend from GraphQLPlusService"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"...\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService extends GraphQLPlusService {\n\n...\n\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Create first query:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"  login(input: { email: string; password: string }) {\n    return this.graphQl('signIn', {\n      arguments: { input },\n      fields: ['token', { user: ['id', 'firstName', 'lastName', 'email', 'roles'] }],\n      type: GraphQLRequestType.QUERY,\n      loading: true,\n    });\n  }\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"Create first mutation:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("code",{parentName:"pre"},"  register(input: { firstName: string; lastName: string; email: string; password: string }) {\n    return this.graphQl('signUp', {\n      arguments: { input },\n      fields: ['token', { user: ['id', 'firstName', 'lastName', 'email', 'roles'] }],\n      type: GraphQLRequestType.MUTATION,\n      loading: true,\n    });\n  }\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)("p",null,"More coming soon!"))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Services/GraphQLService",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_6__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta},"./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./base-components/components/checkbox/checkbox.component.stories.ts":"./projects/ng-base/base-components/components/checkbox/checkbox.component.stories.ts","./base-components/components/input/input.component.stories.ts":"./projects/ng-base/base-components/components/input/input.component.stories.ts","./base-components/components/loading-bar/loading-bar.component.stories.ts":"./projects/ng-base/base-components/components/loading-bar/loading-bar.component.stories.ts","./base-components/components/select/select.component.stories.ts":"./projects/ng-base/base-components/components/select/select.component.stories.ts","./base-components/components/skeleton-loader/skeleton-loader.component.stories.ts":"./projects/ng-base/base-components/components/skeleton-loader/skeleton-loader.component.stories.ts","./base-components/components/tags/tags.component.stories.ts":"./projects/ng-base/base-components/components/tags/tags.component.stories.ts","./base-components/components/textarea/textarea.component.stories.ts":"./projects/ng-base/base-components/components/textarea/textarea.component.stories.ts","./base-components/components/toast/toast.component.stories.ts":"./projects/ng-base/base-components/components/toast/toast.component.stories.ts","./base-prototype/pages/forgot-password/forgot-password.component.stories.ts":"./projects/ng-base/base-prototype/pages/forgot-password/forgot-password.component.stories.ts","./base-prototype/pages/login/login.component.stories.ts":"./projects/ng-base/base-prototype/pages/login/login.component.stories.ts","./base-prototype/pages/register/register.component.stories.ts":"./projects/ng-base/base-prototype/pages/register/register.component.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./projects/ng-base sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Introduction.stories.mdx":"./stories/Introduction.stories.mdx","./getting-started.stories.mdx":"./stories/getting-started.stories.mdx","./graphql-service.stories.mdx":"./stories/graphql-service.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[910],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);